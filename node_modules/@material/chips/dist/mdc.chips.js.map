{"version":3,"sources":["webpack://mdc.[name]/webpack/universalModuleDefinition","webpack://mdc.[name]/webpack/bootstrap","webpack://mdc.[name]/./packages/mdc-animation/animationframe.ts","webpack://mdc.[name]/./packages/mdc-base/component.ts","webpack://mdc.[name]/./packages/mdc-base/foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/action/adapter.ts","webpack://mdc.[name]/./packages/mdc-chips/action/component-ripple.ts","webpack://mdc.[name]/./packages/mdc-chips/action/component.ts","webpack://mdc.[name]/./packages/mdc-chips/action/constants.ts","webpack://mdc.[name]/./packages/mdc-chips/action/foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/action/index.ts","webpack://mdc.[name]/./packages/mdc-chips/action/primary-foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/action/trailing-foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/action/types.ts","webpack://mdc.[name]/./packages/mdc-chips/chip-set/adapter.ts","webpack://mdc.[name]/./packages/mdc-chips/chip-set/component.ts","webpack://mdc.[name]/./packages/mdc-chips/chip-set/constants.ts","webpack://mdc.[name]/./packages/mdc-chips/chip-set/foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/chip-set/index.ts","webpack://mdc.[name]/./packages/mdc-chips/chip-set/types.ts","webpack://mdc.[name]/./packages/mdc-chips/chip/adapter.ts","webpack://mdc.[name]/./packages/mdc-chips/chip/component.ts","webpack://mdc.[name]/./packages/mdc-chips/chip/constants.ts","webpack://mdc.[name]/./packages/mdc-chips/chip/foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/chip/index.ts","webpack://mdc.[name]/./packages/mdc-chips/chip/types.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip-set/adapter.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip-set/component.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip-set/constants.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip-set/foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip-set/index.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip/adapter.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip/component.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip/constants.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip/foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip/index.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/chip/types.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/index.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/trailingaction/adapter.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/trailingaction/component.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/trailingaction/constants.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/trailingaction/foundation.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/trailingaction/index.ts","webpack://mdc.[name]/./packages/mdc-chips/deprecated/trailingaction/types.ts","webpack://mdc.[name]/./packages/mdc-chips/index.ts","webpack://mdc.[name]/./packages/mdc-dom/announce.ts","webpack://mdc.[name]/./packages/mdc-dom/events.ts","webpack://mdc.[name]/./packages/mdc-dom/keyboard.ts","webpack://mdc.[name]/./packages/mdc-dom/ponyfill.ts","webpack://mdc.[name]/./packages/mdc-ripple/component.ts","webpack://mdc.[name]/./packages/mdc-ripple/constants.ts","webpack://mdc.[name]/./packages/mdc-ripple/foundation.ts","webpack://mdc.[name]/./packages/mdc-ripple/util.ts"],"names":[],"mappings":"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","file":"mdc.chips.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@material/chips\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chips\"] = factory();\n\telse\n\t\troot[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"chips\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/mdc-chips/index.ts\");\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * AnimationFrame provides a user-friendly abstraction around requesting\n * and canceling animation frames.\n */\nexport class AnimationFrame {\n  private readonly rafIDs = new Map<string, number>();\n\n  /**\n   * Requests an animation frame. Cancels any existing frame with the same key.\n   * @param {string} key The key for this callback.\n   * @param {FrameRequestCallback} callback The callback to be executed.\n   */\n  request(key: string, callback: FrameRequestCallback) {\n    this.cancel(key);\n    const frameID = requestAnimationFrame((frame) => {\n      this.rafIDs.delete(key);\n      // Callback must come *after* the key is deleted so that nested calls to\n      // request with the same key are not deleted.\n      callback(frame);\n    });\n    this.rafIDs.set(key, frameID);\n  }\n\n  /**\n   * Cancels a queued callback with the given key.\n   * @param {string} key The key for this callback.\n   */\n  cancel(key: string) {\n    const rafID = this.rafIDs.get(key);\n    if (rafID) {\n      cancelAnimationFrame(rafID);\n      this.rafIDs.delete(key);\n    }\n  }\n\n  /**\n   * Cancels all queued callback.\n   */\n  cancelAll() {\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach((_, key) => {\n      this.cancel(key);\n    });\n  }\n\n  /**\n   * Returns the queue of unexecuted callback keys.\n   */\n  getQueue(): string[] {\n    const queue: string[] = [];\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach((_, key) => {\n      queue.push(key);\n    });\n    return queue;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from './foundation';\nimport {CustomEventListener, EventType, SpecificEventListener} from './types';\n\nexport class MDCComponent<FoundationType extends MDCFoundation> {\n  static attachTo(root: Element): MDCComponent<MDCFoundation<{}>> {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation({}));\n  }\n\n  protected foundation: FoundationType;\n\n  constructor(\n      public root: Element, foundation?: FoundationType, ...args: unknown[]) {\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's\n    // default param so that this.root is defined and can be used within the\n    // foundation class.\n    this.foundation =\n        foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation.init();\n    this.initialSyncWithDOM();\n  }\n\n  /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n  initialize(..._args: Array<unknown>) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  getDefaultFoundation(): FoundationType {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n        'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   */\n  listen<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  listen<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  listen(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.addEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   */\n  unlisten<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  unlisten<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  unlisten(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.removeEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n   */\n  emit<T extends object>(evtType: string, evtData: T, shouldBubble = false) {\n    let evt: CustomEvent<T>;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent<T>(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root.dispatchEvent(evt);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport class MDCFoundation<AdapterType extends {} = {}> {\n  static get cssClasses(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  static get strings(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  static get numbers(): { [key: string]: number } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  static get defaultAdapter(): {} {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  constructor(protected adapter: AdapterType = {} as AdapterType) {}\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\n/**\n * The constructor for MDCFoundation.\n */\nexport interface MDCFoundationConstructor<AdapterType extends object = any> {\n  new(adapter: AdapterType): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * The deprecated constructor for MDCFoundation.\n */\nexport interface MDCFoundationDeprecatedConstructor<AdapterType extends object = any> {\n  readonly cssClasses: Record<string, string>;\n  readonly strings: Record<string, string>;\n  readonly numbers: Record<string, number>;\n  readonly defaultAdapter: AdapterType;\n\n  new(adapter?: Partial<AdapterType>): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * Retrieves the AdapaterType from the provided MDCFoundation generic type.\n */\nexport type MDCFoundationAdapter<T> =\n    T extends MDCFoundation<infer A>? A : never;\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipActionAttributes, MDCChipActionEvents} from './constants';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCChipActionAdapter {\n  emitEvent<D extends object>(name: MDCChipActionEvents, detail: D): void;\n\n  focus(): void;\n\n  getAttribute(attr: MDCChipActionAttributes): string|null;\n\n  getElementID(): string;\n\n  removeAttribute(attr: MDCChipActionAttributes): void;\n\n  setAttribute(attr: MDCChipActionAttributes, value: string): void;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Computes the ripple client rect for the primary action given the raw client\n * rect and the selected width graphic style property.\n */\nexport function computePrimaryActionRippleClientRect(\n    clientRect: DOMRect, graphicSelectedWidthStyleValue: string): DOMRect {\n  // parseInt is banned so we need to manually format and parse the string.\n  const graphicWidth = Number(graphicSelectedWidthStyleValue.replace('px', ''));\n  if (Number.isNaN(graphicWidth)) {\n    return clientRect;\n  }\n  // Can't use the spread operator because it has internal problems\n  return {\n    width: clientRect.width + graphicWidth,\n    height: clientRect.height,\n    top: clientRect.top,\n    right: clientRect.right,\n    bottom: clientRect.bottom,\n    left: clientRect.left\n  } as any;\n}\n\n/**\n * Provides the CSS custom property whose value is read by\n * computePrimaryRippleClientRect. The CSS custom property provides the width\n * of the chip graphic when selected. It is only set for the unselected chip\n * variant without a leadinc icon. In all other cases, it will have no value.\n */\nexport const GRAPHIC_SELECTED_WIDTH_STYLE_PROP =\n    '--mdc-chip-graphic-selected-width';\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {SpecificEventListener} from '@material/base/types';\nimport {closest} from '@material/dom/ponyfill';\nimport {MDCRippleAdapter} from '@material/ripple/adapter';\nimport {MDCRipple, MDCRippleFactory} from '@material/ripple/component';\nimport {MDCRippleFoundation} from '@material/ripple/foundation';\nimport {MDCRippleCapableSurface} from '@material/ripple/types';\n\nimport {MDCChipActionAdapter} from './adapter';\nimport {computePrimaryActionRippleClientRect, GRAPHIC_SELECTED_WIDTH_STYLE_PROP} from './component-ripple';\nimport {MDCChipActionCssClasses, MDCChipActionFocusBehavior, MDCChipActionType} from './constants';\nimport {MDCChipActionFoundation} from './foundation';\nimport {MDCChipPrimaryActionFoundation} from './primary-foundation';\nimport {MDCChipTrailingActionFoundation} from './trailing-foundation';\n\n/**\n * MDCChipActionFactory is used by the parent MDCChip component to initialize\n * chip actions.\n */\nexport type MDCChipActionFactory =\n    (el: Element, foundation?: MDCChipActionFoundation) => MDCChipAction;\n\n/**\n * MDCChipAction provides component encapsulation of the different foundation\n * implementations.\n */\nexport class MDCChipAction extends\n    MDCComponent<MDCChipActionFoundation> implements MDCRippleCapableSurface {\n  static override attachTo(root: Element): MDCChipAction {\n    return new MDCChipAction(root);\n  }\n\n  private readonly rootHTML = this.root as HTMLElement;\n\n  // Assigned in #initialize()\n  private rippleInstance!: MDCRipple;\n  // Assigned in #initialSyncWithDOM()\n  private handleClick!: SpecificEventListener<'click'>;\n  private handleKeydown!: SpecificEventListener<'keydown'>;\n\n  get ripple(): MDCRipple {\n    return this.rippleInstance;\n  }\n\n  override initialize(\n      rippleFactory: MDCRippleFactory = (el, foundation) =>\n          new MDCRipple(el, foundation)) {\n    const rippleAdapter: MDCRippleAdapter = {\n      ...MDCRipple.createAdapter(this),\n      computeBoundingRect: () => this.computeRippleClientRect(),\n    };\n    this.rippleInstance =\n        rippleFactory(this.root, new MDCRippleFoundation(rippleAdapter));\n  }\n\n  override initialSyncWithDOM() {\n    this.handleClick = () => {\n      this.foundation.handleClick();\n    };\n\n    this.handleKeydown = (event: KeyboardEvent) => {\n      this.foundation.handleKeydown(event);\n    };\n\n    this.listen('click', this.handleClick);\n    this.listen('keydown', this.handleKeydown);\n  }\n\n  override destroy() {\n    this.ripple.destroy();\n    this.unlisten('click', this.handleClick);\n    this.unlisten('keydown', this.handleKeydown);\n    super.destroy();\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCChipActionAdapter = {\n      emitEvent: (eventName, eventDetail) => {\n        this.emit(eventName, eventDetail, true /* shouldBubble */);\n      },\n      focus: () => {\n        this.rootHTML.focus();\n      },\n      getAttribute: (attrName) => this.root.getAttribute(attrName),\n      getElementID: () => this.root.id,\n      removeAttribute: (name) => {\n        this.root.removeAttribute(name);\n      },\n      setAttribute: (name, value) => {\n        this.root.setAttribute(name, value);\n      },\n    };\n\n    if (this.root.classList.contains(MDCChipActionCssClasses.TRAILING_ACTION)) {\n      return new MDCChipTrailingActionFoundation(adapter);\n    }\n\n    // Default to the primary foundation\n    return new MDCChipPrimaryActionFoundation(adapter);\n  }\n\n  setDisabled(isDisabled: boolean) {\n    this.foundation.setDisabled(isDisabled);\n  }\n\n  isDisabled(): boolean {\n    return this.foundation.isDisabled();\n  }\n\n  setFocus(behavior: MDCChipActionFocusBehavior) {\n    this.foundation.setFocus(behavior);\n  }\n\n  isFocusable() {\n    return this.foundation.isFocusable();\n  }\n\n  setSelected(isSelected: boolean) {\n    this.foundation.setSelected(isSelected);\n  }\n\n  isSelected(): boolean {\n    return this.foundation.isSelected();\n  }\n\n  isSelectable(): boolean {\n    return this.foundation.isSelectable();\n  }\n\n  actionType(): MDCChipActionType {\n    return this.foundation.actionType();\n  }\n\n  private computeRippleClientRect(): DOMRect {\n    if (this.root.classList.contains(MDCChipActionCssClasses.PRIMARY_ACTION)) {\n      const chipRoot =\n          closest(this.root, `.${MDCChipActionCssClasses.CHIP_ROOT}`);\n      // Return the root client rect since it's better than nothing\n      if (!chipRoot) return this.root.getBoundingClientRect();\n      const graphicWidth = window.getComputedStyle(chipRoot).getPropertyValue(\n          GRAPHIC_SELECTED_WIDTH_STYLE_PROP);\n      return computePrimaryActionRippleClientRect(\n          chipRoot.getBoundingClientRect(), graphicWidth);\n    }\n\n    return this.root.getBoundingClientRect();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * MDCChipActionCssClasses provides the classes to be queried and manipulated on\n * the root.\n */\nexport enum MDCChipActionCssClasses {\n  PRIMARY_ACTION = 'mdc-evolution-chip__action--primary',\n  TRAILING_ACTION = 'mdc-evolution-chip__action--trailing',\n  CHIP_ROOT = 'mdc-evolution-chip',\n}\n\n/**\n * MDCChipActionInteractionTrigger provides detail of the different triggers for\n * action interactions.\n */\nexport enum MDCChipActionInteractionTrigger {\n  UNSPECIFIED,  // Default type\n  CLICK,\n  BACKSPACE_KEY,\n  DELETE_KEY,\n  SPACEBAR_KEY,\n  ENTER_KEY,\n}\n\n/**\n * MDCChipActionType provides the different types of available actions.\n */\nexport enum MDCChipActionType {\n  UNSPECIFIED,  // Default type\n  PRIMARY,\n  TRAILING,\n}\n\n/**\n * MDCChipActionEvents provides the different events emitted by the action.\n */\nexport enum MDCChipActionEvents {\n  INTERACTION = 'MDCChipAction:interaction',\n  NAVIGATION = 'MDCChipAction:navigation',\n}\n\n/**\n * MDCChipActionFocusBehavior provides configurations for focusing or unfocusing\n * an action.\n */\nexport enum MDCChipActionFocusBehavior {\n  FOCUSABLE,\n  FOCUSABLE_AND_FOCUSED,\n  NOT_FOCUSABLE,\n}\n\n/**\n * MDCChipActionAttributes provides the HTML attributes used by the foundation.\n */\nexport enum MDCChipActionAttributes {\n  ARIA_DISABLED = 'aria-disabled',\n  ARIA_HIDDEN = 'aria-hidden',\n  ARIA_SELECTED = 'aria-selected',\n  DATA_DELETABLE = 'data-mdc-deletable',\n  DISABLED = 'disabled',\n  ROLE = 'role',\n  TAB_INDEX = 'tabindex',\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {isNavigationEvent, KEY, normalizeKey} from '@material/dom/keyboard';\n\nimport {MDCChipActionAdapter} from './adapter';\nimport {MDCChipActionAttributes, MDCChipActionEvents, MDCChipActionFocusBehavior, MDCChipActionInteractionTrigger, MDCChipActionType} from './constants';\nimport {MDCChipActionInteractionEventDetail, MDCChipActionNavigationEventDetail} from './types';\n\nconst triggerMap = new Map<string, MDCChipActionInteractionTrigger>();\ntriggerMap.set(KEY.SPACEBAR, MDCChipActionInteractionTrigger.SPACEBAR_KEY);\ntriggerMap.set(KEY.ENTER, MDCChipActionInteractionTrigger.ENTER_KEY);\ntriggerMap.set(KEY.DELETE, MDCChipActionInteractionTrigger.DELETE_KEY);\ntriggerMap.set(KEY.BACKSPACE, MDCChipActionInteractionTrigger.BACKSPACE_KEY);\n\n\n/**\n * MDCChipActionFoundation provides a base abstract foundation for all chip\n * actions.\n */\nexport abstract class MDCChipActionFoundation extends\n    MDCFoundation<MDCChipActionAdapter> {\n  static override get defaultAdapter(): MDCChipActionAdapter {\n    return {\n      emitEvent: () => undefined,\n      focus: () => undefined,\n      getAttribute: () => null,\n      getElementID: () => '',\n      removeAttribute: () => undefined,\n      setAttribute: () => undefined,\n    };\n  }\n\n  constructor(adapter?: Partial<MDCChipActionAdapter>) {\n    super({...MDCChipActionFoundation.defaultAdapter, ...adapter});\n  }\n\n  handleClick() {\n    // Early exit for cases where the click comes from a source other than the\n    // user's pointer (i.e. programmatic click from AT).\n    if (this.isDisabled()) return;\n    this.emitInteraction(MDCChipActionInteractionTrigger.CLICK);\n  }\n\n  handleKeydown(event: KeyboardEvent) {\n    const key = normalizeKey(event);\n    if (this.shouldNotifyInteractionFromKey(key)) {\n      event.preventDefault();\n      this.emitInteraction(this.getTriggerFromKey(key));\n      return;\n    }\n\n    if (isNavigationEvent(event)) {\n      event.preventDefault();\n      this.emitNavigation(key);\n      return;\n    }\n  }\n\n  setDisabled(isDisabled: boolean) {\n    // Use `aria-disabled` for the selectable (listbox) disabled state\n    if (this.isSelectable()) {\n      this.adapter.setAttribute(\n          MDCChipActionAttributes.ARIA_DISABLED, `${isDisabled}`);\n      return;\n    }\n\n    if (isDisabled) {\n      this.adapter.setAttribute(MDCChipActionAttributes.DISABLED, 'true');\n    } else {\n      this.adapter.removeAttribute(MDCChipActionAttributes.DISABLED);\n    }\n  }\n\n  isDisabled(): boolean {\n    if (this.adapter.getAttribute(MDCChipActionAttributes.ARIA_DISABLED) ===\n        'true') {\n      return true;\n    }\n\n    if (this.adapter.getAttribute(MDCChipActionAttributes.DISABLED) !== null) {\n      return true;\n    }\n\n    return false;\n  }\n\n  setFocus(behavior: MDCChipActionFocusBehavior) {\n    // Early exit if not focusable\n    if (!this.isFocusable()) {\n      return;\n    }\n\n    // Add it to the tab order and give focus\n    if (behavior === MDCChipActionFocusBehavior.FOCUSABLE_AND_FOCUSED) {\n      this.adapter.setAttribute(MDCChipActionAttributes.TAB_INDEX, '0');\n      this.adapter.focus();\n      return;\n    }\n\n    // Add to the tab order\n    if (behavior === MDCChipActionFocusBehavior.FOCUSABLE) {\n      this.adapter.setAttribute(MDCChipActionAttributes.TAB_INDEX, '0');\n      return;\n    }\n\n    // Remove it from the tab order\n    if (behavior === MDCChipActionFocusBehavior.NOT_FOCUSABLE) {\n      this.adapter.setAttribute(MDCChipActionAttributes.TAB_INDEX, '-1');\n      return;\n    }\n  }\n\n  isFocusable() {\n    if (this.isDisabled()) {\n      return false;\n    }\n\n    if (this.adapter.getAttribute(MDCChipActionAttributes.ARIA_HIDDEN) ===\n        'true') {\n      return false;\n    }\n\n    return true;\n  }\n\n  setSelected(isSelected: boolean) {\n    // Early exit if not selectable\n    if (!this.isSelectable()) {\n      return;\n    }\n\n    this.adapter.setAttribute(\n        MDCChipActionAttributes.ARIA_SELECTED, `${isSelected}`);\n  }\n\n  isSelected(): boolean {\n    return this.adapter.getAttribute(MDCChipActionAttributes.ARIA_SELECTED) ===\n        'true';\n  }\n\n  private emitInteraction(trigger: MDCChipActionInteractionTrigger) {\n    this.adapter.emitEvent<MDCChipActionInteractionEventDetail>(\n        MDCChipActionEvents.INTERACTION, {\n          actionID: this.adapter.getElementID(),\n          source: this.actionType(),\n          trigger,\n        });\n  }\n\n  private emitNavigation(key: string) {\n    this.adapter.emitEvent<MDCChipActionNavigationEventDetail>(\n        MDCChipActionEvents.NAVIGATION, {\n          source: this.actionType(),\n          key,\n        });\n  }\n\n  private shouldNotifyInteractionFromKey(key: string): boolean {\n    const isFromActionKey = key === KEY.ENTER || key === KEY.SPACEBAR;\n    const isFromRemoveKey = key === KEY.BACKSPACE || key === KEY.DELETE;\n\n    if (isFromActionKey) {\n      return true;\n    }\n\n    if (isFromRemoveKey && this.shouldEmitInteractionOnRemoveKey()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private getTriggerFromKey(key: string): MDCChipActionInteractionTrigger {\n    const trigger = triggerMap.get(key);\n    if (trigger) {\n      return trigger;\n    }\n\n    // Default case, should ideally never be returned\n    return MDCChipActionInteractionTrigger.UNSPECIFIED;\n  }\n\n  abstract actionType(): MDCChipActionType;\n\n  abstract isSelectable(): boolean;\n\n  protected abstract shouldEmitInteractionOnRemoveKey(): boolean;\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipActionFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\nexport * from './primary-foundation';\nexport * from './trailing-foundation';\nexport * from './types';\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipActionAttributes, MDCChipActionType} from './constants';\nimport {MDCChipActionFoundation} from './foundation';\n\n/**\n * MDCChipPrimaryActionFoundation provides the business logic for the primary\n * chip action.\n */\nexport class MDCChipPrimaryActionFoundation extends MDCChipActionFoundation {\n  isSelectable() {\n    return this.adapter.getAttribute(MDCChipActionAttributes.ROLE) === 'option';\n  }\n\n  actionType() {\n    return MDCChipActionType.PRIMARY;\n  }\n\n  protected shouldEmitInteractionOnRemoveKey() {\n    return this.adapter.getAttribute(MDCChipActionAttributes.DATA_DELETABLE) ===\n        'true';\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipPrimaryActionFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipActionType} from './constants';\nimport {MDCChipActionFoundation} from './foundation';\n\n/**\n * MDCChipTrailingActionFoundation provides the business logic for the trailing\n * chip action.\n */\nexport class MDCChipTrailingActionFoundation extends MDCChipActionFoundation {\n  isSelectable() {\n    return false;\n  }\n\n  actionType() {\n    return MDCChipActionType.TRAILING;\n  }\n\n  protected shouldEmitInteractionOnRemoveKey() {\n    return true;\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipTrailingActionFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipActionInteractionTrigger, MDCChipActionType} from './constants';\n\n/**\n * MDCChipActionInteractionEventDetail provides the details for the interaction\n * event.\n */\nexport interface MDCChipActionInteractionEventDetail {\n  actionID: string;\n  source: MDCChipActionType;\n  trigger: MDCChipActionInteractionTrigger;\n}\n\n/**\n * MDCChipActionNavigationEventDetail provides the details for the navigation\n * event.\n */\nexport interface MDCChipActionNavigationEventDetail {\n  source: MDCChipActionType;\n  key: string;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipActionFocusBehavior, MDCChipActionType} from '../action/constants';\nimport {MDCChipAnimation} from '../chip/constants';\n\nimport {MDCChipSetAttributes, MDCChipSetEvents} from './constants';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCChipSetAdapter {\n  /** Announces the message via an aria-live region */\n  announceMessage(message: string): void;\n\n  /** Emits the given event with the given detail. */\n  emitEvent<D extends object>(eventName: MDCChipSetEvents, eventDetail: D):\n      void;\n\n  /** Returns the value for the given attribute, if it exists. */\n  getAttribute(attrName: MDCChipSetAttributes): string|null;\n\n  /** Returns the actions provided by the child chip at the given index. */\n  getChipActionsAtIndex(index: number): MDCChipActionType[];\n\n  /** Returns the number of child chips. */\n  getChipCount(): number;\n\n  /** Returns the ID of the chip at the given index. */\n  getChipIdAtIndex(index: number): string;\n\n  /** Returns the index of the child chip with the matching ID. */\n  getChipIndexById(chipID: string): number;\n\n  /** Proxies to the MDCChip#isActionFocusable method. */\n  isChipFocusableAtIndex(index: number, actionType: MDCChipActionType): boolean;\n\n  /** Proxies to the MDCChip#isActionSelectable method. */\n  isChipSelectableAtIndex(index: number, actionType: MDCChipActionType):\n      boolean;\n\n  /** Proxies to the MDCChip#isActionSelected method. */\n  isChipSelectedAtIndex(index: number, actionType: MDCChipActionType): boolean;\n\n  /** Removes the chip at the given index. */\n  removeChipAtIndex(index: number): void;\n\n  /** Proxies to the MDCChip#setActionFocus method. */\n  setChipFocusAtIndex(\n      index: number, action: MDCChipActionType,\n      focus: MDCChipActionFocusBehavior): void;\n\n  /** Proxies to the MDCChip#setActionSelected method. */\n  setChipSelectedAtIndex(\n      index: number, actionType: MDCChipActionType, isSelected: boolean): void;\n\n  /** Starts the chip animation at the given index. */\n  startChipAnimationAtIndex(index: number, animation: MDCChipAnimation): void;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {CustomEventListener} from '@material/base/types';\nimport {announce} from '@material/dom/announce';\n\nimport {MDCChipActionType} from '../action/constants';\nimport {MDCChip, MDCChipFactory} from '../chip/component';\nimport {MDCChipEvents} from '../chip/constants';\n\nimport {MDCChipSetAdapter} from './adapter';\nimport {MDCChipSetCssClasses} from './constants';\nimport {MDCChipSetFoundation} from './foundation';\nimport {ChipAnimationEvent, ChipInteractionEvent, ChipNavigationEvent} from './types';\n\n/**\n * MDCChip provides component encapsulation of the foundation implementation.\n */\nexport class MDCChipSet extends MDCComponent<MDCChipSetFoundation> {\n  static override attachTo(root: Element): MDCChipSet {\n    return new MDCChipSet(root);\n  }\n\n  // Below properties are all assigned in #initialize()\n  private handleChipAnimation!: CustomEventListener<ChipAnimationEvent>;\n  private handleChipInteraction!: CustomEventListener<ChipInteractionEvent>;\n  private handleChipNavigation!: CustomEventListener<ChipNavigationEvent>;\n  private chips!: MDCChip[];\n\n  override initialize(\n      chipFactory: MDCChipFactory = (el: Element) => new MDCChip(el)) {\n    this.chips = [];\n    const chipEls = this.root.querySelectorAll(`.${MDCChipSetCssClasses.CHIP}`);\n    for (let i = 0; i < chipEls.length; i++) {\n      const chip = chipFactory(chipEls[i]);\n      this.chips.push(chip);\n    }\n  }\n\n  override initialSyncWithDOM() {\n    this.handleChipAnimation = (event) => {\n      this.foundation.handleChipAnimation(event);\n    };\n\n    this.handleChipInteraction = (event) => {\n      this.foundation.handleChipInteraction(event);\n    };\n\n    this.handleChipNavigation = (event) => {\n      this.foundation.handleChipNavigation(event);\n    };\n\n    this.listen(MDCChipEvents.ANIMATION, this.handleChipAnimation);\n    this.listen(MDCChipEvents.INTERACTION, this.handleChipInteraction);\n    this.listen(MDCChipEvents.NAVIGATION, this.handleChipNavigation);\n  }\n\n  override destroy() {\n    this.unlisten(MDCChipEvents.ANIMATION, this.handleChipAnimation);\n    this.unlisten(MDCChipEvents.INTERACTION, this.handleChipInteraction);\n    this.unlisten(MDCChipEvents.NAVIGATION, this.handleChipNavigation);\n    super.destroy();\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCChipSetAdapter = {\n      announceMessage: (message) => {\n        announce(message);\n      },\n      emitEvent: (eventName, eventDetail) => {\n        this.emit(eventName, eventDetail, true /* shouldBubble */);\n      },\n      getAttribute: (attrName) => this.root.getAttribute(attrName),\n      getChipActionsAtIndex: (index) => {\n        if (!this.isIndexValid(index)) return [];\n        return this.chips[index].getActions();\n      },\n      getChipCount: () => this.chips.length,\n      getChipIdAtIndex: (index) => {\n        if (!this.isIndexValid(index)) return '';\n        return this.chips[index].getElementID();\n      },\n      getChipIndexById: (id) =>\n          this.chips.findIndex((chip) => chip.getElementID() === id),\n      isChipFocusableAtIndex: (index, action) => {\n        if (!this.isIndexValid(index)) return false;\n        return this.chips[index].isActionFocusable(action);\n      },\n      isChipSelectableAtIndex: (index, action) => {\n        if (!this.isIndexValid(index)) return false;\n        return this.chips[index].isActionSelectable(action);\n      },\n      isChipSelectedAtIndex: (index, action) => {\n        if (!this.isIndexValid(index)) return false;\n        return this.chips[index].isActionSelected(action);\n      },\n      removeChipAtIndex: (index) => {\n        if (!this.isIndexValid(index)) return;\n        this.chips[index].destroy();\n        this.chips[index].remove();\n        this.chips.splice(index, 1);\n      },\n      setChipFocusAtIndex: (index, action, focus) => {\n        if (!this.isIndexValid(index)) return;\n        this.chips[index].setActionFocus(action, focus);\n      },\n      setChipSelectedAtIndex: (index, action, selected) => {\n        if (!this.isIndexValid(index)) return;\n        this.chips[index].setActionSelected(action, selected);\n      },\n      startChipAnimationAtIndex: (index, animation) => {\n        if (!this.isIndexValid(index)) return;\n        this.chips[index].startAnimation(animation);\n      },\n    };\n\n    // Default to the primary foundation\n    return new MDCChipSetFoundation(adapter);\n  }\n\n  /** Returns the index of the chip with the given ID or -1 if none exists. */\n  getChipIndexByID(chipID: string): number {\n    return this.chips.findIndex((chip) => chip.getElementID() === chipID);\n  }\n\n  /**\n   * Returns the ID of the chip at the given index or an empty string if the\n   * index is out of bounds.\n   */\n  getChipIdAtIndex(index: number): string {\n    if (!this.isIndexValid(index)) return '';\n    return this.chips[index].getElementID();\n  }\n\n  /** Returns the unique indexes of the selected chips. */\n  getSelectedChipIndexes(): ReadonlySet<number> {\n    return this.foundation.getSelectedChipIndexes();\n  }\n\n  /** Sets the selection state of the chip. */\n  setChipSelected(index: number, action: MDCChipActionType, isSelected: boolean) {\n    this.foundation.setChipSelected(index, action, isSelected);\n  }\n\n  /** Returns the selection state of the chip. */\n  isChipSelected(index: number, action: MDCChipActionType) {\n    return this.foundation.isChipSelected(index, action);\n  }\n\n  /** Animates the chip addition at the given index. */\n  addChip(index: number) {\n    this.foundation.addChip(index);\n  }\n\n  /** Removes the chip at the given index. */\n  removeChip(index: number) {\n    this.foundation.removeChip(index);\n  }\n\n  private isIndexValid(index: number): boolean {\n    return index > -1 && index < this.chips.length;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * MDCChipSetAttributes provides the named constants for attributes used by the\n * foundation.\n */\nexport enum MDCChipSetAttributes {\n  ARIA_MULTISELECTABLE = 'aria-multiselectable',\n}\n\n/**\n * MDCChipSetCssClasses provides the named constants for class names.\n */\nexport enum MDCChipSetCssClasses {\n  CHIP = 'mdc-evolution-chip',\n}\n\n/**\n * MDCChipSetEvents provides the constants for emitted events.\n */\nexport enum MDCChipSetEvents {\n  INTERACTION = 'MDCChipSet:interaction',\n  REMOVAL = 'MDCChipSet:removal',\n  SELECTION = 'MDCChipSet:selection',\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {KEY} from '@material/dom/keyboard';\n\nimport {MDCChipActionFocusBehavior, MDCChipActionType} from '../action/constants';\nimport {MDCChipAnimation} from '../chip/constants';\n\nimport {MDCChipSetAdapter} from './adapter';\nimport {MDCChipSetAttributes, MDCChipSetEvents} from './constants';\nimport {ChipAnimationEvent, ChipInteractionEvent, ChipNavigationEvent, MDCChipSetInteractionEventDetail, MDCChipSetRemovalEventDetail, MDCChipSetSelectionEventDetail} from './types';\n\ninterface FocusAction {\n  action: MDCChipActionType;\n  index: number;\n}\n\nenum Operator {\n  INCREMENT,\n  DECREMENT,\n}\n\n/**\n * MDCChipSetFoundation provides a foundation for all chips.\n */\nexport class MDCChipSetFoundation extends MDCFoundation<MDCChipSetAdapter> {\n  static override get defaultAdapter(): MDCChipSetAdapter {\n    return {\n      announceMessage: () => undefined,\n      emitEvent: () => undefined,\n      getAttribute: () => null,\n      getChipActionsAtIndex: () => [],\n      getChipCount: () => 0,\n      getChipIdAtIndex: () => '',\n      getChipIndexById: () => 0,\n      isChipFocusableAtIndex: () => false,\n      isChipSelectableAtIndex: () => false,\n      isChipSelectedAtIndex: () => false,\n      removeChipAtIndex: () => {},\n      setChipFocusAtIndex: () => undefined,\n      setChipSelectedAtIndex: () => undefined,\n      startChipAnimationAtIndex: () => undefined,\n    };\n  }\n\n  constructor(adapter?: Partial<MDCChipSetAdapter>) {\n    super({...MDCChipSetFoundation.defaultAdapter, ...adapter});\n  }\n\n  handleChipAnimation({detail}: ChipAnimationEvent) {\n    const {\n      chipID,\n      animation,\n      isComplete,\n      addedAnnouncement,\n      removedAnnouncement\n    } = detail;\n    const index = this.adapter.getChipIndexById(chipID);\n\n    if (animation === MDCChipAnimation.EXIT && isComplete) {\n      if (removedAnnouncement) {\n        this.adapter.announceMessage(removedAnnouncement);\n      }\n      this.removeAfterAnimation(index, chipID);\n      return;\n    }\n\n    if (animation === MDCChipAnimation.ENTER && isComplete && addedAnnouncement) {\n      this.adapter.announceMessage(addedAnnouncement);\n      return;\n    }\n  }\n\n  handleChipInteraction({detail}: ChipInteractionEvent) {\n    const {source, chipID, isSelectable, isSelected, shouldRemove} = detail;\n    const index = this.adapter.getChipIndexById(chipID);\n\n    if (shouldRemove) {\n      this.removeChip(index);\n      return;\n    }\n\n    this.focusChip(index, source, MDCChipActionFocusBehavior.FOCUSABLE);\n    this.adapter.emitEvent<MDCChipSetInteractionEventDetail>(\n        MDCChipSetEvents.INTERACTION, {\n          chipIndex: index,\n          chipID,\n        });\n\n    if (isSelectable) {\n      this.setSelection(index, source, !isSelected);\n    }\n  }\n\n  handleChipNavigation({detail}: ChipNavigationEvent) {\n    const {chipID, key, isRTL, source} = detail;\n    const index = this.adapter.getChipIndexById(chipID);\n\n    const toNextChip = (key === KEY.ARROW_RIGHT && !isRTL) ||\n        (key === KEY.ARROW_LEFT && isRTL);\n    if (toNextChip) {\n      // Start from the next chip so we increment the index\n      this.focusNextChipFrom(index + 1);\n      return;\n    }\n\n    const toPreviousChip = (key === KEY.ARROW_LEFT && !isRTL) ||\n        (key === KEY.ARROW_RIGHT && isRTL);\n    if (toPreviousChip) {\n      // Start from the previous chip so we decrement the index\n      this.focusPrevChipFrom(index - 1);\n      return;\n    }\n\n    if (key === KEY.ARROW_DOWN) {\n      // Start from the next chip so we increment the index\n      this.focusNextChipFrom(index + 1, source);\n      return;\n    }\n\n    if (key === KEY.ARROW_UP) {\n      // Start from the previous chip so we decrement the index\n      this.focusPrevChipFrom(index - 1, source);\n      return;\n    }\n\n    if (key === KEY.HOME) {\n      this.focusNextChipFrom(0, source);\n      return;\n    }\n\n    if (key === KEY.END) {\n      this.focusPrevChipFrom(this.adapter.getChipCount() - 1, source);\n      return;\n    }\n  }\n\n  /** Returns the unique selected indexes of the chips. */\n  getSelectedChipIndexes(): ReadonlySet<number> {\n    const selectedIndexes = new Set<number>();\n    const chipCount = this.adapter.getChipCount();\n    for (let i = 0; i < chipCount; i++) {\n      const actions = this.adapter.getChipActionsAtIndex(i);\n      for (const action of actions) {\n        if (this.adapter.isChipSelectedAtIndex(i, action)) {\n          selectedIndexes.add(i);\n        }\n      }\n    }\n    return selectedIndexes;\n  }\n\n  /** Sets the selected state of the chip at the given index and action. */\n  setChipSelected(\n      index: number, action: MDCChipActionType, isSelected: boolean) {\n    if (this.adapter.isChipSelectableAtIndex(index, action)) {\n      this.setSelection(index, action, isSelected);\n    }\n  }\n\n  /** Returns the selected state of the chip at the given index and action. */\n  isChipSelected(index: number, action: MDCChipActionType): boolean {\n    return this.adapter.isChipSelectedAtIndex(index, action);\n  }\n\n  /** Removes the chip at the given index. */\n  removeChip(index: number) {\n    // Early exit if the index is out of bounds\n    if (index >= this.adapter.getChipCount() || index < 0) return;\n    this.adapter.startChipAnimationAtIndex(index, MDCChipAnimation.EXIT);\n    this.adapter.emitEvent<MDCChipSetRemovalEventDetail>(\n        MDCChipSetEvents.REMOVAL, {\n          chipID: this.adapter.getChipIdAtIndex(index),\n          chipIndex: index,\n          isComplete: false,\n        });\n  }\n\n  addChip(index: number) {\n    // Early exit if the index is out of bounds\n    if (index >= this.adapter.getChipCount() || index < 0) return;\n    this.adapter.startChipAnimationAtIndex(index, MDCChipAnimation.ENTER);\n  }\n\n  /**\n   * Increments to find the first focusable chip.\n   */\n  private focusNextChipFrom(\n      startIndex: number, targetAction?: MDCChipActionType) {\n    const chipCount = this.adapter.getChipCount();\n    for (let i = startIndex; i < chipCount; i++) {\n      const focusableAction =\n          this.getFocusableAction(i, Operator.INCREMENT, targetAction);\n      if (focusableAction) {\n        this.focusChip(\n            i, focusableAction,\n            MDCChipActionFocusBehavior.FOCUSABLE_AND_FOCUSED);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Decrements to find the first focusable chip. Takes an optional target\n   * action that can be used to focus the first matching focusable action.\n   */\n  private focusPrevChipFrom(\n      startIndex: number, targetAction?: MDCChipActionType) {\n    for (let i = startIndex; i > -1; i--) {\n      const focusableAction =\n          this.getFocusableAction(i, Operator.DECREMENT, targetAction);\n      if (focusableAction) {\n        this.focusChip(\n            i, focusableAction,\n            MDCChipActionFocusBehavior.FOCUSABLE_AND_FOCUSED);\n        return;\n      }\n    }\n  }\n\n  /** Returns the appropriate focusable action, or null if none exist. */\n  private getFocusableAction(\n      index: number, op: Operator,\n      targetAction?: MDCChipActionType): MDCChipActionType|null {\n    const actions = this.adapter.getChipActionsAtIndex(index);\n    // Reverse the actions if decrementing\n    if (op === Operator.DECREMENT) actions.reverse();\n\n    if (targetAction) {\n      return this.getMatchingFocusableAction(index, actions, targetAction);\n    }\n\n    return this.getFirstFocusableAction(index, actions);\n  }\n\n  /**\n   * Returs the first focusable action, regardless of type, or null if no\n   * focusable actions exist.\n   */\n  private getFirstFocusableAction(index: number, actions: MDCChipActionType[]):\n      MDCChipActionType|null {\n    for (const action of actions) {\n      if (this.adapter.isChipFocusableAtIndex(index, action)) {\n        return action;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * If the actions contain a focusable action that matches the target action,\n   * return that. Otherwise, return the first focusable action, or null if no\n   * focusable action exists.\n   */\n  private getMatchingFocusableAction(\n      index: number, actions: MDCChipActionType[],\n      targetAction: MDCChipActionType): MDCChipActionType|null {\n    let focusableAction = null;\n    for (const action of actions) {\n      if (this.adapter.isChipFocusableAtIndex(index, action)) {\n        focusableAction = action;\n      }\n\n      // Exit and return the focusable action if it matches the target\n      if (focusableAction === targetAction) {\n        return focusableAction;\n      }\n    }\n    return focusableAction;\n  }\n\n  private focusChip(\n      index: number, action: MDCChipActionType,\n      focus: MDCChipActionFocusBehavior) {\n    this.adapter.setChipFocusAtIndex(index, action, focus);\n    const chipCount = this.adapter.getChipCount();\n    for (let i = 0; i < chipCount; i++) {\n      const actions = this.adapter.getChipActionsAtIndex(i);\n      for (const chipAction of actions) {\n        // Skip the action and index provided since we set it above\n        if (chipAction === action && i === index) continue;\n        this.adapter.setChipFocusAtIndex(\n            i, chipAction, MDCChipActionFocusBehavior.NOT_FOCUSABLE);\n      }\n    }\n  }\n\n  private supportsMultiSelect(): boolean {\n    return this.adapter.getAttribute(\n               MDCChipSetAttributes.ARIA_MULTISELECTABLE) === 'true';\n  }\n\n  private setSelection(\n      index: number, action: MDCChipActionType, isSelected: boolean) {\n    this.adapter.setChipSelectedAtIndex(index, action, isSelected);\n    this.adapter.emitEvent<MDCChipSetSelectionEventDetail>(\n        MDCChipSetEvents.SELECTION, {\n          chipID: this.adapter.getChipIdAtIndex(index),\n          chipIndex: index,\n          isSelected,\n        });\n    // Early exit if we support multi-selection\n    if (this.supportsMultiSelect()) {\n      return;\n    }\n\n    // If we get here, we ony support single selection. This means we need to\n    // unselect all chips\n    const chipCount = this.adapter.getChipCount();\n    for (let i = 0; i < chipCount; i++) {\n      const actions = this.adapter.getChipActionsAtIndex(i);\n      for (const chipAction of actions) {\n        // Skip the action and index provided since we set it above\n        if (chipAction === action && i === index) continue;\n        this.adapter.setChipSelectedAtIndex(i, chipAction, false);\n      }\n    }\n  }\n\n  private removeAfterAnimation(index: number, chipID: string) {\n    this.adapter.removeChipAtIndex(index);\n    this.adapter.emitEvent<MDCChipSetRemovalEventDetail>(\n        MDCChipSetEvents.REMOVAL, {\n          chipIndex: index,\n          isComplete: true,\n          chipID,\n        });\n\n    const chipCount = this.adapter.getChipCount();\n    // Early exit if we have an empty chip set\n    if (chipCount <= 0) return;\n    this.focusNearestFocusableAction(index);\n  }\n\n  /**\n   * Find the first focusable action by moving bidirectionally horizontally\n   * from the start index.\n   *\n   * Given chip set [A, B, C, D, E, F, G]...\n   * Let's say we remove chip \"F\". We don't know where the nearest focusable\n   * action is since any of them could be disabled. The nearest focusable\n   * action could be E, it could be G, it could even be A. To find it, we\n   * start from the source index (5 for \"F\" in this case) and move out\n   * horizontally, checking each chip at each index.\n   *\n   */\n  private focusNearestFocusableAction(index: number) {\n    const chipCount = this.adapter.getChipCount();\n    let decrIndex = index;\n    let incrIndex = index;\n    while (decrIndex > -1 || incrIndex < chipCount) {\n      const focusAction = this.getNearestFocusableAction(\n          decrIndex, incrIndex, MDCChipActionType.TRAILING);\n      if (focusAction) {\n        this.focusChip(\n            focusAction.index, focusAction.action,\n            MDCChipActionFocusBehavior.FOCUSABLE_AND_FOCUSED);\n        return;\n      }\n\n      decrIndex--;\n      incrIndex++;\n    }\n  }\n\n  private getNearestFocusableAction(\n      decrIndex: number, incrIndex: number,\n      actionType?: MDCChipActionType): FocusAction|null {\n    const decrAction =\n        this.getFocusableAction(decrIndex, Operator.DECREMENT, actionType);\n    if (decrAction) {\n      return {\n        index: decrIndex,\n        action: decrAction,\n      };\n    }\n\n    // Early exit if the incremented and decremented indices are identical\n    if (incrIndex === decrIndex) return null;\n\n    const incrAction =\n        this.getFocusableAction(incrIndex, Operator.INCREMENT, actionType);\n    if (incrAction) {\n      return {\n        index: incrIndex,\n        action: incrAction,\n      };\n    }\n\n    return null;\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipSetFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\nexport * from './types';\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipAnimationEventDetail, MDCChipInteractionEventDetail, MDCChipNavigationEventDetail} from '../chip/types';\n\n/**\n * MDCChipSetInteractionEventDetail provides detail about the interaction event.\n */\nexport interface MDCChipSetInteractionEventDetail {\n  chipID: string;\n  chipIndex: number;\n}\n\n/**\n * MDCChipSetRemovalEventDetail provides detail about the removal event.\n */\nexport interface MDCChipSetRemovalEventDetail {\n  chipID: string;\n  chipIndex: number;\n  isComplete: boolean;\n}\n\n/**\n * MDCChipSetSelectionEventDetail provides detail about the selection event.\n */\nexport interface MDCChipSetSelectionEventDetail {\n  chipID: string;\n  chipIndex: number;\n  isSelected: boolean;\n}\n\n/**\n * ChipInteractionEvent is the custom event for the interaction event.\n */\nexport type ChipInteractionEvent = CustomEvent<MDCChipInteractionEventDetail>;\n\n/**\n * ChipNavigationEvent is the custom event for the navigation event.\n */\nexport type ChipNavigationEvent = CustomEvent<MDCChipNavigationEventDetail>;\n\n/**\n * ChipAnimationEvent is the custom event for the animation event.\n */\nexport type ChipAnimationEvent = CustomEvent<MDCChipAnimationEventDetail>;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipActionFocusBehavior, MDCChipActionType} from '../action/constants';\n\nimport {MDCChipAttributes, MDCChipCssClasses, MDCChipEvents} from './constants';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCChipAdapter {\n  /** Adds the given class to the root element. */\n  addClass(className: MDCChipCssClasses): void;\n\n  /** Emits the given event with the given detail. */\n  emitEvent<D extends object>(eventName: MDCChipEvents, eventDetail: D): void;\n\n  /** Returns the child actions provided by the chip. */\n  getActions(): MDCChipActionType[];\n\n  /** Returns the value for the given attribute, if it exists. */\n  getAttribute(attrName: MDCChipAttributes): string|null;\n\n  /** Returns the ID of the root element. */\n  getElementID(): string;\n\n  /** Returns the offset width of the root element. */\n  getOffsetWidth(): number;\n\n  /** Returns true if the root element has the given class. */\n  hasClass(className: MDCChipCssClasses): boolean;\n\n  /** Proxies to the MDCChipAction#isSelectable method. */\n  isActionSelectable(action: MDCChipActionType): boolean;\n\n  /** Proxies to the MDCChipAction#isSelected method. */\n  isActionSelected(action: MDCChipActionType): boolean;\n\n  /** Proxies to the MDCChipAction#isFocusable method. */\n  isActionFocusable(action: MDCChipActionType): boolean;\n\n  /** Proxies to the MDCChipAction#isDisabled method. */\n  isActionDisabled(action: MDCChipActionType): boolean;\n\n  /** Returns true if the text direction is right-to-left. */\n  isRTL(): boolean;\n\n  /** Removes the given class from the root element. */\n  removeClass(className: MDCChipCssClasses): void;\n\n  /** Proxies to the MDCChipAction#setDisabled method. */\n  setActionDisabled(action: MDCChipActionType, isDisabled: boolean): void;\n\n  /** Proxies to the MDCChipAction#setFocus method. */\n  setActionFocus(\n      action: MDCChipActionType, behavior: MDCChipActionFocusBehavior): void;\n\n  /** Proxies to the MDCChipAction#setSelected method. */\n  setActionSelected(action: MDCChipActionType, isSelected: boolean): void;\n\n  /** Sets the style property to the given value. */\n  setStyleProperty(property: string, value: string): void;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {CustomEventListener} from '@material/base/types';\n\nimport {MDCChipAction, MDCChipActionFactory} from '../action/component';\nimport {MDCChipActionEvents, MDCChipActionFocusBehavior, MDCChipActionType} from '../action/constants';\n\nimport {MDCChipAdapter} from './adapter';\nimport {MDCChipAnimation} from './constants';\nimport {MDCChipFoundation} from './foundation';\nimport {ActionInteractionEvent, ActionNavigationEvent} from './types';\n\n/**\n * MDCChipFactory is used by the parent MDCChipSet component to initialize\n * chips.\n */\nexport type MDCChipFactory = (el: Element, foundation?: MDCChipFoundation) =>\n    MDCChip;\n\n/**\n * MDCChip provides component encapsulation of the foundation implementation.\n */\nexport class MDCChip extends MDCComponent<MDCChipFoundation> {\n  static override attachTo(root: Element): MDCChip {\n    return new MDCChip(root);\n  }\n\n  private readonly rootHTML = this.root as HTMLElement;\n\n  // Below properties are all assigned in #initialize()\n  private handleActionInteraction!: CustomEventListener<ActionInteractionEvent>;\n  private handleActionNavigation!: CustomEventListener<ActionNavigationEvent>;\n  private actions!: Map<MDCChipActionType, MDCChipAction>;\n\n  override initialize(\n      actionFactory:\n          MDCChipActionFactory = (el: Element) => new MDCChipAction(el)) {\n    this.actions = new Map();\n    const actionEls = this.root.querySelectorAll('.mdc-evolution-chip__action');\n    for (let i = 0; i < actionEls.length; i++) {\n      const action = actionFactory(actionEls[i]);\n      this.actions.set(action.actionType(), action);\n    }\n  }\n\n  override initialSyncWithDOM() {\n    this.handleActionInteraction = (event) => {\n      this.foundation.handleActionInteraction(event);\n    };\n\n    this.handleActionNavigation = (event) => {\n      this.foundation.handleActionNavigation(event);\n    };\n\n    this.listen(MDCChipActionEvents.INTERACTION, this.handleActionInteraction);\n    this.listen(MDCChipActionEvents.NAVIGATION, this.handleActionNavigation);\n  }\n\n  override destroy() {\n    this.unlisten(\n        MDCChipActionEvents.INTERACTION, this.handleActionInteraction);\n    this.unlisten(MDCChipActionEvents.NAVIGATION, this.handleActionNavigation);\n    super.destroy();\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCChipAdapter = {\n      addClass: (className) => {\n        this.root.classList.add(className);\n      },\n      emitEvent: (eventName, eventDetail) => {\n        this.emit(eventName, eventDetail, true /* shouldBubble */);\n      },\n      getActions: () => {\n        const actions: MDCChipActionType[] = [];\n        for (const [key] of this.actions) {\n          actions.push(key);\n        }\n        return actions;\n      },\n      getAttribute: (attrName) => this.root.getAttribute(attrName),\n      getElementID: () => this.rootHTML.id,\n      getOffsetWidth: () => {\n        return this.rootHTML.offsetWidth;\n      },\n      hasClass: (className) => this.root.classList.contains(className),\n      isActionSelectable: (actionType: MDCChipActionType) => {\n        const action = this.actions.get(actionType);\n        if (action) {\n          return action.isSelectable();\n        }\n        return false;\n      },\n      isActionSelected: (actionType: MDCChipActionType) => {\n        const action = this.actions.get(actionType);\n        if (action) {\n          return action.isSelected();\n        }\n        return false;\n      },\n      isActionFocusable: (actionType: MDCChipActionType) => {\n        const action = this.actions.get(actionType);\n        if (action) {\n          return action.isFocusable();\n        }\n        return false;\n      },\n      isActionDisabled: (actionType: MDCChipActionType) => {\n        const action = this.actions.get(actionType);\n        if (action) {\n          return action.isDisabled();\n        }\n        return false;\n      },\n      isRTL: () => window.getComputedStyle(this.root).getPropertyValue(\n                       'direction') === 'rtl',\n      removeClass: (className) => {\n        this.root.classList.remove(className);\n      },\n      setActionDisabled:\n          (actionType: MDCChipActionType, isDisabled: boolean) => {\n            const action = this.actions.get(actionType);\n            if (action) {\n              action.setDisabled(isDisabled);\n            }\n          },\n      setActionFocus:\n          (actionType: MDCChipActionType,\n           behavior: MDCChipActionFocusBehavior) => {\n            const action = this.actions.get(actionType);\n            if (action) {\n              action.setFocus(behavior);\n            }\n          },\n      setActionSelected:\n          (actionType: MDCChipActionType, isSelected: boolean) => {\n            const action = this.actions.get(actionType);\n            if (action) {\n              action.setSelected(isSelected);\n            }\n          },\n      setStyleProperty: (prop: string, value: string) => {\n        this.rootHTML.style.setProperty(prop, value);\n      },\n    };\n\n    // Default to the primary foundation\n    return new MDCChipFoundation(adapter);\n  }\n\n  /** Exposed to be called by the parent chip set. */\n  remove() {\n    const parent = this.root.parentNode;\n    if (parent !== null) {\n      parent.removeChild(this.root);\n    }\n  }\n\n  /** Returns the MDCChipActionTypes for the encapsulated actions. */\n  getActions(): MDCChipActionType[] {\n    return this.foundation.getActions();\n  }\n\n  /** Returns the ID of the root element. */\n  getElementID(): string {\n    return this.foundation.getElementID();\n  }\n\n  isDisabled(): boolean {\n    return this.foundation.isDisabled();\n  }\n\n  setDisabled(isDisabled: boolean) {\n    this.foundation.setDisabled(isDisabled);\n  }\n\n  /** Returns the focusability of the action. */\n  isActionFocusable(action: MDCChipActionType): boolean {\n    return this.foundation.isActionFocusable(action);\n  }\n\n  /** Returns the selectability of the action. */\n  isActionSelectable(action: MDCChipActionType): boolean {\n    return this.foundation.isActionSelectable(action);\n  }\n\n  /** Returns the selected state of the action. */\n  isActionSelected(action: MDCChipActionType): boolean {\n    return this.foundation.isActionSelected(action);\n  }\n\n  /** Sets the focus behavior of the action. */\n  setActionFocus(action: MDCChipActionType, focus: MDCChipActionFocusBehavior) {\n    this.foundation.setActionFocus(action, focus);\n  }\n\n  /** Sets the selected state of the action. */\n  setActionSelected(action: MDCChipActionType, isSelected: boolean) {\n    this.foundation.setActionSelected(action, isSelected);\n  }\n\n  /** Starts the animation on the chip. */\n  startAnimation(animation: MDCChipAnimation) {\n    this.foundation.startAnimation(animation);\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * MDCChipCssClasses provides the named constants for class names.\n */\nexport enum MDCChipCssClasses {\n  SELECTING = 'mdc-evolution-chip--selecting',\n  DESELECTING = 'mdc-evolution-chip--deselecting',\n  SELECTING_WITH_PRIMARY_ICON =\n      'mdc-evolution-chip--selecting-with-primary-icon',\n  DESELECTING_WITH_PRIMARY_ICON =\n      'mdc-evolution-chip--deselecting-with-primary-icon',\n  DISABLED = 'mdc-evolution-chip--disabled',\n  ENTER = 'mdc-evolution-chip--enter',\n  EXIT = 'mdc-evolution-chip--exit',\n  SELECTED = 'mdc-evolution-chip--selected',\n  HIDDEN = 'mdc-evolution-chip--hidden',\n  WITH_PRIMARY_ICON = 'mdc-evolution-chip--with-primary-icon',\n}\n\n/**\n * MDCChipEvents provides the named constants for emitted events.\n */\nexport enum MDCChipEvents {\n  INTERACTION = 'MDCChip:interaction',\n  NAVIGATION = 'MDCChip:navigation',\n  ANIMATION = 'MDCChip:animation',\n}\n\n/**\n * MDCChipAttributes provides the named constants for strings used by the\n * foundation.\n */\nexport enum MDCChipAttributes {\n  DATA_REMOVED_ANNOUNCEMENT = 'data-mdc-removed-announcement',\n  DATA_ADDED_ANNOUNCEMENT = 'data-mdc-added-announcement',\n}\n\n/**\n * MDCChipAnimation provides the names of runnable animations.\n */\nexport enum MDCChipAnimation {\n  ENTER = 'mdc-evolution-chip-enter',\n  EXIT = 'mdc-evolution-chip-exit',\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {AnimationFrame} from '@material/animation/animationframe';\nimport {MDCFoundation} from '@material/base/foundation';\nimport {KEY} from '@material/dom/keyboard';\n\nimport {MDCChipActionFocusBehavior, MDCChipActionInteractionTrigger, MDCChipActionType} from '../action/constants';\nimport {MDCChipActionInteractionEventDetail} from '../action/types';\n\nimport {MDCChipAdapter} from './adapter';\nimport {MDCChipAnimation, MDCChipAttributes, MDCChipCssClasses, MDCChipEvents} from './constants';\nimport {ActionInteractionEvent, ActionNavigationEvent, MDCChipAnimationEventDetail, MDCChipInteractionEventDetail, MDCChipNavigationEventDetail} from './types';\n\ninterface Navigation {\n  from: MDCChipActionType;\n  to: MDCChipActionType;\n}\n\nenum Direction {\n  UNSPECIFIED,  // Default\n  LEFT,\n  RIGHT,\n}\n\nenum AnimationKeys {\n  SELECTION = 'selection',\n  EXIT = 'exit',\n}\n\n/**\n * MDCChipFoundation provides a foundation for all chips.\n */\nexport class MDCChipFoundation extends MDCFoundation<MDCChipAdapter> {\n  static override get defaultAdapter(): MDCChipAdapter {\n    return {\n      addClass: () => undefined,\n      emitEvent: () => undefined,\n      getActions: () => [],\n      getAttribute: () => null,\n      getElementID: () => '',\n      getOffsetWidth: () => 0,\n      hasClass: () => false,\n      isActionDisabled: () => false,\n      isActionFocusable: () => false,\n      isActionSelectable: () => false,\n      isActionSelected: () => false,\n      isRTL: () => false,\n      removeClass: () => undefined,\n      setActionDisabled: () => undefined,\n      setActionFocus: () => undefined,\n      setActionSelected: () => undefined,\n      setStyleProperty: () => undefined,\n    };\n  }\n\n  private readonly animFrame: AnimationFrame;\n\n  constructor(adapter?: Partial<MDCChipAdapter>) {\n    super({...MDCChipFoundation.defaultAdapter, ...adapter});\n    this.animFrame = new AnimationFrame();\n  }\n\n  override destroy() {\n    this.animFrame.cancelAll();\n  }\n\n  getElementID() {\n    return this.adapter.getElementID();\n  }\n\n  setDisabled(isDisabled: boolean) {\n    const actions = this.getActions();\n    for (const action of actions) {\n      this.adapter.setActionDisabled(action, isDisabled);\n    }\n\n    if (isDisabled) {\n      this.adapter.addClass(MDCChipCssClasses.DISABLED);\n    } else {\n      this.adapter.removeClass(MDCChipCssClasses.DISABLED);\n    }\n  }\n\n  isDisabled(): boolean {\n    const actions = this.getActions();\n    for (const action of actions) {\n      if (this.adapter.isActionDisabled(action)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getActions(): MDCChipActionType[] {\n    return this.adapter.getActions();\n  }\n\n  isActionFocusable(action: MDCChipActionType): boolean {\n    return this.adapter.isActionFocusable(action);\n  }\n\n  isActionSelectable(action: MDCChipActionType): boolean {\n    return this.adapter.isActionSelectable(action);\n  }\n\n  isActionSelected(action: MDCChipActionType): boolean {\n    return this.adapter.isActionSelected(action);\n  }\n\n  setActionFocus(action: MDCChipActionType, focus: MDCChipActionFocusBehavior) {\n    this.adapter.setActionFocus(action, focus);\n  }\n\n  setActionSelected(action: MDCChipActionType, isSelected: boolean) {\n    this.adapter.setActionSelected(action, isSelected);\n    this.animateSelection(isSelected);\n  }\n\n  startAnimation(animation: MDCChipAnimation) {\n    if (animation === MDCChipAnimation.ENTER) {\n      this.adapter.addClass(MDCChipCssClasses.ENTER);\n      return;\n    }\n\n    if (animation === MDCChipAnimation.EXIT) {\n      this.adapter.addClass(MDCChipCssClasses.EXIT);\n      return;\n    }\n  }\n\n  handleAnimationEnd(event: AnimationEvent) {\n    const {animationName} = event;\n    if (animationName === MDCChipAnimation.ENTER) {\n      this.adapter.removeClass(MDCChipCssClasses.ENTER);\n      this.adapter.emitEvent<MDCChipAnimationEventDetail>(\n          MDCChipEvents.ANIMATION, {\n            chipID: this.getElementID(),\n            animation: MDCChipAnimation.ENTER,\n            addedAnnouncement: this.getAddedAnnouncement(),\n            isComplete: true,\n          });\n      return;\n    }\n\n    if (animationName === MDCChipAnimation.EXIT) {\n      this.adapter.removeClass(MDCChipCssClasses.EXIT);\n      this.adapter.addClass(MDCChipCssClasses.HIDDEN);\n      const width = this.adapter.getOffsetWidth();\n      this.adapter.setStyleProperty('width', `${width}px`);\n      // Wait two frames so the width gets applied correctly.\n      this.animFrame.request(AnimationKeys.EXIT, () => {\n        this.animFrame.request(AnimationKeys.EXIT, () => {\n          this.adapter.setStyleProperty('width', '0');\n        });\n      });\n    }\n  }\n\n  handleTransitionEnd() {\n    if (!this.adapter.hasClass(MDCChipCssClasses.HIDDEN)) return;\n\n    this.adapter.emitEvent<MDCChipAnimationEventDetail>(\n        MDCChipEvents.ANIMATION, {\n          chipID: this.getElementID(),\n          animation: MDCChipAnimation.EXIT,\n          removedAnnouncement: this.getRemovedAnnouncement(),\n          isComplete: true,\n        });\n  }\n\n  handleActionInteraction({detail}: ActionInteractionEvent) {\n    const {source, actionID} = detail;\n    const isSelectable = this.adapter.isActionSelectable(source);\n    const isSelected = this.adapter.isActionSelected(source);\n\n    this.adapter.emitEvent<MDCChipInteractionEventDetail>(\n        MDCChipEvents.INTERACTION, {\n          chipID: this.getElementID(),\n          shouldRemove: this.shouldRemove(detail),\n          actionID,\n          isSelectable,\n          isSelected,\n          source,\n        });\n  }\n\n  handleActionNavigation({detail}: ActionNavigationEvent) {\n    const {source, key} = detail;\n    const isRTL = this.adapter.isRTL();\n    const isTrailingActionFocusable =\n        this.adapter.isActionFocusable(MDCChipActionType.TRAILING);\n    const isPrimaryActionFocusable =\n        this.adapter.isActionFocusable(MDCChipActionType.PRIMARY);\n    const dir = this.directionFromKey(key, isRTL);\n\n    const shouldNavigateToTrailing = source === MDCChipActionType.PRIMARY &&\n        dir === Direction.RIGHT && isTrailingActionFocusable;\n\n    const shouldNavigateToPrimary = source === MDCChipActionType.TRAILING &&\n        dir === Direction.LEFT && isPrimaryActionFocusable;\n\n    if (shouldNavigateToTrailing) {\n      this.navigateActions({from: source, to: MDCChipActionType.TRAILING});\n      return;\n    }\n\n    if (shouldNavigateToPrimary) {\n      this.navigateActions({from: source, to: MDCChipActionType.PRIMARY});\n      return;\n    }\n\n    this.adapter.emitEvent<MDCChipNavigationEventDetail>(\n        MDCChipEvents.NAVIGATION, {\n          chipID: this.getElementID(),\n          isRTL,\n          source,\n          key,\n        });\n  }\n\n  private directionFromKey(key: string, isRTL: boolean): Direction {\n    const isLeftKey = key === KEY.ARROW_LEFT;\n    const isRightKey = key === KEY.ARROW_RIGHT;\n    if (!isRTL && isLeftKey || isRTL && isRightKey) {\n      return Direction.LEFT;\n    }\n\n    if (!isRTL && isRightKey || isRTL && isLeftKey) {\n      return Direction.RIGHT;\n    }\n\n    return Direction.UNSPECIFIED;\n  }\n\n  private navigateActions(nav: Navigation) {\n    this.adapter.setActionFocus(\n        nav.from, MDCChipActionFocusBehavior.NOT_FOCUSABLE);\n    this.adapter.setActionFocus(\n        nav.to, MDCChipActionFocusBehavior.FOCUSABLE_AND_FOCUSED);\n  }\n\n  private shouldRemove({source, trigger}: MDCChipActionInteractionEventDetail):\n      boolean {\n    if (trigger === MDCChipActionInteractionTrigger.BACKSPACE_KEY ||\n        trigger === MDCChipActionInteractionTrigger.DELETE_KEY) {\n      return true;\n    }\n\n    return source === MDCChipActionType.TRAILING;\n  }\n\n  private getRemovedAnnouncement(): string|undefined {\n    const msg =\n        this.adapter.getAttribute(MDCChipAttributes.DATA_REMOVED_ANNOUNCEMENT);\n    return msg || undefined;\n  }\n\n  private getAddedAnnouncement(): string|undefined {\n    const msg =\n        this.adapter.getAttribute(MDCChipAttributes.DATA_ADDED_ANNOUNCEMENT);\n    return msg || undefined;\n  }\n\n  private animateSelection(isSelected: boolean) {\n    this.resetAnimationStyles();\n    // Wait two frames to ensure the animation classes are unset\n    this.animFrame.request(AnimationKeys.SELECTION, () => {\n      this.animFrame.request(AnimationKeys.SELECTION, () => {\n        this.updateSelectionStyles(isSelected);\n      });\n    });\n  }\n\n  private resetAnimationStyles() {\n    this.adapter.removeClass(MDCChipCssClasses.SELECTING);\n    this.adapter.removeClass(MDCChipCssClasses.DESELECTING);\n    this.adapter.removeClass(MDCChipCssClasses.SELECTING_WITH_PRIMARY_ICON);\n    this.adapter.removeClass(MDCChipCssClasses.DESELECTING_WITH_PRIMARY_ICON);\n  }\n\n  private updateSelectionStyles(isSelected: boolean) {\n    const hasIcon = this.adapter.hasClass(MDCChipCssClasses.WITH_PRIMARY_ICON);\n    if (hasIcon && isSelected) {\n      this.adapter.addClass(MDCChipCssClasses.SELECTING_WITH_PRIMARY_ICON);\n      this.animFrame.request(AnimationKeys.SELECTION, () => {\n        this.adapter.addClass(MDCChipCssClasses.SELECTED);\n      });\n      return;\n    }\n\n    if (hasIcon && !isSelected) {\n      this.adapter.addClass(MDCChipCssClasses.DESELECTING_WITH_PRIMARY_ICON);\n      this.animFrame.request(AnimationKeys.SELECTION, () => {\n        this.adapter.removeClass(MDCChipCssClasses.SELECTED);\n      });\n      return;\n    }\n\n    if (isSelected) {\n      this.adapter.addClass(MDCChipCssClasses.SELECTING);\n      this.animFrame.request(AnimationKeys.SELECTION, () => {\n        this.adapter.addClass(MDCChipCssClasses.SELECTED);\n      });\n      return;\n    }\n\n    if (!isSelected) {\n      this.adapter.addClass(MDCChipCssClasses.DESELECTING);\n      this.animFrame.request(AnimationKeys.SELECTION, () => {\n        this.adapter.removeClass(MDCChipCssClasses.SELECTED);\n      });\n      return;\n    }\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\nexport * from './types';\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCChipActionType} from '../action/constants';\nimport {MDCChipActionInteractionEventDetail, MDCChipActionNavigationEventDetail} from '../action/types';\n\nimport {MDCChipAnimation} from './constants';\n\n/** MDCChipInteractionEventDetail provides details for the interaction event. */\nexport interface MDCChipInteractionEventDetail {\n  actionID: string;\n  chipID: string;\n  source: MDCChipActionType;\n  shouldRemove: boolean;\n  isSelectable: boolean;\n  isSelected: boolean;\n}\n\n/** MDCChipNavigationEventDetail provides details for the navigation event. */\nexport interface MDCChipNavigationEventDetail {\n  chipID: string;\n  source: MDCChipActionType;\n  key: string;\n  isRTL: boolean;\n}\n\n/**\n * MDCChipAnimationEventDetail provides details for the animation event.\n */\nexport interface MDCChipAnimationEventDetail {\n  chipID: string;\n  animation: MDCChipAnimation;\n  isComplete: boolean;\n  addedAnnouncement?: string;\n  removedAnnouncement?: string;\n}\n\n/**\n * MDCChipActionInteractionEvent is the custom event for the interaction event.\n */\nexport type ActionInteractionEvent =\n    CustomEvent<MDCChipActionInteractionEventDetail>;\n\n/**\n * MDCChipActionInteractionEvent is the custom event for the interaction event.\n */\nexport type ActionNavigationEvent =\n    CustomEvent<MDCChipActionNavigationEventDetail>;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCChipSetAdapter {\n  /**\n   * @return true if the root element contains the given class name.\n   */\n  hasClass(className: string): boolean;\n\n  /**\n   * Removes the chip with the given index from the chip set.\n   * Make sure to remove it from the chip list, too.\n   */\n  removeChipAtIndex(index: number): void;\n\n  /**\n   * Sets the selected state of the chip at the given index.\n   */\n  selectChipAtIndex(index: number, isSelected: boolean, shouldNotifyClients: boolean): void;\n\n  /**\n   * Returns the index of the chip at the given ID.\n   * @param chipId the unique ID of the chip\n   * @return the numerical index of the chip with the matching id or -1.\n   */\n  getIndexOfChipById(chipId: string): number;\n\n  /**\n   * Calls Chip#focusPrimaryAction() on the chip at the given index.\n   * @param index the index of the chip\n   */\n  focusChipPrimaryActionAtIndex(index: number): void;\n\n  /**\n   * Calls Chip#focusTrailingAction() on the chip at the given index.\n   * @param index the index of the chip\n   */\n  focusChipTrailingActionAtIndex(index: number): void;\n\n  /**\n   * Removes focus from the chip at the given index.\n   * @param index the index of the chip\n   */\n  removeFocusFromChipAtIndex(index: number): void;\n\n  /**\n   * @return true if the text direction is RTL.\n   */\n  isRTL(): boolean;\n\n  /**\n   * @return the number of chips in the chip set.\n   */\n  getChipListCount(): number;\n\n  /**\n   * Announces the message via an aria-live region.\n   */\n  announceMessage(message: string): void;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {announce} from '@material/dom/announce';\nimport {MDCChip, MDCChipFactory} from '../chip/component';\nimport {MDCChipFoundation} from '../chip/foundation';\nimport {MDCChipInteractionEvent, MDCChipNavigationEvent, MDCChipRemovalEvent,\n    MDCChipSelectionEvent} from '../chip/types';\nimport {MDCChipSetAdapter} from './adapter';\nimport {MDCChipSetFoundation} from './foundation';\n\nconst {INTERACTION_EVENT, SELECTION_EVENT, REMOVAL_EVENT, NAVIGATION_EVENT} = MDCChipFoundation.strings;\nconst {CHIP_SELECTOR} = MDCChipSetFoundation.strings;\n\nlet idCounter = 0;\n\nexport class MDCChipSet extends MDCComponent<MDCChipSetFoundation> {\n  static override attachTo(root: Element) {\n    return new MDCChipSet(root);\n  }\n\n  get chips(): ReadonlyArray<MDCChip> {\n    return this.chipsList.slice();\n  }\n\n  /**\n   * @return An array of the IDs of all selected chips.\n   */\n  get selectedChipIds(): ReadonlyArray<string> {\n    return this.foundation.getSelectedChipIds();\n  }\n\n  private chipsList!: MDCChip[];                   // assigned in initialize()\n  private chipFactory!: (el: Element) => MDCChip;  // assigned in initialize()\n  private handleChipInteraction!: (evt: MDCChipInteractionEvent) =>\n      void;  // assigned in initialSyncWithDOM()\n  private handleChipSelection!:\n      (evt: MDCChipSelectionEvent) => void;  // assigned in initialSyncWithDOM()\n  private handleChipRemoval!:\n      (evt: MDCChipRemovalEvent) => void;  // assigned in initialSyncWithDOM()\n  private handleChipNavigation!: (evt: MDCChipNavigationEvent) =>\n      void;  // assigned in initialSyncWithDOM()\n\n  /**\n   * @param chipFactory A function which creates a new MDCChip.\n   */\n  override initialize(chipFactory: MDCChipFactory = (el) => new MDCChip(el)) {\n    this.chipFactory = chipFactory;\n    this.chipsList = this.instantiateChips(this.chipFactory);\n  }\n\n  override initialSyncWithDOM() {\n    for (const chip of this.chipsList) {\n      if (chip.id && chip.selected) {\n        this.foundation.select(chip.id);\n      }\n    }\n\n    this.handleChipInteraction = (evt) =>\n        this.foundation.handleChipInteraction(evt.detail);\n    this.handleChipSelection = (evt) =>\n        this.foundation.handleChipSelection(evt.detail);\n    this.handleChipRemoval = (evt) =>\n        this.foundation.handleChipRemoval(evt.detail);\n    this.handleChipNavigation = (evt) =>\n        this.foundation.handleChipNavigation(evt.detail);\n    this.listen(INTERACTION_EVENT, this.handleChipInteraction);\n    this.listen(SELECTION_EVENT, this.handleChipSelection);\n    this.listen(REMOVAL_EVENT, this.handleChipRemoval);\n    this.listen(NAVIGATION_EVENT, this.handleChipNavigation);\n  }\n\n  override destroy() {\n    for (const chip of this.chipsList) {\n      chip.destroy();\n    }\n\n    this.unlisten(INTERACTION_EVENT, this.handleChipInteraction);\n    this.unlisten(SELECTION_EVENT, this.handleChipSelection);\n    this.unlisten(REMOVAL_EVENT, this.handleChipRemoval);\n    this.unlisten(NAVIGATION_EVENT, this.handleChipNavigation);\n\n    super.destroy();\n  }\n\n  /**\n   * Adds a new chip object to the chip set from the given chip element.\n   */\n  addChip(chipEl: Element) {\n    chipEl.id = chipEl.id || `mdc-chip-${++idCounter}`;\n    this.chipsList.push(this.chipFactory(chipEl));\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCChipSetAdapter = {\n      announceMessage: (message) => {\n        announce(message);\n      },\n      focusChipPrimaryActionAtIndex: (index) => {\n        this.chipsList[index].focusPrimaryAction();\n      },\n      focusChipTrailingActionAtIndex: (index) => {\n        this.chipsList[index].focusTrailingAction();\n      },\n      getChipListCount: () => this.chips.length,\n      getIndexOfChipById: (chipId) => {\n        return this.findChipIndex(chipId);\n      },\n      hasClass: (className) => this.root.classList.contains(className),\n      isRTL: () => window.getComputedStyle(this.root).getPropertyValue(\n                       'direction') === 'rtl',\n      removeChipAtIndex: (index) => {\n        if (index >= 0 && index < this.chips.length) {\n          this.chipsList[index].destroy();\n          this.chipsList[index].remove();\n          this.chipsList.splice(index, 1);\n        }\n      },\n      removeFocusFromChipAtIndex: (index) => {\n        this.chipsList[index].removeFocus();\n      },\n      selectChipAtIndex: (index, selected, shouldNotifyClients) => {\n        if (index >= 0 && index < this.chips.length) {\n          this.chipsList[index].setSelectedFromChipSet(\n              selected, shouldNotifyClients);\n        }\n      },\n    };\n    return new MDCChipSetFoundation(adapter);\n  }\n\n  /**\n   * Instantiates chip components on all of the chip set's child chip elements.\n   */\n  private instantiateChips(chipFactory: MDCChipFactory): MDCChip[] {\n    const chipElements: Element[] =\n        [].slice.call(this.root.querySelectorAll(CHIP_SELECTOR));\n    return chipElements.map((el) => {\n      el.id = el.id || `mdc-chip-${++idCounter}`;\n      return chipFactory(el);\n    });\n  }\n\n  /**\n   * Returns the index of the chip with the given id, or -1 if the chip does not exist.\n   */\n  private findChipIndex(chipId: string): number {\n    for (let i = 0; i < this.chips.length; i++) {\n      if (this.chipsList[i].id === chipId) {\n        return i;\n      }\n    }\n    return -1;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\nexport const cssClasses = {\n  CHOICE: 'mdc-chip-set--choice',\n  FILTER: 'mdc-chip-set--filter',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\n\nimport {Direction, EventSource, jumpChipKeys, navigationKeys, strings as chipStrings} from '../chip/constants';\nimport {MDCChipInteractionEventDetail, MDCChipNavigationEventDetail, MDCChipRemovalEventDetail, MDCChipSelectionEventDetail} from '../chip/types';\n\nimport {MDCChipSetAdapter} from './adapter';\nimport {cssClasses, strings} from './constants';\n\nexport class MDCChipSetFoundation extends MDCFoundation<MDCChipSetAdapter> {\n  static override get strings() {\n    return strings;\n  }\n\n  static override get cssClasses() {\n    return cssClasses;\n  }\n\n  static override get defaultAdapter(): MDCChipSetAdapter {\n    return {\n      announceMessage: () => undefined,\n      focusChipPrimaryActionAtIndex: () => undefined,\n      focusChipTrailingActionAtIndex: () => undefined,\n      getChipListCount: () => -1,\n      getIndexOfChipById: () => -1,\n      hasClass: () => false,\n      isRTL: () => false,\n      removeChipAtIndex: () => undefined,\n      removeFocusFromChipAtIndex: () => undefined,\n      selectChipAtIndex: () => undefined,\n    };\n  }\n\n  /**\n   * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.\n   */\n  private selectedChipIds: string[] = [];\n\n  constructor(adapter?: Partial<MDCChipSetAdapter>) {\n    super({...MDCChipSetFoundation.defaultAdapter, ...adapter});\n  }\n\n  /**\n   * Returns an array of the IDs of all selected chips.\n   */\n  getSelectedChipIds(): ReadonlyArray<string> {\n    return this.selectedChipIds.slice();\n  }\n\n  /**\n   * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.\n   * Does not notify clients of the updated selection state.\n   */\n  select(chipId: string) {\n    this.selectImpl(chipId, false);\n  }\n\n  /**\n   * Handles a chip interaction event\n   */\n  handleChipInteraction({chipId}: MDCChipInteractionEventDetail) {\n    const index = this.adapter.getIndexOfChipById(chipId);\n    this.removeFocusFromChipsExcept(index);\n    if (this.adapter.hasClass(cssClasses.CHOICE) ||\n        this.adapter.hasClass(cssClasses.FILTER)) {\n      this.toggleSelect(chipId);\n    }\n  }\n\n  /**\n   * Handles a chip selection event, used to handle discrepancy when selection state is set directly on the Chip.\n   */\n  handleChipSelection({chipId, selected, shouldIgnore}:\n                          MDCChipSelectionEventDetail) {\n    // Early exit if we should ignore the event\n    if (shouldIgnore) {\n      return;\n    }\n\n    const chipIsSelected = this.selectedChipIds.indexOf(chipId) >= 0;\n    if (selected && !chipIsSelected) {\n      this.select(chipId);\n    } else if (!selected && chipIsSelected) {\n      this.deselectImpl(chipId);\n    }\n  }\n\n  /**\n   * Handles the event when a chip is removed.\n   */\n  handleChipRemoval({chipId, removedAnnouncement}: MDCChipRemovalEventDetail) {\n    if (removedAnnouncement) {\n      this.adapter.announceMessage(removedAnnouncement);\n    }\n\n    const index = this.adapter.getIndexOfChipById(chipId);\n    this.deselectAndNotifyClients(chipId);\n    this.adapter.removeChipAtIndex(index);\n    const maxIndex = this.adapter.getChipListCount() - 1;\n    if (maxIndex < 0) {\n      return;\n    }\n    const nextIndex = Math.min(index, maxIndex);\n    this.removeFocusFromChipsExcept(nextIndex);\n    // After removing a chip, we should focus the trailing action for the next chip.\n    this.adapter.focusChipTrailingActionAtIndex(nextIndex);\n  }\n\n  /**\n   * Handles a chip navigation event.\n   */\n  handleChipNavigation({chipId, key, source}: MDCChipNavigationEventDetail) {\n    const maxIndex = this.adapter.getChipListCount() - 1;\n    let index = this.adapter.getIndexOfChipById(chipId);\n    // Early exit if the index is out of range or the key is unusable\n    if (index === -1 || !navigationKeys.has(key)) {\n      return;\n    }\n\n    const isRTL = this.adapter.isRTL();\n    const isLeftKey = key === chipStrings.ARROW_LEFT_KEY ||\n        key === chipStrings.IE_ARROW_LEFT_KEY;\n    const isRightKey = key === chipStrings.ARROW_RIGHT_KEY ||\n        key === chipStrings.IE_ARROW_RIGHT_KEY;\n    const isDownKey = key === chipStrings.ARROW_DOWN_KEY ||\n        key === chipStrings.IE_ARROW_DOWN_KEY;\n    const shouldIncrement =\n        !isRTL && isRightKey || isRTL && isLeftKey || isDownKey;\n    const isHome = key === chipStrings.HOME_KEY;\n    const isEnd = key === chipStrings.END_KEY;\n    if (shouldIncrement) {\n      index++;\n    } else if (isHome) {\n      index = 0;\n    } else if (isEnd) {\n      index = maxIndex;\n    } else {\n      index--;\n    }\n\n    // Early exit if the index is out of bounds\n    if (index < 0 || index > maxIndex) {\n      return;\n    }\n\n    this.removeFocusFromChipsExcept(index);\n    this.focusChipAction(index, key, source);\n  }\n\n  private focusChipAction(index: number, key: string, source: EventSource) {\n    const shouldJumpChips = jumpChipKeys.has(key);\n    if (shouldJumpChips && source === EventSource.PRIMARY) {\n      return this.adapter.focusChipPrimaryActionAtIndex(index);\n    }\n\n    if (shouldJumpChips && source === EventSource.TRAILING) {\n      return this.adapter.focusChipTrailingActionAtIndex(index);\n    }\n\n    const dir = this.getDirection(key);\n    if (dir === Direction.LEFT) {\n      return this.adapter.focusChipTrailingActionAtIndex(index);\n    }\n\n    if (dir === Direction.RIGHT) {\n      return this.adapter.focusChipPrimaryActionAtIndex(index);\n    }\n  }\n\n  private getDirection(key: string): Direction {\n    const isRTL = this.adapter.isRTL();\n    const isLeftKey = key === chipStrings.ARROW_LEFT_KEY ||\n        key === chipStrings.IE_ARROW_LEFT_KEY;\n    const isRightKey = key === chipStrings.ARROW_RIGHT_KEY ||\n        key === chipStrings.IE_ARROW_RIGHT_KEY;\n    if (!isRTL && isLeftKey || isRTL && isRightKey) {\n      return Direction.LEFT;\n    }\n\n    return Direction.RIGHT;\n  }\n\n  /**\n   * Deselects the chip with the given id and optionally notifies clients.\n   */\n  private deselectImpl(chipId: string, shouldNotifyClients = false) {\n    const index = this.selectedChipIds.indexOf(chipId);\n    if (index >= 0) {\n      this.selectedChipIds.splice(index, 1);\n      const chipIndex = this.adapter.getIndexOfChipById(chipId);\n      this.adapter.selectChipAtIndex(\n          chipIndex, /** isSelected */ false, shouldNotifyClients);\n    }\n  }\n\n  /**\n   * Deselects the chip with the given id and notifies clients.\n   */\n  private deselectAndNotifyClients(chipId: string) {\n    this.deselectImpl(chipId, true);\n  }\n\n  /**\n   * Toggles selection of the chip with the given id.\n   */\n  private toggleSelect(chipId: string) {\n    if (this.selectedChipIds.indexOf(chipId) >= 0) {\n      this.deselectAndNotifyClients(chipId);\n    } else {\n      this.selectAndNotifyClients(chipId);\n    }\n  }\n\n  private removeFocusFromChipsExcept(index: number) {\n    const chipCount = this.adapter.getChipListCount();\n    for (let i = 0; i < chipCount; i++) {\n      if (i !== index) {\n        this.adapter.removeFocusFromChipAtIndex(i);\n      }\n    }\n  }\n\n  private selectAndNotifyClients(chipId: string) {\n    this.selectImpl(chipId, true);\n  }\n\n  private selectImpl(chipId: string, shouldNotifyClients: boolean) {\n    if (this.selectedChipIds.indexOf(chipId) >= 0) {\n      return;\n    }\n\n    if (this.adapter.hasClass(cssClasses.CHOICE) &&\n        this.selectedChipIds.length > 0) {\n      const previouslySelectedChip = this.selectedChipIds[0];\n      const previouslySelectedIndex =\n          this.adapter.getIndexOfChipById(previouslySelectedChip);\n      this.selectedChipIds = [];\n      this.adapter.selectChipAtIndex(\n          previouslySelectedIndex, /** isSelected */ false,\n          shouldNotifyClients);\n    }\n    this.selectedChipIds.push(chipId);\n    const index = this.adapter.getIndexOfChipById(chipId);\n    this.adapter.selectChipAtIndex(\n        index, /** isSelected */ true, shouldNotifyClients);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipSetFoundation;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './foundation';\nexport {cssClasses as chipSetCssClasses, strings as chipSetStrings} from './constants';\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {EventSource} from './constants';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCChipAdapter {\n  /**\n   * Adds a class to the root element.\n   */\n  addClass(className: string): void;\n\n  /**\n   * Removes a class from the root element.\n   */\n  removeClass(className: string): void;\n\n  /**\n   * @return true if the root element contains the given class.\n   */\n  hasClass(className: string): boolean;\n\n  /**\n   * Adds a class to the leading icon element.\n   */\n  addClassToLeadingIcon(className: string): void;\n\n  /**\n   * Removes a class from the leading icon element.\n   */\n  removeClassFromLeadingIcon(className: string): void;\n\n  /**\n   * @return true if target has className, false otherwise.\n   */\n  eventTargetHasClass(target: EventTarget | null, className: string): boolean;\n\n  /**\n   * @return the attribute string value if present, otherwise null\n   */\n  getAttribute(attr: string): string|null;\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction(): void;\n\n  /**\n   * Emits a custom \"MDCChip:selection\" event denoting the chip has been selected or deselected.\n   */\n  notifySelection(selected: boolean, chipSetShouldIgnore: boolean): void;\n\n  /**\n   * Emits a custom \"MDCChip:trailingIconInteraction\" event denoting the trailing icon has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyTrailingIconInteraction(): void;\n\n  /**\n   * Emits a custom event \"MDCChip:removal\" denoting the chip will be removed.\n   */\n  notifyRemoval(removedAnnouncement: string|null): void;\n\n  /**\n   * Emits a custom event \"MDCChip:navigation\" denoting a focus navigation event.\n   */\n  notifyNavigation(key: string, source: EventSource): void;\n\n  /**\n   * Emits when editing starts.\n   */\n  notifyEditStart(): void;\n\n  /**\n   * Emits when editing finishes.\n   */\n  notifyEditFinish(): void;\n\n  /**\n   * @return The computed property value of the given style property on the root element.\n   */\n  getComputedStyleValue(propertyName: string): string;\n\n  /**\n   * Sets the property value of the given style property on the root element.\n   */\n  setStyleProperty(propertyName: string, value: string): void;\n\n  /**\n   * @return Whether the chip has a leading icon.\n   */\n  hasLeadingIcon(): boolean;\n\n  /**\n   * @return The bounding client rect of the root element.\n   */\n  getRootBoundingClientRect(): DOMRect;\n\n  /**\n   * @return The bounding client rect of the checkmark element or null if it doesn't exist.\n   */\n  getCheckmarkBoundingClientRect(): DOMRect | null;\n\n  /**\n   * Sets the value of the attribute on the primary action content.\n   */\n  setPrimaryActionAttr(attr: string, value: string): void;\n\n  /**\n   * Gives focus to the primary action.\n   */\n  focusPrimaryAction(): void;\n\n  /**\n   * Sets focus to the trailing action.\n   */\n  focusTrailingAction(): void;\n\n  /**\n   * Removes focus from the trailing action.\n   */\n  removeTrailingActionFocus(): void;\n\n  /**\n   * Returns true if the trailing action is navigable.\n   * Should return the value of MDCChipTrailingAction#isNavigable() or false.\n   */\n  isTrailingActionNavigable(): boolean;\n\n  /**\n   * @return true if the text direction is right-to-left.\n   */\n  isRTL(): boolean;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {CustomEventListener, SpecificEventListener} from '@material/base/types';\nimport {MDCRippleAdapter} from '@material/ripple/adapter';\nimport {MDCRipple, MDCRippleFactory} from '@material/ripple/component';\nimport {MDCRippleFoundation} from '@material/ripple/foundation';\nimport {MDCRippleCapableSurface} from '@material/ripple/types';\n\nimport {MDCChipTrailingAction, MDCChipTrailingActionFactory} from '../trailingaction/component';\nimport {strings as trailingActionStrings} from '../trailingaction/constants';\nimport {MDCChipTrailingActionInteractionEvent, MDCChipTrailingActionNavigationEvent} from '../trailingaction/types';\n\nimport {MDCChipAdapter} from './adapter';\nimport {strings} from './constants';\nimport {MDCChipFoundation} from './foundation';\nimport {MDCChipInteractionEventDetail, MDCChipNavigationEventDetail, MDCChipRemovalEventDetail, MDCChipSelectionEventDetail} from './types';\n\nexport type MDCChipFactory = (el: Element, foundation?: MDCChipFoundation) => MDCChip;\n\nexport class MDCChip extends MDCComponent<MDCChipFoundation> implements MDCRippleCapableSurface {\n  /**\n   * @return Whether the chip is selected.\n   */\n  get selected(): boolean {\n    return this.foundation.isSelected();\n  }\n\n  /**\n   * Sets selected state on the chip.\n   */\n  set selected(selected: boolean) {\n    this.foundation.setSelected(selected);\n  }\n\n  /**\n   * @return Whether a trailing icon click should trigger exit/removal of the chip.\n   */\n  get shouldRemoveOnTrailingIconClick(): boolean {\n    return this.foundation.getShouldRemoveOnTrailingIconClick();\n  }\n\n  /**\n   * Sets whether a trailing icon click should trigger exit/removal of the chip.\n   */\n  set shouldRemoveOnTrailingIconClick(shouldRemove: boolean) {\n    this.foundation.setShouldRemoveOnTrailingIconClick(shouldRemove);\n  }\n\n  /**\n   * Sets whether a clicking on the chip should focus the primary action.\n   */\n  set setShouldFocusPrimaryActionOnClick(shouldFocus: boolean) {\n    this.foundation.setShouldFocusPrimaryActionOnClick(shouldFocus);\n  }\n\n  get ripple(): MDCRipple {\n    return this.rippleSurface;\n  }\n\n  get id(): string {\n    return this.root.id;\n  }\n\n  static override attachTo(root: Element) {\n    return new MDCChip(root);\n  }\n\n  private leadingIcon!: Element|null;    // assigned in initialize()\n  private checkmark!: Element|null;      // assigned in initialize()\n  private primaryAction!: Element|null;  // assigned in initialize()\n  private trailingAction!: MDCChipTrailingAction|\n      null;                           // assigned in initialize()\n  private rippleSurface!: MDCRipple;  // assigned in initialize()\n\n  private handleTrailingActionInteraction!: CustomEventListener<\n      MDCChipTrailingActionInteractionEvent>;  // assigned in\n                                               // initialSyncWithDOM()\n  private handleTrailingActionNavigation!: CustomEventListener<\n      MDCChipTrailingActionNavigationEvent>;  // assigned in\n                                              // initialSyncWithDOM()\n  private handleTransitionEnd!:\n      SpecificEventListener<'transitionend'>;  // assigned in\n                                               // initialSyncWithDOM()\n  private handleClick!:\n      SpecificEventListener<'click'>;  // assigned in initialSyncWithDOM()\n  private handleKeydown!:\n      SpecificEventListener<'keydown'>;  // assigned in initialSyncWithDOM()\n  private handleFocusIn!:\n      SpecificEventListener<'focusin'>;  // assigned in initialSyncWIthDOM()\n  private handleFocusOut!:\n      SpecificEventListener<'focusout'>;  // assigned in initialSyncWIthDOM()\n\n  override initialize(\n      rippleFactory:\n          MDCRippleFactory = (el, foundation) => new MDCRipple(el, foundation),\n      trailingActionFactory:\n          MDCChipTrailingActionFactory = (el) => new MDCChipTrailingAction(el),\n  ) {\n    this.leadingIcon = this.root.querySelector(strings.LEADING_ICON_SELECTOR);\n    this.checkmark = this.root.querySelector(strings.CHECKMARK_SELECTOR);\n    this.primaryAction =\n        this.root.querySelector(strings.PRIMARY_ACTION_SELECTOR);\n\n    const trailingActionEl =\n        this.root.querySelector(strings.TRAILING_ACTION_SELECTOR);\n\n    if (trailingActionEl) {\n      this.trailingAction = trailingActionFactory(trailingActionEl);\n    }\n\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const rippleAdapter: MDCRippleAdapter = {\n      ...MDCRipple.createAdapter(this),\n      computeBoundingRect: () => this.foundation.getDimensions(),\n    };\n    this.rippleSurface =\n        rippleFactory(this.root, new MDCRippleFoundation(rippleAdapter));\n  }\n\n  override initialSyncWithDOM() {\n    // Custom events\n    this.handleTrailingActionInteraction = () => {\n      this.foundation.handleTrailingActionInteraction();\n    };\n    this.handleTrailingActionNavigation =\n        (evt: MDCChipTrailingActionNavigationEvent) => {\n          this.foundation.handleTrailingActionNavigation(evt);\n        };\n    // Native events\n    this.handleClick = () => {\n      this.foundation.handleClick();\n    };\n    this.handleKeydown = (evt: KeyboardEvent) => {\n      this.foundation.handleKeydown(evt);\n    };\n    this.handleTransitionEnd = (evt: TransitionEvent) => {\n      this.foundation.handleTransitionEnd(evt);\n    };\n    this.handleFocusIn = (evt: FocusEvent) => {\n      this.foundation.handleFocusIn(evt);\n    };\n    this.handleFocusOut = (evt: FocusEvent) => {\n      this.foundation.handleFocusOut(evt);\n    };\n\n\n    this.listen('transitionend', this.handleTransitionEnd);\n    this.listen('click', this.handleClick);\n    this.listen('keydown', this.handleKeydown);\n    this.listen('focusin', this.handleFocusIn);\n    this.listen('focusout', this.handleFocusOut);\n\n    if (this.trailingAction) {\n      this.listen(\n          trailingActionStrings.INTERACTION_EVENT,\n          this.handleTrailingActionInteraction);\n      this.listen(\n          trailingActionStrings.NAVIGATION_EVENT,\n          this.handleTrailingActionNavigation);\n    }\n  }\n\n  override destroy() {\n    this.rippleSurface.destroy();\n\n    this.unlisten('transitionend', this.handleTransitionEnd);\n    this.unlisten('keydown', this.handleKeydown);\n    this.unlisten('click', this.handleClick);\n    this.unlisten('focusin', this.handleFocusIn);\n    this.unlisten('focusout', this.handleFocusOut);\n\n    if (this.trailingAction) {\n      this.unlisten(\n          trailingActionStrings.INTERACTION_EVENT,\n          this.handleTrailingActionInteraction);\n      this.unlisten(\n          trailingActionStrings.NAVIGATION_EVENT,\n          this.handleTrailingActionNavigation);\n    }\n\n    super.destroy();\n  }\n\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n  beginExit() {\n    this.foundation.beginExit();\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCChipAdapter = {\n      addClass: (className) => this.root.classList.add(className),\n      addClassToLeadingIcon: (className) => {\n        if (this.leadingIcon) {\n          this.leadingIcon.classList.add(className);\n        }\n      },\n      eventTargetHasClass: (target, className) =>\n          target ? (target as Element).classList.contains(className) : false,\n      focusPrimaryAction: () => {\n        if (this.primaryAction) {\n          (this.primaryAction as HTMLElement).focus();\n        }\n      },\n      focusTrailingAction: () => {\n        if (this.trailingAction) {\n          this.trailingAction.focus();\n        }\n      },\n      getAttribute: (attr) => this.root.getAttribute(attr),\n      getCheckmarkBoundingClientRect: () =>\n          this.checkmark ? this.checkmark.getBoundingClientRect() : null,\n      getComputedStyleValue: (propertyName) =>\n          window.getComputedStyle(this.root).getPropertyValue(propertyName),\n      getRootBoundingClientRect: () => this.root.getBoundingClientRect(),\n      hasClass: (className) => this.root.classList.contains(className),\n      hasLeadingIcon: () => !!this.leadingIcon,\n      isRTL: () => window.getComputedStyle(this.root).getPropertyValue(\n                       'direction') === 'rtl',\n      isTrailingActionNavigable: () => {\n        if (this.trailingAction) {\n          return this.trailingAction.isNavigable();\n        }\n        return false;\n      },\n      notifyInteraction: () => this.emit<MDCChipInteractionEventDetail>(\n          strings.INTERACTION_EVENT, {chipId: this.id},\n          true /* shouldBubble */),\n      notifyNavigation: (key, source) =>\n          this.emit<MDCChipNavigationEventDetail>(\n              strings.NAVIGATION_EVENT, {chipId: this.id, key, source},\n              true /* shouldBubble */),\n      notifyRemoval: (removedAnnouncement) => {\n        this.emit<MDCChipRemovalEventDetail>(\n            strings.REMOVAL_EVENT, {chipId: this.id, removedAnnouncement},\n            true /* shouldBubble */);\n      },\n      notifySelection: (selected, shouldIgnore) =>\n          this.emit<MDCChipSelectionEventDetail>(\n              strings.SELECTION_EVENT,\n              {chipId: this.id, selected, shouldIgnore},\n              true /* shouldBubble */),\n      notifyTrailingIconInteraction: () =>\n          this.emit<MDCChipInteractionEventDetail>(\n              strings.TRAILING_ICON_INTERACTION_EVENT, {chipId: this.id},\n              true /* shouldBubble */),\n      notifyEditStart: () => { /* Not Implemented. */ },\n      notifyEditFinish: () => { /* Not Implemented. */ },\n      removeClass: (className) => this.root.classList.remove(className),\n      removeClassFromLeadingIcon: (className) => {\n        if (this.leadingIcon) {\n          this.leadingIcon.classList.remove(className);\n        }\n      },\n      removeTrailingActionFocus: () => {\n        if (this.trailingAction) {\n          this.trailingAction.removeFocus();\n        }\n      },\n      setPrimaryActionAttr: (attr, value) => {\n        if (this.primaryAction) {\n          this.primaryAction.setAttribute(attr, value);\n        }\n      },\n      setStyleProperty: (propertyName, value) =>\n          (this.root as HTMLElement).style.setProperty(propertyName, value),\n    };\n    return new MDCChipFoundation(adapter);\n  }\n\n  setSelectedFromChipSet(selected: boolean, shouldNotifyClients: boolean) {\n    this.foundation.setSelectedFromChipSet(selected, shouldNotifyClients);\n  }\n\n  focusPrimaryAction() {\n    this.foundation.focusPrimaryAction();\n  }\n\n  focusTrailingAction() {\n    this.foundation.focusTrailingAction();\n  }\n\n  removeFocus() {\n    this.foundation.removeFocus();\n  }\n\n  remove() {\n    const parent = this.root.parentNode;\n    if (parent !== null) {\n      parent.removeChild(this.root);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport enum Direction {\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport enum EventSource {\n  PRIMARY = 'primary',\n  TRAILING = 'trailing',\n  NONE = 'none',\n}\n\nexport const strings = {\n  ADDED_ANNOUNCEMENT_ATTRIBUTE: 'data-mdc-chip-added-announcement',\n  ARIA_CHECKED: 'aria-checked',\n  ARROW_DOWN_KEY: 'ArrowDown',\n  ARROW_LEFT_KEY: 'ArrowLeft',\n  ARROW_RIGHT_KEY: 'ArrowRight',\n  ARROW_UP_KEY: 'ArrowUp',\n  BACKSPACE_KEY: 'Backspace',\n  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n  DELETE_KEY: 'Delete',\n  END_KEY: 'End',\n  ENTER_KEY: 'Enter',\n  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n  HOME_KEY: 'Home',\n  IE_ARROW_DOWN_KEY: 'Down',\n  IE_ARROW_LEFT_KEY: 'Left',\n  IE_ARROW_RIGHT_KEY: 'Right',\n  IE_ARROW_UP_KEY: 'Up',\n  IE_DELETE_KEY: 'Del',\n  INTERACTION_EVENT: 'MDCChip:interaction',\n  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n  NAVIGATION_EVENT: 'MDCChip:navigation',\n  PRIMARY_ACTION_SELECTOR: '.mdc-chip__primary-action',\n  REMOVED_ANNOUNCEMENT_ATTRIBUTE: 'data-mdc-chip-removed-announcement',\n  REMOVAL_EVENT: 'MDCChip:removal',\n  SELECTION_EVENT: 'MDCChip:selection',\n  SPACEBAR_KEY: ' ',\n  TAB_INDEX: 'tabindex',\n  TRAILING_ACTION_SELECTOR: '.mdc-chip-trailing-action',\n  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\n\nexport const cssClasses = {\n  CHECKMARK: 'mdc-chip__checkmark',\n  CHIP_EXIT: 'mdc-chip--exit',\n  DELETABLE: 'mdc-chip--deletable',\n  EDITABLE: 'mdc-chip--editable',\n  EDITING: 'mdc-chip--editing',\n  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n  LEADING_ICON: 'mdc-chip__icon--leading',\n  PRIMARY_ACTION: 'mdc-chip__primary-action',\n  PRIMARY_ACTION_FOCUSED: 'mdc-chip--primary-action-focused',\n  SELECTED: 'mdc-chip--selected',\n  TEXT: 'mdc-chip__text',\n  TRAILING_ACTION: 'mdc-chip__trailing-action',\n  TRAILING_ICON: 'mdc-chip__icon--trailing',\n};\n\nexport const navigationKeys = new Set<string>();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nnavigationKeys.add(strings.ARROW_LEFT_KEY);\nnavigationKeys.add(strings.ARROW_RIGHT_KEY);\nnavigationKeys.add(strings.ARROW_DOWN_KEY);\nnavigationKeys.add(strings.ARROW_UP_KEY);\nnavigationKeys.add(strings.END_KEY);\nnavigationKeys.add(strings.HOME_KEY);\nnavigationKeys.add(strings.IE_ARROW_LEFT_KEY);\nnavigationKeys.add(strings.IE_ARROW_RIGHT_KEY);\nnavigationKeys.add(strings.IE_ARROW_DOWN_KEY);\nnavigationKeys.add(strings.IE_ARROW_UP_KEY);\n\nexport const jumpChipKeys = new Set<string>();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\njumpChipKeys.add(strings.ARROW_UP_KEY);\njumpChipKeys.add(strings.ARROW_DOWN_KEY);\njumpChipKeys.add(strings.HOME_KEY);\njumpChipKeys.add(strings.END_KEY);\njumpChipKeys.add(strings.IE_ARROW_UP_KEY);\njumpChipKeys.add(strings.IE_ARROW_DOWN_KEY);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\n\nimport {MDCChipTrailingActionNavigationEvent} from '../trailingaction/types';\n\nimport {MDCChipAdapter} from './adapter';\nimport {cssClasses, Direction, EventSource, jumpChipKeys, navigationKeys, strings} from './constants';\n\nconst emptyClientRect = {\n  bottom: 0,\n  height: 0,\n  left: 0,\n  right: 0,\n  top: 0,\n  width: 0,\n} as any;\n\nenum FocusBehavior {\n  SHOULD_FOCUS,\n  SHOULD_NOT_FOCUS,\n}\n\nexport class MDCChipFoundation extends MDCFoundation<MDCChipAdapter> {\n  static override get strings() {\n    return strings;\n  }\n\n  static override get cssClasses() {\n    return cssClasses;\n  }\n\n  static override get defaultAdapter(): MDCChipAdapter {\n    return {\n      addClass: () => undefined,\n      addClassToLeadingIcon: () => undefined,\n      eventTargetHasClass: () => false,\n      focusPrimaryAction: () => undefined,\n      focusTrailingAction: () => undefined,\n      getAttribute: () => null,\n      getCheckmarkBoundingClientRect: () => emptyClientRect,\n      getComputedStyleValue: () => '',\n      getRootBoundingClientRect: () => emptyClientRect,\n      hasClass: () => false,\n      hasLeadingIcon: () => false,\n      isRTL: () => false,\n      isTrailingActionNavigable: () => false,\n      notifyEditFinish: () => undefined,\n      notifyEditStart: () => undefined,\n      notifyInteraction: () => undefined,\n      notifyNavigation: () => undefined,\n      notifyRemoval: () => undefined,\n      notifySelection: () => undefined,\n      notifyTrailingIconInteraction: () => undefined,\n      removeClass: () => undefined,\n      removeClassFromLeadingIcon: () => undefined,\n      removeTrailingActionFocus: () => undefined,\n      setPrimaryActionAttr: () => undefined,\n      setStyleProperty: () => undefined,\n    };\n  }\n\n  /** Whether a trailing icon click should immediately trigger exit/removal of the chip. */\n  private shouldRemoveOnTrailingIconClick = true;\n\n  /**\n   * Whether the primary action should receive focus on click. Should only be\n   * set to true for clients who programmatically give focus to a different\n   * element on the page when a chip is clicked (like a menu).\n   */\n  private shouldFocusPrimaryActionOnClick = true;\n\n  constructor(adapter?: Partial<MDCChipAdapter>) {\n    super({...MDCChipFoundation.defaultAdapter, ...adapter});\n  }\n\n  isSelected() {\n    return this.adapter.hasClass(cssClasses.SELECTED);\n  }\n\n  isEditable() {\n    return this.adapter.hasClass(cssClasses.EDITABLE);\n  }\n\n  isEditing() {\n    return this.adapter.hasClass(cssClasses.EDITING);\n  }\n\n  setSelected(selected: boolean) {\n    this.setSelectedImpl(selected);\n    this.notifySelection(selected);\n  }\n\n  setSelectedFromChipSet(selected: boolean, shouldNotifyClients: boolean) {\n    this.setSelectedImpl(selected);\n    if (shouldNotifyClients) {\n      this.notifyIgnoredSelection(selected);\n    }\n  }\n\n  getShouldRemoveOnTrailingIconClick() {\n    return this.shouldRemoveOnTrailingIconClick;\n  }\n\n  setShouldRemoveOnTrailingIconClick(shouldRemove: boolean) {\n    this.shouldRemoveOnTrailingIconClick = shouldRemove;\n  }\n\n  setShouldFocusPrimaryActionOnClick(shouldFocus: boolean) {\n    this.shouldFocusPrimaryActionOnClick = shouldFocus;\n  }\n\n  getDimensions(): DOMRect {\n    const getRootRect = () => this.adapter.getRootBoundingClientRect();\n    const getCheckmarkRect = () =>\n        this.adapter.getCheckmarkBoundingClientRect();\n\n    // When a chip has a checkmark and not a leading icon, the bounding rect changes in size depending on the current\n    // size of the checkmark.\n    if (!this.adapter.hasLeadingIcon()) {\n      const checkmarkRect = getCheckmarkRect();\n      if (checkmarkRect) {\n        const rootRect = getRootRect();\n        // Checkmark is a square, meaning the client rect's width and height are identical once the animation completes.\n        // However, the checkbox is initially hidden by setting the width to 0.\n        // To account for an initial width of 0, we use the checkbox's height instead (which equals the end-state width)\n        // when adding it to the root client rect's width.\n        return {\n          bottom: rootRect.bottom,\n          height: rootRect.height,\n          left: rootRect.left,\n          right: rootRect.right,\n          top: rootRect.top,\n          width: rootRect.width + checkmarkRect.height,\n        } as any;\n      }\n    }\n\n    return getRootRect();\n  }\n\n  /**\n   * Begins the exit animation which leads to removal of the chip.\n   */\n  beginExit() {\n    this.adapter.addClass(cssClasses.CHIP_EXIT);\n  }\n\n  handleClick() {\n    this.adapter.notifyInteraction();\n    this.setPrimaryActionFocusable(this.getFocusBehavior());\n  }\n\n  handleDoubleClick() {\n    if (this.isEditable()) {\n      this.startEditing();\n    }\n  }\n\n  /**\n   * Handles a transition end event on the root element.\n   */\n  handleTransitionEnd(evt: TransitionEvent) {\n    // Handle transition end event on the chip when it is about to be removed.\n    const shouldHandle =\n        this.adapter.eventTargetHasClass(evt.target, cssClasses.CHIP_EXIT);\n    const widthIsAnimating = evt.propertyName === 'width';\n    const opacityIsAnimating = evt.propertyName === 'opacity';\n\n    if (shouldHandle && opacityIsAnimating) {\n      // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n      const chipWidth = this.adapter.getComputedStyleValue('width');\n\n      // On the next frame (once we get the computed width), explicitly set the chip's width\n      // to its current pixel width, so we aren't transitioning out of 'auto'.\n      requestAnimationFrame(() => {\n        this.adapter.setStyleProperty('width', chipWidth);\n\n        // To mitigate jitter, start transitioning padding and margin before width.\n        this.adapter.setStyleProperty('padding', '0');\n        this.adapter.setStyleProperty('margin', '0');\n\n        // On the next frame (once width is explicitly set), transition width to 0.\n        requestAnimationFrame(() => {\n          this.adapter.setStyleProperty('width', '0');\n        });\n      });\n      return;\n    }\n\n    if (shouldHandle && widthIsAnimating) {\n      this.removeFocus();\n      const removedAnnouncement =\n          this.adapter.getAttribute(strings.REMOVED_ANNOUNCEMENT_ATTRIBUTE);\n\n      this.adapter.notifyRemoval(removedAnnouncement);\n    }\n\n    // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n    if (!opacityIsAnimating) {\n      return;\n    }\n\n    const shouldHideLeadingIcon =\n        this.adapter.eventTargetHasClass(evt.target, cssClasses.LEADING_ICON) &&\n        this.adapter.hasClass(cssClasses.SELECTED);\n    const shouldShowLeadingIcon =\n        this.adapter.eventTargetHasClass(evt.target, cssClasses.CHECKMARK) &&\n        !this.adapter.hasClass(cssClasses.SELECTED);\n\n    if (shouldHideLeadingIcon) {\n      this.adapter.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n      return;\n    }\n\n    if (shouldShowLeadingIcon) {\n      this.adapter.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n      return;\n    }\n  }\n\n  handleFocusIn(evt: FocusEvent) {\n    // Early exit if the event doesn't come from the primary action\n    if (!this.eventFromPrimaryAction(evt)) {\n      return;\n    }\n\n    this.adapter.addClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n  }\n\n  handleFocusOut(evt: FocusEvent) {\n    // Early exit if the event doesn't come from the primary action\n    if (!this.eventFromPrimaryAction(evt)) {\n      return;\n    }\n\n    if (this.isEditing()) {\n      this.finishEditing();\n    }\n\n    this.adapter.removeClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n  }\n\n  /**\n   * Handles an interaction event on the trailing icon element. This is used to\n   * prevent the ripple from activating on interaction with the trailing icon.\n   */\n  handleTrailingActionInteraction() {\n    this.adapter.notifyTrailingIconInteraction();\n    this.removeChip();\n  }\n\n  /**\n   * Handles a keydown event from the root element.\n   */\n  handleKeydown(evt: KeyboardEvent) {\n    if (this.isEditing()) {\n      if (this.shouldFinishEditing(evt)) {\n        evt.preventDefault();\n        this.finishEditing();\n      }\n      // When editing, the foundation should only handle key events that finish\n      // the editing process.\n      return;\n    }\n\n    if (this.isEditable()) {\n      if (this.shouldStartEditing(evt)) {\n        evt.preventDefault();\n        this.startEditing();\n      }\n    }\n\n    if (this.shouldNotifyInteraction(evt)) {\n      this.adapter.notifyInteraction();\n      this.setPrimaryActionFocusable(this.getFocusBehavior());\n      return;\n    }\n\n    if (this.isDeleteAction(evt)) {\n      evt.preventDefault();\n      this.removeChip();\n      return;\n    }\n\n    // Early exit if the key is not usable\n    if (!navigationKeys.has(evt.key)) {\n      return;\n    }\n\n    // Prevent default behavior for movement keys which could include scrolling\n    evt.preventDefault();\n    this.focusNextAction(evt.key, EventSource.PRIMARY);\n  }\n\n  handleTrailingActionNavigation(evt: MDCChipTrailingActionNavigationEvent) {\n    this.focusNextAction(evt.detail.key, EventSource.TRAILING);\n  }\n\n  /**\n   * Called by the chip set to remove focus from the chip actions.\n   */\n  removeFocus() {\n    this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n    this.adapter.removeTrailingActionFocus();\n  }\n\n  /**\n   * Called by the chip set to focus the primary action.\n   *\n   */\n  focusPrimaryAction() {\n    this.setPrimaryActionFocusable(FocusBehavior.SHOULD_FOCUS);\n  }\n\n  /**\n   * Called by the chip set to focus the trailing action (if present), otherwise\n   * gives focus to the trailing action.\n   */\n  focusTrailingAction() {\n    const trailingActionIsNavigable = this.adapter.isTrailingActionNavigable();\n    if (trailingActionIsNavigable) {\n      this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n      this.adapter.focusTrailingAction();\n      return;\n    }\n\n    this.focusPrimaryAction();\n  }\n\n  private setPrimaryActionFocusable(focusBehavior: FocusBehavior) {\n    this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '0');\n    if (focusBehavior === FocusBehavior.SHOULD_FOCUS) {\n      this.adapter.focusPrimaryAction();\n    }\n    this.adapter.removeTrailingActionFocus();\n  }\n\n  private getFocusBehavior(): FocusBehavior {\n    if (this.shouldFocusPrimaryActionOnClick) {\n      return FocusBehavior.SHOULD_FOCUS;\n    }\n    return FocusBehavior.SHOULD_NOT_FOCUS;\n  }\n\n  private focusNextAction(key: string, source: EventSource) {\n    const isTrailingActionNavigable = this.adapter.isTrailingActionNavigable();\n    const dir = this.getDirection(key);\n\n    // Early exit if the key should jump chips\n    if (jumpChipKeys.has(key) || !isTrailingActionNavigable) {\n      this.adapter.notifyNavigation(key, source);\n      return;\n    }\n\n    if (source === EventSource.PRIMARY && dir === Direction.RIGHT) {\n      this.focusTrailingAction();\n      return;\n    }\n\n    if (source === EventSource.TRAILING && dir === Direction.LEFT) {\n      this.focusPrimaryAction();\n      return;\n    }\n\n    this.adapter.notifyNavigation(key, EventSource.NONE);\n  }\n\n  private getDirection(key: string): Direction {\n    const isRTL = this.adapter.isRTL();\n    const isLeftKey =\n        key === strings.ARROW_LEFT_KEY || key === strings.IE_ARROW_LEFT_KEY;\n    const isRightKey =\n        key === strings.ARROW_RIGHT_KEY || key === strings.IE_ARROW_RIGHT_KEY;\n    if (!isRTL && isLeftKey || isRTL && isRightKey) {\n      return Direction.LEFT;\n    }\n\n    return Direction.RIGHT;\n  }\n\n  private removeChip() {\n    if (this.shouldRemoveOnTrailingIconClick) {\n      this.beginExit();\n    }\n  }\n\n  private shouldStartEditing(evt: KeyboardEvent): boolean {\n    return this.eventFromPrimaryAction(evt) && evt.key === strings.ENTER_KEY;\n  }\n\n  private shouldFinishEditing(evt: KeyboardEvent): boolean {\n    return evt.key === strings.ENTER_KEY;\n  }\n\n  private shouldNotifyInteraction(evt: KeyboardEvent): boolean {\n    return evt.key === strings.ENTER_KEY || evt.key === strings.SPACEBAR_KEY;\n  }\n\n  private isDeleteAction(evt: KeyboardEvent): boolean {\n    const isDeletable = this.adapter.hasClass(cssClasses.DELETABLE);\n    return isDeletable &&\n        (evt.key === strings.BACKSPACE_KEY || evt.key === strings.DELETE_KEY ||\n         evt.key === strings.IE_DELETE_KEY);\n  }\n\n  private setSelectedImpl(selected: boolean) {\n    if (selected) {\n      this.adapter.addClass(cssClasses.SELECTED);\n      this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'true');\n    } else {\n      this.adapter.removeClass(cssClasses.SELECTED);\n      this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'false');\n    }\n  }\n\n  private notifySelection(selected: boolean) {\n    this.adapter.notifySelection(selected, false);\n  }\n\n  private notifyIgnoredSelection(selected: boolean) {\n    this.adapter.notifySelection(selected, true);\n  }\n\n  private eventFromPrimaryAction(evt: Event) {\n    return this.adapter.eventTargetHasClass(\n        evt.target, cssClasses.PRIMARY_ACTION);\n  }\n\n  private startEditing() {\n    this.adapter.addClass(cssClasses.EDITING);\n    this.adapter.notifyEditStart();\n  }\n\n  private finishEditing() {\n    this.adapter.removeClass(cssClasses.EDITING);\n    this.adapter.notifyEditFinish();\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipFoundation;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './foundation';\nexport * from './types';\nexport {cssClasses as chipCssClasses, strings as chipStrings} from './constants';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {EventSource} from './constants';\n\nexport interface MDCChipInteractionEventDetail {\n  chipId: string;\n}\n\nexport interface MDCChipSelectionEventDetail extends MDCChipInteractionEventDetail {\n  selected: boolean;\n  shouldIgnore: boolean;\n}\n\nexport interface MDCChipRemovalEventDetail extends MDCChipInteractionEventDetail {\n  removedAnnouncement: string|null;\n}\n\nexport interface MDCChipNavigationEventDetail extends MDCChipInteractionEventDetail {\n  key: string;\n  source: EventSource;\n}\n\n// Note: CustomEvent<T> is not supported by Closure Compiler.\n\nexport interface MDCChipInteractionEvent extends Event {\n  readonly detail: MDCChipInteractionEventDetail;\n}\n\nexport interface MDCChipSelectionEvent extends Event {\n  readonly detail: MDCChipSelectionEventDetail;\n}\n\nexport interface MDCChipRemovalEvent extends Event {\n  readonly detail: MDCChipRemovalEventDetail;\n}\n\nexport interface MDCChipNavigationEvent extends Event {\n  readonly detail: MDCChipNavigationEventDetail;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './trailingaction/index';\nexport * from './chip/index';\nexport * from './chip-set/index';\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {InteractionTrigger} from './constants';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCChipTrailingActionAdapter {\n  focus(): void;\n\n  getAttribute(attr: string): string|null;\n\n  notifyInteraction(trigger: InteractionTrigger): void;\n\n  notifyNavigation(key: string): void;\n\n  setAttribute(attr: string, value: string): void;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {SpecificEventListener} from '@material/base/types';\nimport {MDCRippleAdapter} from '@material/ripple/adapter';\nimport {MDCRipple, MDCRippleFactory} from '@material/ripple/component';\nimport {MDCRippleFoundation} from '@material/ripple/foundation';\nimport {MDCRippleCapableSurface} from '@material/ripple/types';\nimport {MDCChipTrailingActionAdapter} from './adapter';\nimport {strings} from './constants';\nimport {MDCChipTrailingActionFoundation} from './foundation';\nimport {MDCChipTrailingActionInteractionEventDetail, MDCChipTrailingActionNavigationEventDetail} from './types';\n\n/**\n * Creates a trailing action component on the given element.\n */\nexport type MDCChipTrailingActionFactory =\n    (el: Element, foundation?: MDCChipTrailingActionFoundation) =>\n        MDCChipTrailingAction;\n\nexport class MDCChipTrailingAction extends\n    MDCComponent<MDCChipTrailingActionFoundation> implements\n        MDCRippleCapableSurface {\n  get ripple(): MDCRipple {\n    return this.rippleSurface;\n  }\n\n  static override attachTo(root: Element) {\n    return new MDCChipTrailingAction(root);\n  }\n\n  private rippleSurface!: MDCRipple;  // assigned in initialize()\n  private handleClick!:\n      SpecificEventListener<'click'>;  // assigned in initialSyncWithDOM()\n  private handleKeydown!:\n      SpecificEventListener<'keydown'>;  // assigned in initialSyncWithDOM()\n\n  override initialize(\n      rippleFactory: MDCRippleFactory = (el, foundation) =>\n          new MDCRipple(el, foundation)) {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    const rippleAdapter: MDCRippleAdapter = MDCRipple.createAdapter(this);\n    this.rippleSurface =\n        rippleFactory(this.root, new MDCRippleFoundation(rippleAdapter));\n  }\n\n  override initialSyncWithDOM() {\n    this.handleClick = (evt: MouseEvent) => {\n      this.foundation.handleClick(evt);\n    };\n    this.handleKeydown = (evt: KeyboardEvent) => {\n      this.foundation.handleKeydown(evt);\n    };\n\n    this.listen('click', this.handleClick);\n    this.listen('keydown', this.handleKeydown);\n  }\n\n  override destroy() {\n    this.rippleSurface.destroy();\n    this.unlisten('click', this.handleClick);\n    this.unlisten('keydown', this.handleKeydown);\n    super.destroy();\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCChipTrailingActionAdapter = {\n      focus: () => {\n        // TODO(b/157231863): Migate MDCComponent#root to HTMLElement\n        (this.root as HTMLElement).focus();\n      },\n      getAttribute: (attr) => this.root.getAttribute(attr),\n      notifyInteraction: (trigger) =>\n          this.emit<MDCChipTrailingActionInteractionEventDetail>(\n              strings.INTERACTION_EVENT, {trigger}, true /* shouldBubble */),\n      notifyNavigation: (key) => {\n        this.emit<MDCChipTrailingActionNavigationEventDetail>(\n            strings.NAVIGATION_EVENT, {key}, true /* shouldBubble */);\n      },\n      setAttribute: (attr, value) => {\n        this.root.setAttribute(attr, value);\n      },\n    };\n    return new MDCChipTrailingActionFoundation(adapter);\n  }\n\n  isNavigable() {\n    return this.foundation.isNavigable();\n  }\n\n  focus() {\n    this.foundation.focus();\n  }\n\n  removeFocus() {\n    this.foundation.removeFocus();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport enum InteractionTrigger {\n  UNSPECIFIED,  // Default type\n  CLICK,\n  BACKSPACE_KEY,\n  DELETE_KEY,\n  SPACEBAR_KEY,\n  ENTER_KEY,\n}\n\nexport const strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  INTERACTION_EVENT: 'MDCChipTrailingAction:interaction',\n  NAVIGATION_EVENT: 'MDCChipTrailingAction:navigation',\n  TAB_INDEX: 'tabindex',\n};\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {isNavigationEvent, KEY, normalizeKey} from '@material/dom/keyboard';\n\nimport {MDCChipTrailingActionAdapter} from './adapter';\nimport {InteractionTrigger, strings} from './constants';\n\nexport class MDCChipTrailingActionFoundation extends\n    MDCFoundation<MDCChipTrailingActionAdapter> {\n  static override get strings() {\n    return strings;\n  }\n\n  static override get defaultAdapter(): MDCChipTrailingActionAdapter {\n    return {\n      focus: () => undefined,\n      getAttribute: () => null,\n      setAttribute: () => undefined,\n      notifyInteraction: () => undefined,\n      notifyNavigation: () => undefined,\n    };\n  }\n\n  constructor(adapter?: Partial<MDCChipTrailingActionAdapter>) {\n    super({...MDCChipTrailingActionFoundation.defaultAdapter, ...adapter});\n  }\n\n  handleClick(evt: MouseEvent) {\n    evt.stopPropagation();\n    this.adapter.notifyInteraction(InteractionTrigger.CLICK);\n  }\n\n  handleKeydown(evt: KeyboardEvent) {\n    evt.stopPropagation();\n    const key = normalizeKey(evt);\n    if (this.shouldNotifyInteractionFromKey(key)) {\n      const trigger = this.getTriggerFromKey(key);\n      this.adapter.notifyInteraction(trigger);\n      return;\n    }\n\n    if (isNavigationEvent(evt)) {\n      this.adapter.notifyNavigation(key);\n      return;\n    }\n  }\n\n  removeFocus() {\n    this.adapter.setAttribute(strings.TAB_INDEX, '-1');\n  }\n\n  focus() {\n    this.adapter.setAttribute(strings.TAB_INDEX, '0');\n    this.adapter.focus();\n  }\n\n  isNavigable() {\n    return this.adapter.getAttribute(strings.ARIA_HIDDEN) !== 'true';\n  }\n\n  private shouldNotifyInteractionFromKey(key: string): boolean {\n    const isFromActionKey = key === KEY.ENTER || key === KEY.SPACEBAR;\n    const isFromDeleteKey = key === KEY.BACKSPACE || key === KEY.DELETE;\n\n    return isFromActionKey || isFromDeleteKey;\n  }\n\n  private getTriggerFromKey(key: string): InteractionTrigger {\n    if (key === KEY.SPACEBAR) {\n      return InteractionTrigger.SPACEBAR_KEY;\n    }\n\n    if (key === KEY.ENTER) {\n      return InteractionTrigger.ENTER_KEY;\n    }\n\n    if (key === KEY.DELETE) {\n      return InteractionTrigger.DELETE_KEY;\n    }\n\n    if (key === KEY.BACKSPACE) {\n      return InteractionTrigger.BACKSPACE_KEY;\n    }\n\n    // Default case, should never be returned\n    return InteractionTrigger.UNSPECIFIED;\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipTrailingActionFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './foundation';\nexport * from './types';\nexport {strings as trailingActionStrings} from './constants';\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {InteractionTrigger} from './constants';\n\nexport interface MDCChipTrailingActionInteractionEventDetail {\n  trigger: InteractionTrigger;\n}\n\nexport interface MDCChipTrailingActionNavigationEventDetail {\n  key: string;\n}\n\n// Note: CustomEvent<T> is not supported by Closure Compiler.\n\nexport interface MDCChipTrailingActionInteractionEvent extends Event {\n  readonly detail: MDCChipTrailingActionInteractionEventDetail;\n}\n\nexport interface MDCChipTrailingActionNavigationEvent extends Event {\n  readonly detail: MDCChipTrailingActionNavigationEventDetail;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './action/index';\nexport * from './chip/index';\nexport * from './chip-set/index';\n\n/**\n * Backwards compatibility for existing clients.\n */\nimport * as deprecated from './deprecated/index';\nexport {\n  deprecated,\n};\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Priorities for the announce function.\n */\nexport enum AnnouncerPriority {\n  POLITE = 'polite',\n  ASSERTIVE = 'assertive',\n}\n\n/**\n * Options for the announce function.\n */\nexport interface AnnouncerMessageOptions {\n  priority?: AnnouncerPriority;\n  ownerDocument?: Document;\n}\n\n/**\n * Data attribute added to live region element.\n */\nexport const DATA_MDC_DOM_ANNOUNCE = 'data-mdc-dom-announce';\n\n/**\n * Announces the given message with optional priority, defaulting to \"polite\"\n */\nexport function announce(message: string, options?: AnnouncerMessageOptions) {\n  Announcer.getInstance().say(message, options);\n}\n\nclass Announcer {\n  private static instance: Announcer;\n  private readonly liveRegions: Map<Document, Map<AnnouncerPriority, Element>>;\n\n  static getInstance(): Announcer {\n    if (!Announcer.instance) {\n      Announcer.instance = new Announcer();\n    }\n\n    return Announcer.instance;\n  }\n\n  // Constructor made private to ensure only the singleton is used\n  private constructor() {\n    this.liveRegions = new Map();\n  }\n\n  say(message: string, options?: AnnouncerMessageOptions) {\n    const priority = options?.priority ?? AnnouncerPriority.POLITE;\n    const ownerDocument = options?.ownerDocument ?? document;\n    const liveRegion = this.getLiveRegion(priority, ownerDocument);\n    // Reset the region to pick up the message, even if the message is the\n    // exact same as before.\n    liveRegion.textContent = '';\n    // Timeout is necessary for screen readers like NVDA and VoiceOver.\n    setTimeout(() => {\n      liveRegion.textContent = message;\n      ownerDocument.addEventListener('click', clearLiveRegion);\n    }, 1);\n\n    function clearLiveRegion() {\n      liveRegion.textContent = '';\n      ownerDocument.removeEventListener('click', clearLiveRegion);\n    }\n  }\n\n  private getLiveRegion(priority: AnnouncerPriority, ownerDocument: Document):\n      Element {\n    let documentLiveRegions = this.liveRegions.get(ownerDocument);\n    if (!documentLiveRegions) {\n      documentLiveRegions = new Map();\n      this.liveRegions.set(ownerDocument, documentLiveRegions);\n    }\n\n    const existingLiveRegion = documentLiveRegions.get(priority);\n    if (existingLiveRegion &&\n        ownerDocument.body.contains(existingLiveRegion as Node)) {\n      return existingLiveRegion;\n    }\n\n    const liveRegion = this.createLiveRegion(priority, ownerDocument);\n    documentLiveRegions.set(priority, liveRegion);\n    return liveRegion;\n  }\n\n  private createLiveRegion(\n      priority: AnnouncerPriority, ownerDocument: Document): Element {\n    const el = ownerDocument.createElement('div');\n    el.style.position = 'absolute';\n    el.style.top = '-9999px';\n    el.style.left = '-9999px';\n    el.style.height = '1px';\n    el.style.overflow = 'hidden';\n    el.setAttribute('aria-atomic', 'true');\n    el.setAttribute('aria-live', priority);\n    el.setAttribute(DATA_MDC_DOM_ANNOUNCE, 'true');\n    ownerDocument.body.appendChild(el);\n    return el;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Determine whether the current browser supports passive event listeners, and\n * if so, use them.\n */\nexport function applyPassive(globalObj: Window = window):\n    boolean | EventListenerOptions {\n  return supportsPassiveOption(globalObj) ?\n      {passive: true} as AddEventListenerOptions :\n      false;\n}\n\nfunction supportsPassiveOption(globalObj: Window = window): boolean {\n  // See\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n  let passiveSupported = false;\n\n  try {\n    const options = {\n      // This function will be called when the browser\n      // attempts to access the passive property.\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n\n    const handler = () => {};\n    globalObj.document.addEventListener('test', handler, options);\n    globalObj.document.removeEventListener(\n        'test', handler, options as EventListenerOptions);\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * KEY provides normalized string values for keys.\n */\nexport const KEY = {\n  UNKNOWN: 'Unknown',\n  BACKSPACE: 'Backspace',\n  ENTER: 'Enter',\n  SPACEBAR: 'Spacebar',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n  END: 'End',\n  HOME: 'Home',\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_UP: 'ArrowUp',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_DOWN: 'ArrowDown',\n  DELETE: 'Delete',\n  ESCAPE: 'Escape',\n  TAB: 'Tab',\n};\n\nconst normalizedKeys = new Set<string>();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nnormalizedKeys.add(KEY.BACKSPACE);\nnormalizedKeys.add(KEY.ENTER);\nnormalizedKeys.add(KEY.SPACEBAR);\nnormalizedKeys.add(KEY.PAGE_UP);\nnormalizedKeys.add(KEY.PAGE_DOWN);\nnormalizedKeys.add(KEY.END);\nnormalizedKeys.add(KEY.HOME);\nnormalizedKeys.add(KEY.ARROW_LEFT);\nnormalizedKeys.add(KEY.ARROW_UP);\nnormalizedKeys.add(KEY.ARROW_RIGHT);\nnormalizedKeys.add(KEY.ARROW_DOWN);\nnormalizedKeys.add(KEY.DELETE);\nnormalizedKeys.add(KEY.ESCAPE);\nnormalizedKeys.add(KEY.TAB);\n\nconst KEY_CODE = {\n  BACKSPACE: 8,\n  ENTER: 13,\n  SPACEBAR: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n  DELETE: 46,\n  ESCAPE: 27,\n  TAB: 9,\n};\n\nconst mappedKeyCodes = new Map<number, string>();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nmappedKeyCodes.set(KEY_CODE.BACKSPACE, KEY.BACKSPACE);\nmappedKeyCodes.set(KEY_CODE.ENTER, KEY.ENTER);\nmappedKeyCodes.set(KEY_CODE.SPACEBAR, KEY.SPACEBAR);\nmappedKeyCodes.set(KEY_CODE.PAGE_UP, KEY.PAGE_UP);\nmappedKeyCodes.set(KEY_CODE.PAGE_DOWN, KEY.PAGE_DOWN);\nmappedKeyCodes.set(KEY_CODE.END, KEY.END);\nmappedKeyCodes.set(KEY_CODE.HOME, KEY.HOME);\nmappedKeyCodes.set(KEY_CODE.ARROW_LEFT, KEY.ARROW_LEFT);\nmappedKeyCodes.set(KEY_CODE.ARROW_UP, KEY.ARROW_UP);\nmappedKeyCodes.set(KEY_CODE.ARROW_RIGHT, KEY.ARROW_RIGHT);\nmappedKeyCodes.set(KEY_CODE.ARROW_DOWN, KEY.ARROW_DOWN);\nmappedKeyCodes.set(KEY_CODE.DELETE, KEY.DELETE);\nmappedKeyCodes.set(KEY_CODE.ESCAPE, KEY.ESCAPE);\nmappedKeyCodes.set(KEY_CODE.TAB, KEY.TAB);\n\nconst navigationKeys = new Set<string>();\n// IE11 has no support for new Set with iterable so we need to initialize this\n// by hand.\nnavigationKeys.add(KEY.PAGE_UP);\nnavigationKeys.add(KEY.PAGE_DOWN);\nnavigationKeys.add(KEY.END);\nnavigationKeys.add(KEY.HOME);\nnavigationKeys.add(KEY.ARROW_LEFT);\nnavigationKeys.add(KEY.ARROW_UP);\nnavigationKeys.add(KEY.ARROW_RIGHT);\nnavigationKeys.add(KEY.ARROW_DOWN);\n\n/**\n * normalizeKey returns the normalized string for a navigational action.\n */\nexport function normalizeKey(evt: KeyboardEvent): string {\n  const {key} = evt;\n  // If the event already has a normalized key, return it\n  if (normalizedKeys.has(key)) {\n    return key;\n  }\n\n  // tslint:disable-next-line:deprecation\n  const mappedKey = mappedKeyCodes.get(evt.keyCode);\n  if (mappedKey) {\n    return mappedKey;\n  }\n  return KEY.UNKNOWN;\n}\n\n/**\n * isNavigationEvent returns whether the event is a navigation event\n */\nexport function isNavigationEvent(evt: KeyboardEvent): boolean {\n  return navigationKeys.has(normalizeKey(evt));\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\nexport function closest(element: Element, selector: string): Element | null {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el: Element | null = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\nexport function matches(element: Element, selector: string): boolean {\n  const nativeMatches = element.matches\n      || element.webkitMatchesSelector\n      || (element as any).msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\n/**\n * Used to compute the estimated scroll width of elements. When an element is\n * hidden due to display: none; being applied to a parent element, the width is\n * returned as 0. However, the element will have a true width once no longer\n * inside a display: none context. This method computes an estimated width when\n * the element is hidden or returns the true width when the element is visble.\n * @param {Element} element the element whose width to estimate\n */\nexport function estimateScrollWidth(element: Element): number {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element as HTMLElement;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n\n  const clone = htmlEl.cloneNode(true) as HTMLElement;\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  document.documentElement.removeChild(clone);\n  return scrollWidth;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {applyPassive} from '@material/dom/events';\nimport {matches} from '@material/dom/ponyfill';\nimport {MDCRippleAdapter} from './adapter';\nimport {MDCRippleFoundation} from './foundation';\nimport {MDCRippleAttachOpts, MDCRippleCapableSurface} from './types';\nimport * as util from './util';\n\nexport type MDCRippleFactory = (el: Element, foundation?: MDCRippleFoundation) => MDCRipple;\n\nexport class MDCRipple extends MDCComponent<MDCRippleFoundation> implements MDCRippleCapableSurface {\n  static override attachTo(root: Element, opts: MDCRippleAttachOpts = {\n    isUnbounded: undefined\n  }): MDCRipple {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (opts.isUnbounded !== undefined) {\n      ripple.unbounded = opts.isUnbounded;\n    }\n    return ripple;\n  }\n\n  static createAdapter(instance: MDCRippleCapableSurface): MDCRippleAdapter {\n    return {\n      addClass: (className) => instance.root.classList.add(className),\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      computeBoundingRect: () => instance.root.getBoundingClientRect(),\n      containsEventTarget: (target) => instance.root.contains(target as Node),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n          document.documentElement.removeEventListener(\n              evtType, handler, applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n          (instance.root as HTMLElement)\n              .removeEventListener(evtType, handler, applyPassive()),\n      deregisterResizeHandler: (handler) =>\n          window.removeEventListener('resize', handler),\n      getWindowPageOffset: () =>\n          ({x: window.pageXOffset, y: window.pageYOffset}),\n      isSurfaceActive: () => matches(instance.root, ':active'),\n      isSurfaceDisabled: () => Boolean(instance.disabled),\n      isUnbounded: () => Boolean(instance.unbounded),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n          document.documentElement.addEventListener(\n              evtType, handler, applyPassive()),\n      registerInteractionHandler: (evtType, handler) =>\n          (instance.root as HTMLElement)\n              .addEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) =>\n          window.addEventListener('resize', handler),\n      removeClass: (className) => instance.root.classList.remove(className),\n      updateCssVariable: (varName, value) =>\n          (instance.root as HTMLElement).style.setProperty(varName, value),\n    };\n  }\n\n  disabled = false;\n\n  private isUnbounded?: boolean;\n\n  get unbounded(): boolean {\n    return Boolean(this.isUnbounded);\n  }\n\n  set unbounded(unbounded: boolean) {\n    this.isUnbounded = Boolean(unbounded);\n    this.setUnbounded();\n  }\n\n  activate() {\n    this.foundation.activate();\n  }\n\n  deactivate() {\n    this.foundation.deactivate();\n  }\n\n  layout() {\n    this.foundation.layout();\n  }\n\n  override getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  override initialSyncWithDOM() {\n    const root = this.root as HTMLElement;\n    this.isUnbounded = 'mdcRippleIsUnbounded' in root.dataset;\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   */\n  private setUnbounded() {\n    this.foundation.setUnbounded(Boolean(this.isUnbounded));\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n};\n\nexport const strings = {\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n};\n\nexport const numbers = {\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  INITIAL_ORIGIN_SCALE: 0.6,\n  PADDING: 10,\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {MDCRippleAdapter} from './adapter';\nimport {cssClasses, numbers, strings} from './constants';\nimport {MDCRipplePoint} from './types';\nimport {getNormalizedEventCoords} from './util';\n\ninterface ActivationStateType {\n  isActivated?: boolean;\n  hasDeactivationUXRun?: boolean;\n  wasActivatedByPointer?: boolean;\n  wasElementMadeActive?: boolean;\n  activationEvent?: Event;\n  isProgrammatic?: boolean;\n}\n\ninterface FgTranslationCoordinates {\n  startPoint: MDCRipplePoint;\n  endPoint: MDCRipplePoint;\n}\n\ninterface Coordinates {\n  left: number;\n  top: number;\n}\n\ninterface EventHandlerNonNull {\n  (event: Event): any;\n}\n\ntype ActivationEventType = 'touchstart' | 'pointerdown' | 'mousedown' | 'keydown';\ntype DeactivationEventType = 'touchend' | 'pointerup' | 'mouseup' | 'contextmenu';\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES: ActivationEventType[] = [\n  'touchstart', 'pointerdown', 'mousedown', 'keydown',\n];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES: DeactivationEventType[] = [\n  'touchend', 'pointerup', 'mouseup', 'contextmenu',\n];\n\n// simultaneous nested activations\nlet activatedTargets: Array<EventTarget | null> = [];\n\nexport class MDCRippleFoundation extends MDCFoundation<MDCRippleAdapter> {\n  static override get cssClasses() {\n    return cssClasses;\n  }\n\n  static override get strings() {\n    return strings;\n  }\n\n  static override get numbers() {\n    return numbers;\n  }\n\n  static override get defaultAdapter(): MDCRippleAdapter {\n    return {\n      addClass: () => undefined,\n      browserSupportsCssVars: () => true,\n      computeBoundingRect: () =>\n          ({top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0} as any),\n      containsEventTarget: () => true,\n      deregisterDocumentInteractionHandler: () => undefined,\n      deregisterInteractionHandler: () => undefined,\n      deregisterResizeHandler: () => undefined,\n      getWindowPageOffset: () => ({x: 0, y: 0}),\n      isSurfaceActive: () => true,\n      isSurfaceDisabled: () => true,\n      isUnbounded: () => true,\n      registerDocumentInteractionHandler: () => undefined,\n      registerInteractionHandler: () => undefined,\n      registerResizeHandler: () => undefined,\n      removeClass: () => undefined,\n      updateCssVariable: () => undefined,\n    };\n  }\n\n  private activationAnimationHasEnded = false;\n  private activationState: ActivationStateType;\n  private activationTimer = 0;\n  private fgDeactivationRemovalTimer = 0;\n  private fgScale = '0';\n  private frame = {width: 0, height: 0};\n  private initialSize = 0;\n  private layoutFrame = 0;\n  private maxRadius = 0;\n  private unboundedCoords: Coordinates = {left: 0, top: 0};\n\n  private readonly activationTimerCallback: () => void;\n  private readonly activateHandler: EventHandlerNonNull;\n  private readonly deactivateHandler: EventHandlerNonNull;\n  private readonly focusHandler: EventHandlerNonNull;\n  private readonly blurHandler: EventHandlerNonNull;\n  private readonly resizeHandler: EventHandlerNonNull;\n\n  private previousActivationEvent?: Event;\n\n  constructor(adapter?: Partial<MDCRippleAdapter>) {\n    super({...MDCRippleFoundation.defaultAdapter, ...adapter});\n\n    this.activationState = this.defaultActivationState();\n\n    this.activationTimerCallback = () => {\n      this.activationAnimationHasEnded = true;\n      this.runDeactivationUXLogicIfReady();\n    };\n    this.activateHandler = (e) => {\n      this.activateImpl(e);\n    };\n    this.deactivateHandler = () => {\n      this.deactivateImpl();\n    };\n    this.focusHandler = () => {\n      this.handleFocus();\n    };\n    this.blurHandler = () => {\n      this.handleBlur();\n    };\n    this.resizeHandler = () => {\n      this.layout();\n    };\n  }\n\n  override init() {\n    const supportsPressRipple = this.supportsPressRipple();\n\n    this.registerRootHandlers(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter.addClass(ROOT);\n        if (this.adapter.isUnbounded()) {\n          this.adapter.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal();\n        }\n      });\n    }\n  }\n\n  override destroy() {\n    if (this.supportsPressRipple()) {\n      if (this.activationTimer) {\n        clearTimeout(this.activationTimer);\n        this.activationTimer = 0;\n        this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer) {\n        clearTimeout(this.fgDeactivationRemovalTimer);\n        this.fgDeactivationRemovalTimer = 0;\n        this.adapter.removeClass(\n            MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter.removeClass(ROOT);\n        this.adapter.removeClass(UNBOUNDED);\n        this.removeCssVars();\n      });\n    }\n\n    this.deregisterRootHandlers();\n    this.deregisterDeactivationHandlers();\n  }\n\n  /**\n   * @param evt Optional event containing position information.\n   */\n  activate(evt?: Event): void {\n    this.activateImpl(evt);\n  }\n\n  deactivate(): void {\n    this.deactivateImpl();\n  }\n\n  layout(): void {\n    if (this.layoutFrame) {\n      cancelAnimationFrame(this.layoutFrame);\n    }\n    this.layoutFrame = requestAnimationFrame(() => {\n      this.layoutInternal();\n      this.layoutFrame = 0;\n    });\n  }\n\n  setUnbounded(unbounded: boolean): void {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter.addClass(UNBOUNDED);\n    } else {\n      this.adapter.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus(): void {\n    requestAnimationFrame(\n        () => this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur(): void {\n    requestAnimationFrame(\n        () => this.adapter.removeClass(\n            MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   */\n  private supportsPressRipple(): boolean {\n    return this.adapter.browserSupportsCssVars();\n  }\n\n  private defaultActivationState(): ActivationStateType {\n    return {\n      activationEvent: undefined,\n      hasDeactivationUXRun: false,\n      isActivated: false,\n      isProgrammatic: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n    };\n  }\n\n  /**\n   * supportsPressRipple Passed from init to save a redundant function call\n   */\n  private registerRootHandlers(supportsPressRipple: boolean) {\n    if (supportsPressRipple) {\n      for (const evtType of ACTIVATION_EVENT_TYPES) {\n        this.adapter.registerInteractionHandler(evtType, this.activateHandler);\n      }\n      if (this.adapter.isUnbounded()) {\n        this.adapter.registerResizeHandler(this.resizeHandler);\n      }\n    }\n\n    this.adapter.registerInteractionHandler('focus', this.focusHandler);\n    this.adapter.registerInteractionHandler('blur', this.blurHandler);\n  }\n\n  private registerDeactivationHandlers(evt: Event) {\n    if (evt.type === 'keydown') {\n      this.adapter.registerInteractionHandler('keyup', this.deactivateHandler);\n    } else {\n      for (const evtType of POINTER_DEACTIVATION_EVENT_TYPES) {\n        this.adapter.registerDocumentInteractionHandler(\n            evtType, this.deactivateHandler);\n      }\n    }\n  }\n\n  private deregisterRootHandlers() {\n    for (const evtType of ACTIVATION_EVENT_TYPES) {\n      this.adapter.deregisterInteractionHandler(evtType, this.activateHandler);\n    }\n    this.adapter.deregisterInteractionHandler('focus', this.focusHandler);\n    this.adapter.deregisterInteractionHandler('blur', this.blurHandler);\n\n    if (this.adapter.isUnbounded()) {\n      this.adapter.deregisterResizeHandler(this.resizeHandler);\n    }\n  }\n\n  private deregisterDeactivationHandlers() {\n    this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler);\n    for (const evtType of POINTER_DEACTIVATION_EVENT_TYPES) {\n      this.adapter.deregisterDocumentInteractionHandler(\n          evtType, this.deactivateHandler);\n    }\n  }\n\n  private removeCssVars() {\n    const rippleStrings = MDCRippleFoundation.strings;\n    const keys = Object.keys(rippleStrings) as Array<keyof typeof rippleStrings>;\n    keys.forEach((key) => {\n      if (key.indexOf('VAR_') === 0) {\n        this.adapter.updateCssVariable(rippleStrings[key], null);\n      }\n    });\n  }\n\n  private activateImpl(evt?: Event) {\n    if (this.adapter.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent;\n    const isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = evt === undefined;\n    activationState.activationEvent = evt;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (\n        evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = evt !== undefined &&\n        activatedTargets.length > 0 &&\n        activatedTargets.some(\n            (target) => this.adapter.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState();\n      return;\n    }\n\n    if (evt !== undefined) {\n      activatedTargets.push(evt.target);\n      this.registerDeactivationHandlers(evt);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive(evt);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive\n          && evt !== undefined\n          && ((evt as KeyboardEvent).key === ' ' || (evt as KeyboardEvent).keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive(evt);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState = this.defaultActivationState();\n      }\n    });\n  }\n\n  private checkElementMadeActive(evt?: Event) {\n    return (evt !== undefined && evt.type === 'keydown') ?\n        this.adapter.isSurfaceActive() :\n        true;\n  }\n\n  private animateActivation() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer);\n    clearTimeout(this.fgDeactivationRemovalTimer);\n    this.rmBoundedActivationClasses();\n    this.adapter.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter.computeBoundingRect();\n    this.adapter.addClass(FG_ACTIVATION);\n    this.activationTimer = setTimeout(() => {\n      this.activationTimerCallback();\n    }, DEACTIVATION_TIMEOUT_MS);\n  }\n\n  private getFgTranslationCoordinates(): FgTranslationCoordinates {\n    const {activationEvent, wasActivatedByPointer} = this.activationState;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n          activationEvent,\n          this.adapter.getWindowPageOffset(),\n          this.adapter.computeBoundingRect(),\n      );\n    } else {\n      startPoint = {\n        x: this.frame.width / 2,\n        y: this.frame.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize / 2),\n      y: startPoint.y - (this.initialSize / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame.width / 2) - (this.initialSize / 2),\n      y: (this.frame.height / 2) - (this.initialSize / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private runDeactivationUXLogicIfReady() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded) {\n      this.rmBoundedActivationClasses();\n      this.adapter.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer = setTimeout(() => {\n        this.adapter.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  private rmBoundedActivationClasses() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded = false;\n    this.adapter.computeBoundingRect();\n  }\n\n  private resetActivationState() {\n    this.previousActivationEvent = this.activationState.activationEvent;\n    this.activationState = this.defaultActivationState();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(\n        () => this.previousActivationEvent = undefined,\n        MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  private deactivateImpl(): void {\n    const activationState = this.activationState;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state: ActivationStateType = {...activationState};\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => {\n        this.animateDeactivation(state);\n      });\n      this.resetActivationState();\n    } else {\n      this.deregisterDeactivationHandlers();\n      requestAnimationFrame(() => {\n        this.activationState.hasDeactivationUXRun = true;\n        this.animateDeactivation(state);\n        this.resetActivationState();\n      });\n    }\n  }\n\n  private animateDeactivation({wasActivatedByPointer, wasElementMadeActive}:\n                                  ActivationStateType) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady();\n    }\n  }\n\n  private layoutInternal() {\n    this.frame = this.adapter.computeBoundingRect();\n    const maxDim = Math.max(this.frame.height, this.frame.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(\n          Math.pow(this.frame.width, 2) + Math.pow(this.frame.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius = this.adapter.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    const initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    // Unbounded ripple size should always be even number to equally center align.\n    if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n      this.initialSize = initialSize - 1;\n    } else {\n      this.initialSize = initialSize;\n    }\n    this.fgScale = `${this.maxRadius / this.initialSize}`;\n\n    this.updateLayoutCssVars();\n  }\n\n  private updateLayoutCssVars() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter.updateCssVariable(VAR_FG_SIZE, `${this.initialSize}px`);\n    this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale);\n\n    if (this.adapter.isUnbounded()) {\n      this.unboundedCoords = {\n        left: Math.round((this.frame.width / 2) - (this.initialSize / 2)),\n        top: Math.round((this.frame.height / 2) - (this.initialSize / 2)),\n      };\n\n      this.adapter.updateCssVariable(\n          VAR_LEFT, `${this.unboundedCoords.left}px`);\n      this.adapter.updateCssVariable(VAR_TOP, `${this.unboundedCoords.top}px`);\n    }\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport {MDCRipplePoint} from './types';\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to\n * detect CSS custom variable support.\n */\nlet supportsCssVariables_: boolean | undefined;\n\nexport function supportsCssVariables(windowObj: typeof globalThis, forceRefresh = false): boolean {\n  const {CSS} = windowObj;\n  let supportsCssVars = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables_;\n  }\n\n  const supportsFunctionPresent = CSS && typeof CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return false;\n  }\n\n  const explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n      CSS.supports('(--css-vars: yes)') &&\n      CSS.supports('color', '#00000000')\n  );\n\n  supportsCssVars =\n      explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus;\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVars;\n  }\n  return supportsCssVars;\n}\n\nexport function getNormalizedEventCoords(evt: Event | undefined, pageOffset: MDCRipplePoint, clientRect: DOMRect):\n    MDCRipplePoint {\n  if (!evt) {\n    return {x: 0, y: 0};\n  }\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (evt.type === 'touchstart') {\n    const touchEvent = evt as TouchEvent;\n    normalizedX = touchEvent.changedTouches[0].pageX - documentX;\n    normalizedY = touchEvent.changedTouches[0].pageY - documentY;\n  } else {\n    const mouseEvent = evt as MouseEvent;\n    normalizedX = mouseEvent.pageX - documentX;\n    normalizedY = mouseEvent.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n"],"sourceRoot":""}