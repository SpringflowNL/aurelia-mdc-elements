//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@import "@material/shape/mixins";
@import "@material/theme/mixins";
@import "@material/theme/variables"; // for mdc-theme-prop-value

//
// Public
//

@mixin mdc-dialog-container-fill-color($color) {
  .mdc-dialog__surface {
    @include mdc-theme-prop(background-color, $color);
  }
}

@mixin mdc-dialog-scrim-color($color, $opacity: $mdc-dialog-scrim-opacity) {
  .mdc-dialog__scrim {
    background-color: rgba(mdc-theme-prop-value($color), $opacity);
  }
}

@mixin mdc-dialog-title-ink-color($color, $opacity: $mdc-dialog-title-ink-opacity) {
  .mdc-dialog__title {
    color: rgba(mdc-theme-prop-value($color), $opacity);
  }
}

@mixin mdc-dialog-content-ink-color($color, $opacity: $mdc-dialog-content-ink-opacity) {
  .mdc-dialog__content {
    color: rgba(mdc-theme-prop-value($color), $opacity);
  }
}

@mixin mdc-dialog-scroll-divider-color($color, $opacity: $mdc-dialog-scroll-divider-opacity) {
  &.mdc-dialog--scrollable .mdc-dialog__title,
  &.mdc-dialog--scrollable .mdc-dialog__actions {
    border-color: rgba(mdc-theme-prop-value($color), $opacity);
  }
}

@mixin mdc-dialog-shape-radius($radius, $rtl-reflexive: false) {
  .mdc-dialog__surface {
    @include mdc-shape-radius($radius, $rtl-reflexive);
  }
}

@mixin mdc-dialog-min-width($min-width) {
  .mdc-dialog__surface {
    min-width: $min-width;
  }
}

@mixin mdc-dialog-max-width($max-width, $margin) {
  $max-size-calc-expr: calc(100vw - #{$margin * 2});

  .mdc-dialog__surface {
    @if $max-width {
      $max-width-breakpoint: $max-width + ($margin * 2);

      // Fit snugly within the viewport at smaller screen sizes.
      @media (max-width: $max-width-breakpoint) {
        max-width: $max-size-calc-expr;
      }

      // Once the screen gets big enough, apply a fixed maximum width.
      @media (min-width: $max-width-breakpoint) {
        max-width: $max-width;
      }
    } @else {
      max-width: $max-size-calc-expr;
    }
  }
}

@mixin mdc-dialog-max-height($max-height, $margin) {
  $max-size-calc-expr: calc(100vh - #{$margin * 2});

  .mdc-dialog__surface {
    @if $max-height {
      $max-height-breakpoint: $max-height + ($margin * 2);

      // Fit snugly within the viewport at smaller screen sizes.
      @media (max-height: $max-height-breakpoint) {
        max-height: $max-size-calc-expr;
      }

      // Once the screen gets big enough, apply a fixed maximum height.
      @media (min-height: $max-height-breakpoint) {
        max-height: $max-height;
      }
    } @else {
      max-height: $max-size-calc-expr;
    }
  }
}
