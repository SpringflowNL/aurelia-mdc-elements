{"version":3,"sources":["webpack://mdc.[name]/webpack/universalModuleDefinition","webpack://mdc.[name]/webpack/bootstrap","webpack://mdc.[name]/./packages/mdc-animation/animationframe.ts","webpack://mdc.[name]/./packages/mdc-animation/util.ts","webpack://mdc.[name]/./packages/mdc-base/component.ts","webpack://mdc.[name]/./packages/mdc-base/foundation.ts","webpack://mdc.[name]/./packages/mdc-dom/keyboard.ts","webpack://mdc.[name]/./packages/mdc-tooltip/adapter.ts","webpack://mdc.[name]/./packages/mdc-tooltip/component.ts","webpack://mdc.[name]/./packages/mdc-tooltip/constants.ts","webpack://mdc.[name]/./packages/mdc-tooltip/foundation.ts","webpack://mdc.[name]/./packages/mdc-tooltip/index.ts"],"names":[],"mappings":"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","file":"mdc.tooltip.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@material/tooltip\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tooltip\"] = factory();\n\telse\n\t\troot[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"tooltip\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/mdc-tooltip/index.ts\");\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * AnimationFrame provides a user-friendly abstraction around requesting\n * and canceling animation frames.\n */\nexport class AnimationFrame {\n  private readonly rafIDs = new Map<string, number>();\n\n  /**\n   * Requests an animation frame. Cancels any existing frame with the same key.\n   * @param {string} key The key for this callback.\n   * @param {FrameRequestCallback} callback The callback to be executed.\n   */\n  request(key: string, callback: FrameRequestCallback) {\n    this.cancel(key);\n    const frameID = requestAnimationFrame((frame) => {\n      this.rafIDs.delete(key);\n      // Callback must come *after* the key is deleted so that nested calls to\n      // request with the same key are not deleted.\n      callback(frame);\n    });\n    this.rafIDs.set(key, frameID);\n  }\n\n  /**\n   * Cancels a queued callback with the given key.\n   * @param {string} key The key for this callback.\n   */\n  cancel(key: string) {\n    const rafID = this.rafIDs.get(key);\n    if (rafID) {\n      cancelAnimationFrame(rafID);\n      this.rafIDs.delete(key);\n    }\n  }\n\n  /**\n   * Cancels all queued callback.\n   */\n  cancelAll() {\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach((_, key) => {\n      this.cancel(key);\n    });\n  }\n\n  /**\n   * Returns the queue of unexecuted callback keys.\n   */\n  getQueue(): string[] {\n    const queue: string[] = [];\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach((_, key) => {\n      queue.push(key);\n    });\n    return queue;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {\n  CssVendorPropertyMap, JsVendorPropertyMap,\n  PrefixedCssPropertyName, PrefixedJsEventType,\n  StandardCssPropertyName, StandardJsEventType,\n} from './types';\n\nconst cssPropertyNameMap: CssVendorPropertyMap = {\n  animation: {\n    prefixed: '-webkit-animation',\n    standard: 'animation',\n  },\n  transform: {\n    prefixed: '-webkit-transform',\n    standard: 'transform',\n  },\n  transition: {\n    prefixed: '-webkit-transition',\n    standard: 'transition',\n  },\n};\n\nconst jsEventTypeMap: JsVendorPropertyMap = {\n  animationend: {\n    cssProperty: 'animation',\n    prefixed: 'webkitAnimationEnd',\n    standard: 'animationend',\n  },\n  animationiteration: {\n    cssProperty: 'animation',\n    prefixed: 'webkitAnimationIteration',\n    standard: 'animationiteration',\n  },\n  animationstart: {\n    cssProperty: 'animation',\n    prefixed: 'webkitAnimationStart',\n    standard: 'animationstart',\n  },\n  transitionend: {\n    cssProperty: 'transition',\n    prefixed: 'webkitTransitionEnd',\n    standard: 'transitionend',\n  },\n};\n\nfunction isWindow(windowObj: Window): boolean {\n  return Boolean(windowObj.document) && typeof windowObj.document.createElement === 'function';\n}\n\nexport function getCorrectPropertyName(windowObj: Window, cssProperty: StandardCssPropertyName):\n    StandardCssPropertyName | PrefixedCssPropertyName {\n  if (isWindow(windowObj) && cssProperty in cssPropertyNameMap) {\n    const el = windowObj.document.createElement('div');\n    const {standard, prefixed} = cssPropertyNameMap[cssProperty];\n    const isStandard = standard in el.style;\n    return isStandard ? standard : prefixed;\n  }\n  return cssProperty;\n}\n\nexport function getCorrectEventName(windowObj: Window, eventType: StandardJsEventType):\n    StandardJsEventType | PrefixedJsEventType {\n  if (isWindow(windowObj) && eventType in jsEventTypeMap) {\n    const el = windowObj.document.createElement('div');\n    const {standard, prefixed, cssProperty} = jsEventTypeMap[eventType];\n    const isStandard = cssProperty in el.style;\n    return isStandard ? standard : prefixed;\n  }\n  return eventType;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from './foundation';\nimport {CustomEventListener, EventType, SpecificEventListener} from './types';\n\nexport class MDCComponent<FoundationType extends MDCFoundation> {\n  static attachTo(root: Element): MDCComponent<MDCFoundation<{}>> {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation({}));\n  }\n\n  protected foundation: FoundationType;\n\n  constructor(\n      public root: Element, foundation?: FoundationType, ...args: unknown[]) {\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's\n    // default param so that this.root is defined and can be used within the\n    // foundation class.\n    this.foundation =\n        foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation.init();\n    this.initialSyncWithDOM();\n  }\n\n  /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n  initialize(..._args: Array<unknown>) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  getDefaultFoundation(): FoundationType {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n        'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   */\n  listen<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  listen<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  listen(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.addEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   */\n  unlisten<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  unlisten<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  unlisten(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.removeEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n   */\n  emit<T extends object>(evtType: string, evtData: T, shouldBubble = false) {\n    let evt: CustomEvent<T>;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent<T>(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root.dispatchEvent(evt);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport class MDCFoundation<AdapterType extends {} = {}> {\n  static get cssClasses(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  static get strings(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  static get numbers(): { [key: string]: number } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  static get defaultAdapter(): {} {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  constructor(protected adapter: AdapterType = {} as AdapterType) {}\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\n/**\n * The constructor for MDCFoundation.\n */\nexport interface MDCFoundationConstructor<AdapterType extends object = any> {\n  new(adapter: AdapterType): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * The deprecated constructor for MDCFoundation.\n */\nexport interface MDCFoundationDeprecatedConstructor<AdapterType extends object = any> {\n  readonly cssClasses: Record<string, string>;\n  readonly strings: Record<string, string>;\n  readonly numbers: Record<string, number>;\n  readonly defaultAdapter: AdapterType;\n\n  new(adapter?: Partial<AdapterType>): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * Retrieves the AdapaterType from the provided MDCFoundation generic type.\n */\nexport type MDCFoundationAdapter<T> =\n    T extends MDCFoundation<infer A>? A : never;\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * KEY provides normalized string values for keys.\n */\nexport const KEY = {\n  UNKNOWN: 'Unknown',\n  BACKSPACE: 'Backspace',\n  ENTER: 'Enter',\n  SPACEBAR: 'Spacebar',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n  END: 'End',\n  HOME: 'Home',\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_UP: 'ArrowUp',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_DOWN: 'ArrowDown',\n  DELETE: 'Delete',\n  ESCAPE: 'Escape',\n  TAB: 'Tab',\n};\n\nconst normalizedKeys = new Set<string>();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nnormalizedKeys.add(KEY.BACKSPACE);\nnormalizedKeys.add(KEY.ENTER);\nnormalizedKeys.add(KEY.SPACEBAR);\nnormalizedKeys.add(KEY.PAGE_UP);\nnormalizedKeys.add(KEY.PAGE_DOWN);\nnormalizedKeys.add(KEY.END);\nnormalizedKeys.add(KEY.HOME);\nnormalizedKeys.add(KEY.ARROW_LEFT);\nnormalizedKeys.add(KEY.ARROW_UP);\nnormalizedKeys.add(KEY.ARROW_RIGHT);\nnormalizedKeys.add(KEY.ARROW_DOWN);\nnormalizedKeys.add(KEY.DELETE);\nnormalizedKeys.add(KEY.ESCAPE);\nnormalizedKeys.add(KEY.TAB);\n\nconst KEY_CODE = {\n  BACKSPACE: 8,\n  ENTER: 13,\n  SPACEBAR: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n  DELETE: 46,\n  ESCAPE: 27,\n  TAB: 9,\n};\n\nconst mappedKeyCodes = new Map<number, string>();\n// IE11 has no support for new Map with iterable so we need to initialize this\n// by hand.\nmappedKeyCodes.set(KEY_CODE.BACKSPACE, KEY.BACKSPACE);\nmappedKeyCodes.set(KEY_CODE.ENTER, KEY.ENTER);\nmappedKeyCodes.set(KEY_CODE.SPACEBAR, KEY.SPACEBAR);\nmappedKeyCodes.set(KEY_CODE.PAGE_UP, KEY.PAGE_UP);\nmappedKeyCodes.set(KEY_CODE.PAGE_DOWN, KEY.PAGE_DOWN);\nmappedKeyCodes.set(KEY_CODE.END, KEY.END);\nmappedKeyCodes.set(KEY_CODE.HOME, KEY.HOME);\nmappedKeyCodes.set(KEY_CODE.ARROW_LEFT, KEY.ARROW_LEFT);\nmappedKeyCodes.set(KEY_CODE.ARROW_UP, KEY.ARROW_UP);\nmappedKeyCodes.set(KEY_CODE.ARROW_RIGHT, KEY.ARROW_RIGHT);\nmappedKeyCodes.set(KEY_CODE.ARROW_DOWN, KEY.ARROW_DOWN);\nmappedKeyCodes.set(KEY_CODE.DELETE, KEY.DELETE);\nmappedKeyCodes.set(KEY_CODE.ESCAPE, KEY.ESCAPE);\nmappedKeyCodes.set(KEY_CODE.TAB, KEY.TAB);\n\nconst navigationKeys = new Set<string>();\n// IE11 has no support for new Set with iterable so we need to initialize this\n// by hand.\nnavigationKeys.add(KEY.PAGE_UP);\nnavigationKeys.add(KEY.PAGE_DOWN);\nnavigationKeys.add(KEY.END);\nnavigationKeys.add(KEY.HOME);\nnavigationKeys.add(KEY.ARROW_LEFT);\nnavigationKeys.add(KEY.ARROW_UP);\nnavigationKeys.add(KEY.ARROW_RIGHT);\nnavigationKeys.add(KEY.ARROW_DOWN);\n\n/**\n * normalizeKey returns the normalized string for a navigational action.\n */\nexport function normalizeKey(evt: KeyboardEvent): string {\n  const {key} = evt;\n  // If the event already has a normalized key, return it\n  if (normalizedKeys.has(key)) {\n    return key;\n  }\n\n  // tslint:disable-next-line:deprecation\n  const mappedKey = mappedKeyCodes.get(evt.keyCode);\n  if (mappedKey) {\n    return mappedKey;\n  }\n  return KEY.UNKNOWN;\n}\n\n/**\n * isNavigationEvent returns whether the event is a navigation event\n */\nexport function isNavigationEvent(evt: KeyboardEvent): boolean {\n  return navigationKeys.has(normalizeKey(evt));\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {EventType, SpecificEventListener} from '@material/base/types';\n\nimport {CssClasses} from './constants';\n\n/**\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCTooltipAdapter {\n  /**\n   * @return the attribute string if present on the root element, null\n   * otherwise.\n   */\n  getAttribute(attr: string): string|null;\n\n  /**\n   * Sets an attribute on the root element.\n   */\n  setAttribute(attr: string, value: string): void;\n\n  /**\n   * Removes an attribute on the root element.\n   */\n  removeAttribute(attr: string): void;\n\n  /**\n   * Adds a class onto the root element.\n   */\n  addClass(className: CssClasses): void;\n\n  /**\n   * @return whether or not the root element has the provided className.\n   */\n  hasClass(className: CssClasses): boolean;\n\n  /**\n   * Removes a class from the root element.\n   */\n  removeClass(className: CssClasses): void;\n\n  /**\n   * @return the value of the given computed style property on the root element.\n   */\n  getComputedStyleProperty(propertyName: string): string;\n\n  /**\n   * Sets the property value of the given style property on the root element.\n   */\n  setStyleProperty(propertyName: string, value: string): void;\n\n  /**\n   * Sets the property value of the given style property on the tooltip's\n   * surface-animation element (indicated by the\n   * \"mdc-tooltip__surface-animation\" class).\n   */\n  setSurfaceAnimationStyleProperty(propertyName: string, value: string): void;\n\n  /**\n   * @return the width of the viewport.\n   */\n  getViewportWidth(): number;\n\n  /**\n   * @return the height of the viewport.\n   */\n  getViewportHeight(): number;\n\n  /**\n   * @return the width and height of the tooltip element.\n   */\n  getTooltipSize(): {width: number, height: number};\n\n  /**\n   * @return the DOMRect for the anchor element.\n   */\n  getAnchorBoundingRect(): DOMRect|null;\n\n  /**\n   * @return the DOMRect for the parent of the tooltip element.\n   */\n  getParentBoundingRect(): DOMRect|null;\n\n  /**\n   * @return the attribute string if present on the anchor element, null\n   * otherwise.\n   */\n  getAnchorAttribute(attr: string): string|null;\n\n  /**\n   * Sets an attribute on the anchor element.\n   */\n  setAnchorAttribute(attr: string, value: string): void;\n\n  /**\n   * @return true if the text direction is right-to-left.\n   */\n  isRTL(): boolean;\n\n  /**\n   * Checks if element is contained within the anchor element.\n   */\n  anchorContainsElement(element: HTMLElement): boolean;\n\n  /**\n   * Checks if element is contained within the tooltip element.\n   */\n  tooltipContainsElement(element: HTMLElement): boolean;\n\n  /**\n   * Sets focus on the anchor element.\n   */\n  focusAnchorElement(): void;\n\n  /**\n   * Registers an event listener to the root element.\n   */\n  registerEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Deregisters an event listener to the root element.\n   */\n  deregisterEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Registers an event listener to the anchor element.\n   */\n  registerAnchorEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Deregisters an event listener to the anchor element.\n   */\n  deregisterAnchorEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Registers an event listener to the document body.\n   */\n  registerDocumentEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Deregisters an event listener to the document body.\n   */\n  deregisterDocumentEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Registers an event listener to the window.\n   */\n  registerWindowEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Deregisters an event listener to the window.\n   */\n  deregisterWindowEventHandler<K extends EventType>(\n      evtType: K, handler: SpecificEventListener<K>): void;\n\n  /**\n   * Notification that the tooltip element has been fully hidden. Typically used\n   * to wait for the hide animation to complete.\n   */\n  notifyHidden(): void;\n\n  /**\n   * @return the DOMRect for the caret element.\n   */\n  getTooltipCaretBoundingRect(): DOMRect|null;\n\n  /**\n   * Sets the property value of the given style property on both the caret-top\n   * and caret-bottom elements.\n   */\n  setTooltipCaretStyle(propertyName: string, value: string): void;\n\n  /**\n   * Clears all inline styles set on the caret-top and caret-bottom elements.\n   */\n  clearTooltipCaretStyles(): void;\n\n  /**\n   * @return the active element of the document that owns the tooltip.\n   */\n  getActiveElement(): Element|null;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {EventType, SpecificEventListener} from '@material/base/types';\n\nimport {MDCTooltipAdapter} from './adapter';\nimport {AnchorBoundaryType, CssClasses, events, PositionWithCaret, XPosition, YPosition} from './constants';\nimport {MDCTooltipFoundation} from './foundation';\n\nexport class MDCTooltip extends MDCComponent<MDCTooltipFoundation> {\n  static override attachTo(root: Element) {\n    return new MDCTooltip(root);\n  }\n\n  private anchorElem!: HTMLElement;       // assigned in initialize\n  private isTooltipRich!: boolean;        // assigned in initialSyncWithDOM\n  private isTooltipPersistent!: boolean;  // assigned in initialSyncWithDOM\n\n  private handleMouseEnter!: SpecificEventListener<'mouseenter'>;\n  private handleFocus!: SpecificEventListener<'focus'>;\n  private handleMouseLeave!: SpecificEventListener<'mouseleave'>;\n  private handleTransitionEnd!: SpecificEventListener<'transitionend'>;\n  private handleClick!: SpecificEventListener<'click'>;\n  private handleTouchstart!: SpecificEventListener<'touchstart'>;\n  private handleTouchend!: SpecificEventListener<'touchend'>;\n\n  override initialize() {\n    const tooltipId = this.root.getAttribute('id');\n    if (!tooltipId) {\n      throw new Error('MDCTooltip: Tooltip component must have an id.');\n    }\n\n    const anchorElem = document.querySelector<HTMLElement>(\n                           `[data-tooltip-id=\"${tooltipId}\"]`) ||\n        document.querySelector<HTMLElement>(\n            `[aria-describedby=\"${tooltipId}\"]`);\n    if (!anchorElem) {\n      throw new Error(\n          'MDCTooltip: Tooltip component requires an anchor element annotated with [aria-describedby] or [data-tooltip-id].');\n    }\n    this.anchorElem = anchorElem;\n  }\n\n  override initialSyncWithDOM() {\n    this.isTooltipRich = this.foundation.isRich();\n    this.isTooltipPersistent = this.foundation.isPersistent();\n\n    this.handleMouseEnter = () => {\n      this.foundation.handleAnchorMouseEnter();\n    };\n\n    this.handleFocus = (evt) => {\n      this.foundation.handleAnchorFocus(evt);\n    };\n\n    this.handleMouseLeave = () => {\n      this.foundation.handleAnchorMouseLeave();\n    };\n\n    this.handleTransitionEnd = () => {\n      this.foundation.handleTransitionEnd();\n    };\n\n    this.handleClick = () => {\n      this.foundation.handleAnchorClick();\n    };\n\n    this.handleTouchstart = () => {\n      this.foundation.handleAnchorTouchstart();\n    };\n\n    this.handleTouchend = () => {\n      this.foundation.handleAnchorTouchend();\n    };\n\n    if (this.isTooltipRich && this.isTooltipPersistent) {\n      this.anchorElem.addEventListener('click', this.handleClick);\n    } else {\n      this.anchorElem.addEventListener('mouseenter', this.handleMouseEnter);\n      // TODO(b/157075286): Listening for a 'focus' event is too broad.\n      this.anchorElem.addEventListener('focus', this.handleFocus);\n      this.anchorElem.addEventListener('mouseleave', this.handleMouseLeave);\n      this.anchorElem.addEventListener('touchstart', this.handleTouchstart);\n      this.anchorElem.addEventListener('touchend', this.handleTouchend);\n    }\n\n    this.listen('transitionend', this.handleTransitionEnd);\n  }\n\n  override destroy() {\n    if (this.anchorElem) {\n      if (this.isTooltipRich && this.isTooltipPersistent) {\n        this.anchorElem.removeEventListener('click', this.handleClick);\n      } else {\n        this.anchorElem.removeEventListener(\n            'mouseenter', this.handleMouseEnter);\n        this.anchorElem.removeEventListener('focus', this.handleFocus);\n        this.anchorElem.removeEventListener(\n            'mouseleave', this.handleMouseLeave);\n        this.anchorElem.removeEventListener(\n            'touchstart', this.handleTouchstart);\n        this.anchorElem.removeEventListener('touchend', this.handleTouchend);\n      }\n    }\n\n    this.unlisten('transitionend', this.handleTransitionEnd);\n    super.destroy();\n  }\n\n  setTooltipPosition(position: {\n    xPos?: XPosition,\n    yPos?: YPosition,\n    withCaretPos?: PositionWithCaret\n  }) {\n    this.foundation.setTooltipPosition(position);\n  }\n\n  setAnchorBoundaryType(type: AnchorBoundaryType) {\n    this.foundation.setAnchorBoundaryType(type);\n  }\n\n  setShowDelay(delayMs: number) {\n    this.foundation.setShowDelay(delayMs);\n  }\n\n  setHideDelay(delayMs: number) {\n    this.foundation.setHideDelay(delayMs);\n  }\n\n  hide() {\n    this.foundation.hide();\n  }\n\n  isShown() {\n    return this.foundation.isShown();\n  }\n\n  /**\n   * Method that allows user to specify additional elements that should have a\n   * scroll event listener attached to it. This should be used in instances\n   * where the anchor element is placed inside a scrollable container (that is\n   * not the body element), and will ensure that the tooltip will stay attached\n   * to the anchor on scroll.\n   */\n  attachScrollHandler(\n      addEventListenerFn: <K extends EventType>(\n          event: K, handler: SpecificEventListener<K>) => void) {\n    this.foundation.attachScrollHandler(addEventListenerFn);\n  }\n\n  /**\n   * Must be used in conjunction with #attachScrollHandler. Removes the scroll\n   * event handler from elements on the page.\n   */\n  removeScrollHandler(\n      removeEventHandlerFn: <K extends EventType>(\n          event: K, handler: SpecificEventListener<K>) => void) {\n    this.foundation.removeScrollHandler(removeEventHandlerFn);\n  }\n\n  override getDefaultFoundation() {\n    const adapter: MDCTooltipAdapter = {\n      getAttribute: (attr) => this.root.getAttribute(attr),\n      setAttribute: (attr, value) => {\n        this.root.setAttribute(attr, value);\n      },\n      removeAttribute: (attr) => {\n        this.root.removeAttribute(attr);\n      },\n      addClass: (className) => {\n        this.root.classList.add(className);\n      },\n      hasClass: (className) => this.root.classList.contains(className),\n      removeClass: (className) => {\n        this.root.classList.remove(className);\n      },\n      getComputedStyleProperty: (propertyName) => {\n        return window.getComputedStyle(this.root).getPropertyValue(\n            propertyName);\n      },\n      setStyleProperty: (propertyName, value) => {\n        (this.root as HTMLElement).style.setProperty(propertyName, value);\n      },\n      setSurfaceAnimationStyleProperty: (propertyName, value) => {\n        const surface = this.root.querySelector<HTMLElement>(\n            `.${CssClasses.SURFACE_ANIMATION}`);\n        surface?.style.setProperty(propertyName, value);\n      },\n      getViewportWidth: () => window.innerWidth,\n      getViewportHeight: () => window.innerHeight,\n      getTooltipSize: () => {\n        return {\n          width: (this.root as HTMLElement).offsetWidth,\n          height: (this.root as HTMLElement).offsetHeight\n        };\n      },\n      getAnchorBoundingRect: () => {\n        return this.anchorElem ? this.anchorElem.getBoundingClientRect() : null;\n      },\n      getParentBoundingRect: () => {\n        return this.root.parentElement?.getBoundingClientRect() ?? null;\n      },\n      getAnchorAttribute: (attr) => {\n        return this.anchorElem ? this.anchorElem.getAttribute(attr) : null;\n      },\n      setAnchorAttribute: (attr, value) => {\n        this.anchorElem?.setAttribute(attr, value);\n      },\n      isRTL: () => getComputedStyle(this.root).direction === 'rtl',\n      anchorContainsElement: (element) => {\n        return !!this.anchorElem?.contains(element);\n      },\n      tooltipContainsElement: (element) => {\n        return this.root.contains(element);\n      },\n      focusAnchorElement: () => {\n        this.anchorElem?.focus();\n      },\n      registerEventHandler: (evt, handler) => {\n        if (this.root instanceof HTMLElement) {\n          this.root.addEventListener(evt, handler);\n        }\n      },\n      deregisterEventHandler: (evt, handler) => {\n        if (this.root instanceof HTMLElement) {\n          this.root.removeEventListener(evt, handler);\n        }\n      },\n      registerAnchorEventHandler: (evt, handler) => {\n        this.anchorElem?.addEventListener(evt, handler);\n      },\n      deregisterAnchorEventHandler: (evt, handler) => {\n        this.anchorElem?.removeEventListener(evt, handler);\n      },\n      registerDocumentEventHandler: (evt, handler) => {\n        document.body.addEventListener(evt, handler);\n      },\n      deregisterDocumentEventHandler: (evt, handler) => {\n        document.body.removeEventListener(evt, handler);\n      },\n      registerWindowEventHandler: (evt, handler) => {\n        window.addEventListener(evt, handler);\n      },\n      deregisterWindowEventHandler: (evt, handler) => {\n        window.removeEventListener(evt, handler);\n      },\n      notifyHidden: () => {\n        this.emit(events.HIDDEN, {});\n      },\n      getTooltipCaretBoundingRect: () => {\n        const caret = this.root.querySelector<HTMLElement>(\n            `.${CssClasses.TOOLTIP_CARET_TOP}`);\n        if (!caret) {\n          return null;\n        }\n        return caret.getBoundingClientRect();\n      },\n      setTooltipCaretStyle: (propertyName, value) => {\n        const topCaret = this.root.querySelector<HTMLElement>(\n            `.${CssClasses.TOOLTIP_CARET_TOP}`);\n        const bottomCaret = this.root.querySelector<HTMLElement>(\n            `.${CssClasses.TOOLTIP_CARET_BOTTOM}`);\n\n        if (!topCaret || !bottomCaret) {\n          return;\n        }\n\n        topCaret.style.setProperty(propertyName, value);\n        bottomCaret.style.setProperty(propertyName, value);\n      },\n      clearTooltipCaretStyles: () => {\n        const topCaret = this.root.querySelector<HTMLElement>(\n            `.${CssClasses.TOOLTIP_CARET_TOP}`);\n        const bottomCaret = this.root.querySelector<HTMLElement>(\n            `.${CssClasses.TOOLTIP_CARET_BOTTOM}`);\n\n        if (!topCaret || !bottomCaret) {\n          return;\n        }\n        topCaret.removeAttribute('style');\n        bottomCaret.removeAttribute('style');\n      },\n      getActiveElement: () => {\n        return document.activeElement;\n      },\n    };\n\n    //tslint:enable:object-literal-sort-keys\n    return new MDCTooltipFoundation(adapter);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nenum CssClasses {\n  RICH = 'mdc-tooltip--rich',\n  SHOWN = 'mdc-tooltip--shown',\n  SHOWING = 'mdc-tooltip--showing',\n  SHOWING_TRANSITION = 'mdc-tooltip--showing-transition',\n  HIDE = 'mdc-tooltip--hide',\n  HIDE_TRANSITION = 'mdc-tooltip--hide-transition',\n  MULTILINE_TOOLTIP = 'mdc-tooltip--multiline',\n  SURFACE = 'mdc-tooltip__surface',\n  SURFACE_ANIMATION = 'mdc-tooltip__surface-animation',\n  TOOLTIP_CARET_TOP = 'mdc-tooltip__caret-surface-top',\n  TOOLTIP_CARET_BOTTOM = 'mdc-tooltip__caret-surface-bottom',\n}\n\nconst numbers = {\n  BOUNDED_ANCHOR_GAP: 4,\n  UNBOUNDED_ANCHOR_GAP: 8,\n  MIN_VIEWPORT_TOOLTIP_THRESHOLD: 8,\n  HIDE_DELAY_MS: 600,\n  SHOW_DELAY_MS: 500,\n  // LINT.IfChange(tooltip-dimensions)\n  MIN_HEIGHT: 24,\n  MAX_WIDTH: 200,\n  // LINT.ThenChange(_tooltip.scss:tooltip-dimensions)\n  CARET_INDENTATION: 24,\n  // LINT.IfChange(tooltip-anim-scale)\n  ANIMATION_SCALE: 0.8,\n  // LINT.ThenChange(_tooltip.scss:tooltip-anim-scale)\n};\n\nconst attributes = {\n  ARIA_EXPANDED: 'aria-expanded',\n  ARIA_HASPOPUP: 'aria-haspopup',\n  PERSISTENT: 'data-mdc-tooltip-persistent',\n  SCROLLABLE_ANCESTOR: 'tooltip-scrollable-ancestor',\n  HAS_CARET: 'data-mdc-tooltip-has-caret',\n};\n\nconst events = {\n  HIDDEN: 'MDCTooltip:hidden',\n};\n\n/** Enum for possible tooltip positioning relative to its anchor element. */\nenum XPosition {\n  DETECTED = 0,\n  START = 1,\n  // Note: CENTER is not valid for rich tooltips.\n  CENTER = 2,\n  END = 3,\n}\n\nenum YPosition {\n  DETECTED = 0,\n  ABOVE = 1,\n  BELOW = 2,\n}\n\n/**\n * Enum for possible anchor boundary types. This determines the gap between the\n * bottom of the anchor and the tooltip element.\n * Bounded anchors have an identifiable boundary (e.g. buttons).\n * Unbounded anchors don't have a visually declared boundary (e.g. plain text).\n */\nenum AnchorBoundaryType {\n  BOUNDED = 0,\n  UNBOUNDED = 1,\n}\n\nconst strings = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center',\n  TOP: 'top',\n  BOTTOM: 'bottom'\n};\n\n/**\n * Enum for possible positions of a tooltip with caret (this specifies the\n * positioning of the tooltip relative to the anchor -- the position of the\n * caret will follow that of the tooltip). This can NOT be combined with the\n * above X/YPosition options. Naming for the enums follows: (vertical\n * placement)_(horizontal placement).\n */\nenum PositionWithCaret {\n  DETECTED = 0,\n\n  ABOVE_START = 1,\n  ABOVE_CENTER = 2,\n  ABOVE_END = 3,\n\n  TOP_SIDE_START = 4,\n  CENTER_SIDE_START = 5,\n  BOTTOM_SIDE_START = 6,\n\n  TOP_SIDE_END = 7,\n  CENTER_SIDE_END = 8,\n  BOTTOM_SIDE_END = 9,\n\n  BELOW_START = 10,\n  BELOW_CENTER = 11,\n  BELOW_END = 12,\n}\n\nenum YPositionWithCaret {\n  ABOVE = 1,\n  BELOW = 2,\n  SIDE_TOP = 3,\n  SIDE_CENTER = 4,\n  SIDE_BOTTOM = 5,\n}\n\nenum XPositionWithCaret {\n  START = 1,\n  CENTER = 2,\n  END = 3,\n  SIDE_START = 4,\n  SIDE_END = 5,\n}\n\nexport {\n  CssClasses,\n  numbers,\n  attributes,\n  events,\n  XPosition,\n  AnchorBoundaryType,\n  YPosition,\n  strings,\n  PositionWithCaret,\n  YPositionWithCaret,\n  XPositionWithCaret\n};\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {AnimationFrame} from '@material/animation/animationframe';\nimport {getCorrectPropertyName} from '@material/animation/util';\nimport {MDCFoundation} from '@material/base/foundation';\nimport {EventType, SpecificEventListener} from '@material/base/types';\nimport {KEY, normalizeKey} from '@material/dom/keyboard';\n\nimport {MDCTooltipAdapter} from './adapter';\nimport {AnchorBoundaryType, attributes, CssClasses, numbers, PositionWithCaret, strings, XPosition, XPositionWithCaret, YPosition, YPositionWithCaret} from './constants';\n\nconst {\n  RICH,\n  SHOWN,\n  SHOWING,\n  SHOWING_TRANSITION,\n  HIDE,\n  HIDE_TRANSITION,\n  MULTILINE_TOOLTIP\n} = CssClasses;\n\nenum AnimationKeys {\n  POLL_ANCHOR = 'poll_anchor'\n}\n\n// Accessing `window` without a `typeof` check will throw on Node environments.\nconst HAS_WINDOW = typeof window !== 'undefined';\n\nexport class MDCTooltipFoundation extends MDCFoundation<MDCTooltipAdapter> {\n  static override get defaultAdapter(): MDCTooltipAdapter {\n    return {\n      getAttribute: () => null,\n      setAttribute: () => undefined,\n      removeAttribute: () => undefined,\n      addClass: () => undefined,\n      hasClass: () => false,\n      removeClass: () => undefined,\n      getComputedStyleProperty: () => '',\n      setStyleProperty: () => undefined,\n      setSurfaceAnimationStyleProperty: () => undefined,\n      getViewportWidth: () => 0,\n      getViewportHeight: () => 0,\n      getTooltipSize: () => ({width: 0, height: 0}),\n      getAnchorBoundingRect: () =>\n          ({top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0} as any),\n      getParentBoundingRect: () =>\n          ({top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0} as any),\n      getAnchorAttribute: () => null,\n      setAnchorAttribute: () => null,\n      isRTL: () => false,\n      anchorContainsElement: () => false,\n      tooltipContainsElement: () => false,\n      focusAnchorElement: () => undefined,\n      registerEventHandler: () => undefined,\n      deregisterEventHandler: () => undefined,\n      registerAnchorEventHandler: () => undefined,\n      deregisterAnchorEventHandler: () => undefined,\n      registerDocumentEventHandler: () => undefined,\n      deregisterDocumentEventHandler: () => undefined,\n      registerWindowEventHandler: () => undefined,\n      deregisterWindowEventHandler: () => undefined,\n      notifyHidden: () => undefined,\n      getTooltipCaretBoundingRect: () =>\n          ({top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0} as any),\n      setTooltipCaretStyle: () => undefined,\n      clearTooltipCaretStyles: () => undefined,\n      getActiveElement: () => null,\n    };\n  }\n\n  private interactiveTooltip!: boolean;  // assigned in init()\n  private richTooltip!: boolean;         // assigned in init()\n  private persistentTooltip!: boolean;   // assigned in init()\n  private hasCaret!: boolean;            // assigned in init()\n  private tooltipShown = false;\n  private anchorGap = numbers.BOUNDED_ANCHOR_GAP;\n  private xTooltipPos = XPosition.DETECTED;\n  private yTooltipPos = YPosition.DETECTED;\n  private tooltipPositionWithCaret = PositionWithCaret.DETECTED;\n  // Minimum threshold distance needed between the tooltip and the viewport.\n  private readonly minViewportTooltipThreshold =\n      numbers.MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n  private hideDelayMs = numbers.HIDE_DELAY_MS;\n  private showDelayMs = numbers.SHOW_DELAY_MS;\n\n  private anchorRect: DOMRect|null = null;\n  private parentRect: DOMRect|null = null;\n  private frameId: number|null = null;\n  private hideTimeout: number|null = null;\n  private showTimeout: number|null = null;\n  private readonly animFrame: AnimationFrame;\n  private readonly anchorBlurHandler: SpecificEventListener<'blur'>;\n  private readonly documentClickHandler: SpecificEventListener<'click'>;\n  private readonly documentKeydownHandler: SpecificEventListener<'keydown'>;\n  private readonly tooltipMouseEnterHandler:\n      SpecificEventListener<'mouseenter'>;\n  private readonly tooltipMouseLeaveHandler:\n      SpecificEventListener<'mouseleave'>;\n  private readonly richTooltipFocusOutHandler:\n      SpecificEventListener<'focusout'>;\n  private readonly windowScrollHandler: SpecificEventListener<'scroll'>;\n  private readonly windowResizeHandler: SpecificEventListener<'resize'>;\n\n  private readonly addAncestorScrollEventListeners = new Array<() => void>();\n  private readonly removeAncestorScrollEventListeners = new Array<() => void>();\n\n  constructor(adapter?: Partial<MDCTooltipAdapter>) {\n    super({...MDCTooltipFoundation.defaultAdapter, ...adapter});\n    this.animFrame = new AnimationFrame();\n\n    this.anchorBlurHandler = (evt) => {\n      this.handleAnchorBlur(evt);\n    };\n\n    this.documentClickHandler = (evt) => {\n      this.handleDocumentClick(evt);\n    };\n\n    this.documentKeydownHandler = (evt) => {\n      this.handleKeydown(evt);\n    };\n\n    this.tooltipMouseEnterHandler = () => {\n      this.handleTooltipMouseEnter();\n    };\n\n    this.tooltipMouseLeaveHandler = () => {\n      this.handleTooltipMouseLeave();\n    };\n\n    this.richTooltipFocusOutHandler = (evt) => {\n      this.handleRichTooltipFocusOut(evt);\n    };\n\n    this.windowScrollHandler = () => {\n      this.handleWindowScrollEvent();\n    };\n\n    this.windowResizeHandler = () => {\n      this.handleWindowChangeEvent();\n    };\n  }\n\n  override init() {\n    this.richTooltip = this.adapter.hasClass(RICH);\n    this.persistentTooltip =\n        this.adapter.getAttribute(attributes.PERSISTENT) === 'true';\n    this.interactiveTooltip =\n        !!this.adapter.getAnchorAttribute(attributes.ARIA_EXPANDED) &&\n        this.adapter.getAnchorAttribute(attributes.ARIA_HASPOPUP) === 'dialog';\n    this.hasCaret = this.richTooltip &&\n        this.adapter.getAttribute(attributes.HAS_CARET) === 'true';\n  }\n\n  isShown() {\n    return this.tooltipShown;\n  }\n\n  isRich() {\n    return this.richTooltip;\n  }\n\n  isPersistent() {\n    return this.persistentTooltip;\n  }\n\n  handleAnchorMouseEnter() {\n    if (this.tooltipShown) {\n      // Covers the instance where a user hovers over the anchor to reveal the\n      // tooltip, and then quickly navigates away and then back to the anchor.\n      // The tooltip should stay visible without animating out and then back in\n      // again.\n      this.show();\n    } else {\n      // clearHideTimeout here since handleAnchorMouseLeave sets a hideTimeout\n      // and that can execute before the showTimeout executes, resulting in hide\n      // being called and the showTimeout set below to be cleared.\n      this.clearHideTimeout();\n      this.showTimeout = setTimeout(() => {\n        this.show();\n      }, this.showDelayMs);\n    }\n  }\n\n  handleAnchorTouchstart() {\n    this.showTimeout = setTimeout(() => {\n      this.show();\n    }, this.showDelayMs);\n    // Prevent a context menu from appearing if user is long-pressing on a\n    // tooltip anchor.\n    this.adapter.registerWindowEventHandler(\n        'contextmenu', this.preventContextMenuOnLongTouch);\n  }\n\n  private preventContextMenuOnLongTouch(evt: MouseEvent) {\n    evt.preventDefault();\n  }\n\n  handleAnchorTouchend() {\n    this.clearShowTimeout();\n\n    // Only remove the 'contextmenu' listener if the tooltip is not shown. When\n    // the tooltip *is* shown, listener is removed in the close method.\n    if (!this.isShown()) {\n      this.adapter.deregisterWindowEventHandler(\n          'contextmenu', this.preventContextMenuOnLongTouch);\n    }\n  }\n\n  handleAnchorFocus(evt: FocusEvent) {\n    // TODO(b/157075286): Need to add some way to distinguish keyboard\n    // navigation focus events from other focus events, and only show the\n    // tooltip on the former of these events.\n    const {relatedTarget} = evt;\n    const tooltipContainsRelatedTarget = relatedTarget instanceof HTMLElement &&\n        this.adapter.tooltipContainsElement(relatedTarget);\n    // Do not show tooltip if the previous focus was on a tooltip element. This\n    // occurs when a rich tooltip is closed and focus is restored to the anchor\n    // or when user tab-navigates back into the anchor from the rich tooltip.\n    if (tooltipContainsRelatedTarget) {\n      return;\n    }\n    this.showTimeout = setTimeout(() => {\n      this.show();\n    }, this.showDelayMs);\n  }\n\n  handleAnchorMouseLeave() {\n    this.clearShowTimeout();\n    this.hideTimeout = setTimeout(() => {\n      this.hide();\n    }, this.hideDelayMs);\n  }\n\n  handleAnchorClick() {\n    if (this.tooltipShown) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  handleDocumentClick(evt: MouseEvent) {\n    const anchorOrTooltipContainsTargetElement =\n        evt.target instanceof HTMLElement &&\n        (this.adapter.anchorContainsElement(evt.target) ||\n         this.adapter.tooltipContainsElement(evt.target));\n    // For persistent rich tooltips, we will not hide if:\n    // - The click target is within the anchor element. Otherwise, both\n    //   the anchor element's click handler and this handler will handle the\n    //   click (due to event propagation), resulting in a shown tooltip\n    //   being immediately hidden if the tooltip was initially hidden.\n    // - The click target is within the tooltip element, since clicks\n    //   on the tooltip do not close the tooltip.\n    if (this.richTooltip && this.persistentTooltip &&\n        anchorOrTooltipContainsTargetElement) {\n      return;\n    }\n    // Hide the tooltip immediately on click.\n    this.hide();\n  }\n\n  handleKeydown(evt: KeyboardEvent) {\n    // Hide the tooltip immediately on ESC key.\n    const key = normalizeKey(evt);\n    if (key === KEY.ESCAPE) {\n      const activeElement = this.adapter.getActiveElement();\n      const tooltipContainsActiveElement =\n          activeElement instanceof HTMLElement &&\n          this.adapter.tooltipContainsElement(activeElement);\n      if (tooltipContainsActiveElement) {\n        this.adapter.focusAnchorElement();\n      }\n      this.hide();\n    }\n  }\n\n  private handleAnchorBlur(evt: FocusEvent) {\n    if (this.richTooltip) {\n      const tooltipContainsRelatedTargetElement =\n          evt.relatedTarget instanceof HTMLElement &&\n          this.adapter.tooltipContainsElement(evt.relatedTarget);\n      // If focus changed to the tooltip element, don't hide the tooltip.\n      if (tooltipContainsRelatedTargetElement) {\n        return;\n      }\n      if (evt.relatedTarget === null && this.interactiveTooltip) {\n        // If evt.relatedTarget is null, it is because focus is moving to an\n        // element that is not focusable. This should only occur in instances\n        // of a screen reader in browse mode/linear navigation mode. If the\n        // tooltip is interactive (and so the entire content is not read by\n        // the screen reader upon the tooltip being opened), we want to allow\n        // users to read the content of the tooltip (and not just the focusable\n        // elements).\n        return;\n      }\n    }\n    // Hide tooltip immediately on focus change.\n    this.hide();\n  }\n\n  private handleTooltipMouseEnter() {\n    this.show();\n  }\n\n  private handleTooltipMouseLeave() {\n    this.clearShowTimeout();\n    this.hideTimeout = setTimeout(() => {\n      this.hide();\n    }, this.hideDelayMs);\n  }\n\n  private handleRichTooltipFocusOut(evt: FocusEvent) {\n    const anchorOrTooltipContainsRelatedTargetElement =\n        evt.relatedTarget instanceof HTMLElement &&\n        (this.adapter.anchorContainsElement(evt.relatedTarget) ||\n         this.adapter.tooltipContainsElement(evt.relatedTarget));\n    // If the focus is still within the anchor or the tooltip, do not hide the\n    // tooltip.\n    if (anchorOrTooltipContainsRelatedTargetElement) {\n      return;\n    }\n    if (evt.relatedTarget === null && this.interactiveTooltip) {\n      // If evt.relatedTarget is null, it is because focus is moving to an\n      // element that is not focusable. This should only occur in instances\n      // of a screen reader in browse mode/linear navigation mode. If the\n      // tooltip is interactive (and so the entire content is not read by\n      // the screen reader upon the tooltip being opened), we want to allow\n      // users to read the content of the tooltip (and not just the focusable\n      // elements).\n      return;\n    }\n\n    this.hide();\n  }\n\n  private handleWindowScrollEvent() {\n    if (this.persistentTooltip) {\n      // Persistent tooltips remain visible on user scroll, call appropriate\n      // handler to ensure the tooltip remains pinned to the anchor on page\n      // scroll.\n      this.handleWindowChangeEvent();\n      return;\n    }\n\n    this.hide();\n  }\n\n  /**\n   * On window resize or scroll, check the anchor position and size and\n   * repostion tooltip if necessary.\n   */\n  private handleWindowChangeEvent() {\n    // Since scroll and resize events can fire at a high rate, we throttle\n    // the potential re-positioning of tooltip component using\n    // requestAnimationFrame.\n    this.animFrame.request(AnimationKeys.POLL_ANCHOR, () => {\n      this.repositionTooltipOnAnchorMove();\n    });\n  }\n\n  show() {\n    this.clearHideTimeout();\n    this.clearShowTimeout();\n\n    if (this.tooltipShown) {\n      return;\n    }\n\n    this.tooltipShown = true;\n    this.adapter.removeAttribute('aria-hidden');\n\n    if (this.richTooltip) {\n      if (this.interactiveTooltip) {\n        this.adapter.setAnchorAttribute('aria-expanded', 'true');\n      }\n      this.adapter.registerEventHandler(\n          'focusout', this.richTooltipFocusOutHandler);\n    }\n\n    if (!this.persistentTooltip) {\n      this.adapter.registerEventHandler(\n          'mouseenter', this.tooltipMouseEnterHandler);\n      this.adapter.registerEventHandler(\n          'mouseleave', this.tooltipMouseLeaveHandler);\n    }\n\n    this.adapter.removeClass(HIDE);\n    this.adapter.addClass(SHOWING);\n    if (this.isTooltipMultiline() && !this.richTooltip) {\n      this.adapter.addClass(MULTILINE_TOOLTIP);\n    }\n    this.anchorRect = this.adapter.getAnchorBoundingRect();\n    this.parentRect = this.adapter.getParentBoundingRect();\n    this.richTooltip ? this.positionRichTooltip() : this.positionPlainTooltip();\n\n    this.adapter.registerAnchorEventHandler('blur', this.anchorBlurHandler);\n    this.adapter.registerDocumentEventHandler(\n        'click', this.documentClickHandler);\n    this.adapter.registerDocumentEventHandler(\n        'keydown', this.documentKeydownHandler);\n\n    this.adapter.registerWindowEventHandler('scroll', this.windowScrollHandler);\n    this.adapter.registerWindowEventHandler('resize', this.windowResizeHandler);\n    // Register any additional scroll handlers\n    for (const fn of this.addAncestorScrollEventListeners) {\n      fn();\n    }\n\n    this.frameId = requestAnimationFrame(() => {\n      this.clearAllAnimationClasses();\n      this.adapter.addClass(SHOWN);\n      this.adapter.addClass(SHOWING_TRANSITION);\n    });\n  }\n\n  hide() {\n    this.clearHideTimeout();\n    this.clearShowTimeout();\n\n    if (!this.tooltipShown) {\n      return;\n    }\n\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId);\n    }\n\n    this.tooltipShown = false;\n    this.adapter.setAttribute('aria-hidden', 'true');\n    this.adapter.deregisterEventHandler(\n        'focusout', this.richTooltipFocusOutHandler);\n    if (this.richTooltip) {\n      if (this.interactiveTooltip) {\n        this.adapter.setAnchorAttribute('aria-expanded', 'false');\n      }\n    }\n\n    if (!this.persistentTooltip) {\n      this.adapter.deregisterEventHandler(\n          'mouseenter', this.tooltipMouseEnterHandler);\n      this.adapter.deregisterEventHandler(\n          'mouseleave', this.tooltipMouseLeaveHandler);\n    }\n\n    this.clearAllAnimationClasses();\n    this.adapter.addClass(HIDE);\n    this.adapter.addClass(HIDE_TRANSITION);\n    this.adapter.removeClass(SHOWN);\n\n    this.adapter.deregisterAnchorEventHandler('blur', this.anchorBlurHandler);\n    this.adapter.deregisterDocumentEventHandler(\n        'click', this.documentClickHandler);\n    this.adapter.deregisterDocumentEventHandler(\n        'keydown', this.documentKeydownHandler);\n    this.adapter.deregisterWindowEventHandler(\n        'scroll', this.windowScrollHandler);\n    this.adapter.deregisterWindowEventHandler(\n        'resize', this.windowResizeHandler);\n    this.adapter.deregisterWindowEventHandler(\n        'contextmenu', this.preventContextMenuOnLongTouch);\n\n    // Deregister any additional scroll handlers\n    for (const fn of this.removeAncestorScrollEventListeners) {\n      fn();\n    }\n  }\n\n  handleTransitionEnd() {\n    const isHidingTooltip = this.adapter.hasClass(HIDE);\n\n    this.adapter.removeClass(SHOWING);\n    this.adapter.removeClass(SHOWING_TRANSITION);\n    this.adapter.removeClass(HIDE);\n    this.adapter.removeClass(HIDE_TRANSITION);\n\n    // If handleTransitionEnd is called after hiding the tooltip, the tooltip\n    // will have the HIDE class (before calling the adapter removeClass method).\n    // If tooltip is now hidden, send a notification that the animation has\n    // completed and the tooltip is no longer visible.\n    // We don't send a notification of the animation completing if a showTimeout\n    // value is set -- this happens when a user triggers a tooltip to be shown\n    // while that tooltip is fading. Once this hide transition is completed,\n    // that same tooltip will be re-shown.\n    if (isHidingTooltip && this.showTimeout === null) {\n      this.adapter.notifyHidden();\n    }\n  }\n\n  private clearAllAnimationClasses() {\n    this.adapter.removeClass(SHOWING_TRANSITION);\n    this.adapter.removeClass(HIDE_TRANSITION);\n  }\n\n  setTooltipPosition(position: {\n    xPos?: XPosition,\n    yPos?: YPosition,\n    withCaretPos?: PositionWithCaret\n  }) {\n    const {xPos, yPos, withCaretPos} = position;\n    if (this.hasCaret && withCaretPos) {\n      this.tooltipPositionWithCaret = withCaretPos;\n      return;\n    }\n\n    if (xPos) {\n      this.xTooltipPos = xPos;\n    }\n\n    if (yPos) {\n      this.yTooltipPos = yPos;\n    }\n  }\n\n  setAnchorBoundaryType(type: AnchorBoundaryType) {\n    if (type === AnchorBoundaryType.UNBOUNDED) {\n      this.anchorGap = numbers.UNBOUNDED_ANCHOR_GAP;\n    } else {\n      this.anchorGap = numbers.BOUNDED_ANCHOR_GAP;\n    }\n  }\n\n  setShowDelay(delayMs: number) {\n    this.showDelayMs = delayMs;\n  }\n\n  setHideDelay(delayMs: number) {\n    this.hideDelayMs = delayMs;\n  }\n\n  private isTooltipMultiline() {\n    const tooltipSize = this.adapter.getTooltipSize();\n    return tooltipSize.height > numbers.MIN_HEIGHT &&\n        tooltipSize.width >= numbers.MAX_WIDTH;\n  }\n\n  private positionPlainTooltip() {\n    // A plain tooltip has `fixed` positioning and is placed as an immediate\n    // child of the document body. Its positioning is calculated with respect to\n    // the viewport.\n    const {top, yTransformOrigin, left, xTransformOrigin} =\n        this.calculateTooltipStyles(this.anchorRect);\n\n    const transformProperty =\n        HAS_WINDOW ? getCorrectPropertyName(window, 'transform') : 'transform';\n    this.adapter.setSurfaceAnimationStyleProperty(\n        `${transformProperty}-origin`,\n        `${xTransformOrigin} ${yTransformOrigin}`);\n    this.adapter.setStyleProperty('top', `${top}px`);\n    this.adapter.setStyleProperty('left', `${left}px`);\n  }\n\n  private positionRichTooltip() {\n    // TODO(b/177686782): Remove width setting when max-content is used to style\n    // the rich tooltip.\n\n    // getComputedStyleProperty is used instead of getTooltipSize since\n    // getTooltipSize returns the offSetWidth, which includes the border and\n    // padding. What we need is the width of the tooltip without border and\n    // padding.\n    const width = this.adapter.getComputedStyleProperty('width');\n    // When rich tooltips are positioned within their parent containers, the\n    // tooltip width might be shrunk if it collides with the edge of the parent\n    // container. We set the width of the tooltip to prevent this.\n    this.adapter.setStyleProperty('width', width);\n\n    const {top, yTransformOrigin, left, xTransformOrigin} = this.hasCaret ?\n        this.calculateTooltipWithCaretStyles(this.anchorRect) :\n        this.calculateTooltipStyles(this.anchorRect);\n\n    const transformProperty =\n        HAS_WINDOW ? getCorrectPropertyName(window, 'transform') : 'transform';\n    this.adapter.setSurfaceAnimationStyleProperty(\n        `${transformProperty}-origin`,\n        `${xTransformOrigin} ${yTransformOrigin}`);\n    // A rich tooltip has `absolute` positioning and is placed as a sibling to\n    // the anchor element. Its positioning is calculated with respect to the\n    // parent element, and so the values need to be adjusted against the parent\n    // element.\n    const leftAdjustment = left - (this.parentRect?.left ?? 0);\n    const topAdjustment = top - (this.parentRect?.top ?? 0);\n    this.adapter.setStyleProperty('top', `${topAdjustment}px`);\n    this.adapter.setStyleProperty('left', `${leftAdjustment}px`);\n  }\n\n  /**\n   * Calculates the position of the tooltip. A tooltip will be placed beneath\n   * the anchor element and aligned either with the 'start'/'end' edge of the\n   * anchor element or the 'center'.\n   *\n   * Tooltip alignment is selected such that the tooltip maintains a threshold\n   * distance away from the viewport (defaulting to 'center' alignment). If the\n   * placement of the anchor prevents this threshold distance from being\n   * maintained, the tooltip is positioned so that it does not collide with the\n   * viewport.\n   *\n   * Users can specify an alignment, however, if this alignment results in the\n   * tooltip colliding with the viewport, this specification is overwritten.\n   */\n  private calculateTooltipStyles(anchorRect: DOMRect|null) {\n    if (!anchorRect) {\n      return {top: 0, left: 0};\n    }\n\n    const tooltipSize = this.adapter.getTooltipSize();\n    const top = this.calculateYTooltipDistance(anchorRect, tooltipSize.height);\n    const left = this.calculateXTooltipDistance(anchorRect, tooltipSize.width);\n\n    return {\n      top: top.distance,\n      yTransformOrigin: top.yTransformOrigin,\n      left: left.distance,\n      xTransformOrigin: left.xTransformOrigin\n    };\n  }\n\n  /**\n   * Calculates the `left` distance for the tooltip.\n   * Returns the distance value and a string indicating the x-axis transform-\n   * origin that should be used when animating the tooltip.\n   */\n  private calculateXTooltipDistance(\n      anchorRect: DOMRect,\n      tooltipWidth: number): ({distance: number, xTransformOrigin: string}) {\n    const isLTR = !this.adapter.isRTL();\n    let startPos, endPos, centerPos: number|undefined;\n    let startTransformOrigin, endTransformOrigin: string;\n    if (this.richTooltip) {\n      startPos = isLTR ? anchorRect.left - tooltipWidth : anchorRect.right;\n      endPos = isLTR ? anchorRect.right : anchorRect.left - tooltipWidth;\n\n      startTransformOrigin = isLTR ? strings.RIGHT : strings.LEFT;\n      endTransformOrigin = isLTR ? strings.LEFT : strings.RIGHT;\n    } else {\n      startPos = isLTR ? anchorRect.left : anchorRect.right - tooltipWidth;\n      endPos = isLTR ? anchorRect.right - tooltipWidth : anchorRect.left;\n      centerPos = anchorRect.left + (anchorRect.width - tooltipWidth) / 2;\n\n      startTransformOrigin = isLTR ? strings.LEFT : strings.RIGHT;\n      endTransformOrigin = isLTR ? strings.RIGHT : strings.LEFT;\n    }\n\n    const positionOptions = this.richTooltip ?\n        this.determineValidPositionOptions(startPos, endPos) :\n        // For plain tooltips, centerPos is defined\n        this.determineValidPositionOptions(centerPos!, startPos, endPos);\n\n    if (this.xTooltipPos === XPosition.START && positionOptions.has(startPos)) {\n      return {distance: startPos, xTransformOrigin: startTransformOrigin};\n    }\n    if (this.xTooltipPos === XPosition.END && positionOptions.has(endPos)) {\n      return {distance: endPos, xTransformOrigin: endTransformOrigin};\n    }\n    if (this.xTooltipPos === XPosition.CENTER &&\n        positionOptions.has(centerPos)) {\n      // This code path is only executed if calculating the distance for plain\n      // tooltips. In this instance, centerPos will always be defined, so we can\n      // safely assert that the returned value is non-null/undefined.\n      return {distance: centerPos!, xTransformOrigin: strings.CENTER};\n    }\n\n    // If no user position is supplied, rich tooltips default to end pos, then\n    // start position. Plain tooltips default to center, start, then end.\n    const possiblePositions = this.richTooltip ?\n        [\n          {distance: endPos, xTransformOrigin: endTransformOrigin},\n          {distance: startPos, xTransformOrigin: startTransformOrigin}\n        ] :\n        [\n          {distance: centerPos!, xTransformOrigin: strings.CENTER},\n          {distance: startPos, xTransformOrigin: startTransformOrigin},\n          {distance: endPos, xTransformOrigin: endTransformOrigin}\n        ];\n\n    const validPosition =\n        possiblePositions.find(({distance}) => positionOptions.has(distance));\n    if (validPosition) {\n      return validPosition;\n    }\n\n    // Indicates that all potential positions would result in the tooltip\n    // colliding with the viewport. This would only occur when the anchor\n    // element itself collides with the viewport, or the viewport is very\n    // narrow. In this case, we allow the tooltip to be mis-aligned from the\n    // anchor element.\n    if (anchorRect.left < 0) {\n      return {\n        distance: this.minViewportTooltipThreshold,\n        xTransformOrigin: strings.LEFT\n      };\n    } else {\n      const viewportWidth = this.adapter.getViewportWidth();\n      const distance =\n          viewportWidth - (tooltipWidth + this.minViewportTooltipThreshold);\n      return {distance, xTransformOrigin: strings.RIGHT};\n    }\n  }\n\n  /**\n   * Given the values for the horizontal alignments of the tooltip, calculates\n   * which of these options would result in the tooltip maintaining the required\n   * threshold distance vs which would result in the tooltip staying within the\n   * viewport.\n   *\n   * A Set of values is returned holding the distances that would honor the\n   * above requirements. Following the logic for determining the tooltip\n   * position, if all alignments violate the threshold, then the returned Set\n   * contains values that keep the tooltip within the viewport.\n   */\n  private determineValidPositionOptions(...positions: number[]) {\n    const posWithinThreshold = new Set();\n    const posWithinViewport = new Set();\n\n    for (const position of positions) {\n      if (this.positionHonorsViewportThreshold(position)) {\n        posWithinThreshold.add(position);\n      } else if (this.positionDoesntCollideWithViewport(position)) {\n        posWithinViewport.add(position);\n      }\n    }\n\n    return posWithinThreshold.size ? posWithinThreshold : posWithinViewport;\n  }\n\n  private positionHonorsViewportThreshold(leftPos: number) {\n    const viewportWidth = this.adapter.getViewportWidth();\n    const tooltipWidth = this.adapter.getTooltipSize().width;\n\n    return leftPos + tooltipWidth <=\n        viewportWidth - this.minViewportTooltipThreshold &&\n        leftPos >= this.minViewportTooltipThreshold;\n  }\n\n  private positionDoesntCollideWithViewport(leftPos: number) {\n    const viewportWidth = this.adapter.getViewportWidth();\n    const tooltipWidth = this.adapter.getTooltipSize().width;\n\n    return leftPos + tooltipWidth <= viewportWidth && leftPos >= 0;\n  }\n\n  /**\n   * Calculates the `top` distance for the tooltip.\n   * Returns the distance value and a string indicating the y-axis transform-\n   * origin that should be used when animating the tooltip.\n   */\n  private calculateYTooltipDistance(\n      anchorRect: DOMRect, tooltipHeight: number) {\n    const belowYPos = anchorRect.bottom + this.anchorGap;\n    const aboveYPos = anchorRect.top - (this.anchorGap + tooltipHeight);\n    const yPositionOptions =\n        this.determineValidYPositionOptions(aboveYPos, belowYPos);\n\n    if (this.yTooltipPos === YPosition.ABOVE &&\n        yPositionOptions.has(aboveYPos)) {\n      return {distance: aboveYPos, yTransformOrigin: strings.BOTTOM};\n    } else if (\n        this.yTooltipPos === YPosition.BELOW &&\n        yPositionOptions.has(belowYPos)) {\n      return {distance: belowYPos, yTransformOrigin: strings.TOP};\n    }\n\n    if (yPositionOptions.has(belowYPos)) {\n      return {distance: belowYPos, yTransformOrigin: strings.TOP};\n    }\n\n    if (yPositionOptions.has(aboveYPos)) {\n      return {distance: aboveYPos, yTransformOrigin: strings.BOTTOM};\n    }\n\n    // Indicates that all potential positions would result in the tooltip\n    // colliding with the viewport. This would only occur when the viewport is\n    // very short.\n    return {distance: belowYPos, yTransformOrigin: strings.TOP};\n  }\n\n  /**\n   * Given the values for above/below alignment of the tooltip, calculates\n   * which of these options would result in the tooltip maintaining the required\n   * threshold distance vs which would result in the tooltip staying within the\n   * viewport.\n   *\n   * A Set of values is returned holding the distances that would honor the\n   * above requirements. Following the logic for determining the tooltip\n   * position, if all possible alignments violate the threshold, then the\n   * returned Set contains values that keep the tooltip within the viewport.\n   */\n  private determineValidYPositionOptions(\n      aboveAnchorPos: number, belowAnchorPos: number) {\n    const posWithinThreshold = new Set();\n    const posWithinViewport = new Set();\n\n    if (this.yPositionHonorsViewportThreshold(aboveAnchorPos)) {\n      posWithinThreshold.add(aboveAnchorPos);\n    } else if (this.yPositionDoesntCollideWithViewport(aboveAnchorPos)) {\n      posWithinViewport.add(aboveAnchorPos);\n    }\n\n    if (this.yPositionHonorsViewportThreshold(belowAnchorPos)) {\n      posWithinThreshold.add(belowAnchorPos);\n    } else if (this.yPositionDoesntCollideWithViewport(belowAnchorPos)) {\n      posWithinViewport.add(belowAnchorPos);\n    }\n\n    return posWithinThreshold.size ? posWithinThreshold : posWithinViewport;\n  }\n\n  private yPositionHonorsViewportThreshold(yPos: number) {\n    const viewportHeight = this.adapter.getViewportHeight();\n    const tooltipHeight = this.adapter.getTooltipSize().height;\n\n    return yPos + tooltipHeight + this.minViewportTooltipThreshold <=\n        viewportHeight &&\n        yPos >= this.minViewportTooltipThreshold;\n  }\n\n  private yPositionDoesntCollideWithViewport(yPos: number) {\n    const viewportHeight = this.adapter.getViewportHeight();\n    const tooltipHeight = this.adapter.getTooltipSize().height;\n\n    return yPos + tooltipHeight <= viewportHeight && yPos >= 0;\n  }\n\n  private calculateTooltipWithCaretStyles(anchorRect: DOMRect|null) {\n    // Prior to grabbing the caret bounding rect, we clear all styles set on the\n    // caret. This will ensure the width/height is consistent (since we rotate\n    // the caret 90deg in some positions which would result in the height and\n    // width bounding rect measurements flipping).\n    this.adapter.clearTooltipCaretStyles();\n    const caretSize = this.adapter.getTooltipCaretBoundingRect();\n    if (!anchorRect || !caretSize) {\n      return {position: PositionWithCaret.DETECTED, top: 0, left: 0};\n    }\n\n    // The caret for the rich tooltip is created by rotating/skewing/scaling\n    // square div into a diamond shape and then hiding half of it so it looks\n    // like a triangle. We use the boundingClientRect to calculate the\n    // width/height of the element after the transforms (to the caret) have been\n    // applied. Since the full tooltip is scaled by 0.8 for the entrance\n    // animation, we divide by this value to retrieve the actual caret\n    // dimensions.\n    const caretWidth = caretSize.width / numbers.ANIMATION_SCALE;\n    // Since we hide half of caret, we divide the returned DOMRect height\n    // by 2.\n    const caretHeight = (caretSize.height / numbers.ANIMATION_SCALE) / 2;\n    const tooltipSize = this.adapter.getTooltipSize();\n\n    const yOptions = this.calculateYWithCaretDistanceOptions(\n        anchorRect, tooltipSize.height, {caretWidth, caretHeight});\n    const xOptions = this.calculateXWithCaretDistanceOptions(\n        anchorRect, tooltipSize.width, {caretWidth, caretHeight});\n\n    let positionOptions =\n        this.validateTooltipWithCaretDistances(yOptions, xOptions);\n    if (positionOptions.size < 1) {\n      positionOptions = this.generateBackupPositionOption(\n          anchorRect, tooltipSize, {caretWidth, caretHeight});\n    }\n\n    const {position, xDistance, yDistance} =\n        this.determineTooltipWithCaretDistance(positionOptions);\n\n    // After determining the position of the tooltip relative to the anchor,\n    // place the caret in the corresponding position and retrieve the necessary\n    // x/y transform origins needed to properly animate the tooltip entrance.\n    const {yTransformOrigin, xTransformOrigin} =\n        this.setCaretPositionStyles(position, {caretWidth, caretHeight});\n\n    return {\n      yTransformOrigin,\n      xTransformOrigin,\n      top: yDistance,\n      left: xDistance\n    };\n  }\n\n  private calculateXWithCaretDistanceOptions(\n      anchorRect: DOMRect, tooltipWidth: number,\n      caretSize: {caretHeight: number, caretWidth: number}):\n      Map<XPositionWithCaret, number> {\n    const {caretWidth, caretHeight} = caretSize;\n    const isLTR = !this.adapter.isRTL();\n    const anchorMidpoint = anchorRect.left + anchorRect.width / 2;\n\n    const sideLeftAligned =\n        anchorRect.left - (tooltipWidth + this.anchorGap + caretHeight);\n    const sideRightAligned = anchorRect.right + this.anchorGap + caretHeight;\n    const sideStartPos = isLTR ? sideLeftAligned : sideRightAligned;\n    const sideEndPos = isLTR ? sideRightAligned : sideLeftAligned;\n\n    const verticalLeftAligned =\n        anchorMidpoint - (numbers.CARET_INDENTATION + caretWidth / 2);\n    const verticalRightAligned = anchorMidpoint -\n        (tooltipWidth - numbers.CARET_INDENTATION - caretWidth / 2);\n    const verticalStartPos = isLTR ? verticalLeftAligned : verticalRightAligned;\n    const verticalEndPos = isLTR ? verticalRightAligned : verticalLeftAligned;\n    const verticalCenterPos = anchorMidpoint - tooltipWidth / 2;\n\n    const possiblePositionsMap = new Map([\n      [XPositionWithCaret.START, verticalStartPos],\n      [XPositionWithCaret.CENTER, verticalCenterPos],\n      [XPositionWithCaret.END, verticalEndPos],\n      [XPositionWithCaret.SIDE_END, sideEndPos],\n      [XPositionWithCaret.SIDE_START, sideStartPos],\n    ]);\n    return possiblePositionsMap;\n  }\n\n  private calculateYWithCaretDistanceOptions(\n      anchorRect: DOMRect, tooltipHeight: number,\n      caretSize: {caretHeight: number, caretWidth: number}):\n      Map<YPositionWithCaret, number> {\n    const {caretWidth, caretHeight} = caretSize;\n    const anchorMidpoint = anchorRect.top + anchorRect.height / 2;\n\n    const belowYPos = anchorRect.bottom + this.anchorGap + caretHeight;\n    const aboveYPos =\n        anchorRect.top - (this.anchorGap + tooltipHeight + caretHeight);\n    const sideTopYPos =\n        anchorMidpoint - (numbers.CARET_INDENTATION + caretWidth / 2);\n    const sideCenterYPos = anchorMidpoint - (tooltipHeight / 2);\n    const sideBottomYPos = anchorMidpoint -\n        (tooltipHeight - numbers.CARET_INDENTATION - caretWidth / 2);\n\n    const possiblePositionsMap = new Map([\n      [YPositionWithCaret.ABOVE, aboveYPos],\n      [YPositionWithCaret.BELOW, belowYPos],\n      [YPositionWithCaret.SIDE_TOP, sideTopYPos],\n      [YPositionWithCaret.SIDE_CENTER, sideCenterYPos],\n      [YPositionWithCaret.SIDE_BOTTOM, sideBottomYPos],\n    ]);\n\n    return possiblePositionsMap;\n  }\n\n  private repositionTooltipOnAnchorMove() {\n    const newAnchorRect = this.adapter.getAnchorBoundingRect();\n    if (!newAnchorRect || !this.anchorRect) return;\n\n    if (newAnchorRect.top !== this.anchorRect.top ||\n        newAnchorRect.left !== this.anchorRect.left ||\n        newAnchorRect.height !== this.anchorRect.height ||\n        newAnchorRect.width !== this.anchorRect.width) {\n      this.anchorRect = newAnchorRect;\n      this.parentRect = this.adapter.getParentBoundingRect();\n      this.richTooltip ? this.positionRichTooltip() :\n                         this.positionPlainTooltip();\n    }\n  }\n\n  /**\n   * Given a list of x/y position options for a rich tooltip with caret, checks\n   * if valid x/y combinations of these position options are either within the\n   * viewport threshold, or simply within the viewport. Returns a map with the\n   * valid x/y position combinations that all either honor the viewport\n   * threshold or are simply inside within the viewport.\n   */\n  private validateTooltipWithCaretDistances(\n      yOptions: Map<YPositionWithCaret, number>,\n      xOptions: Map<XPositionWithCaret, number>) {\n    const posWithinThreshold =\n        new Map<PositionWithCaret, {xDistance: number, yDistance: number}>();\n    const posWithinViewport =\n        new Map<PositionWithCaret, {xDistance: number, yDistance: number}>();\n\n    // If a tooltip has a caret, not all combinations of YPositionWithCarets and\n    // XPositionWithCarets are possible. Because of this we only check the\n    // validity of a given XPositionWithCaret if a potential corresponding\n    // YPositionWithCaret is valid.\n    const validMappings = new Map([\n      [\n        YPositionWithCaret.ABOVE,\n        [\n          XPositionWithCaret.START, XPositionWithCaret.CENTER,\n          XPositionWithCaret.END\n        ]\n      ],\n      [\n        YPositionWithCaret.BELOW,\n        [\n          XPositionWithCaret.START, XPositionWithCaret.CENTER,\n          XPositionWithCaret.END\n        ]\n      ],\n      [\n        YPositionWithCaret.SIDE_TOP,\n        [XPositionWithCaret.SIDE_START, XPositionWithCaret.SIDE_END]\n      ],\n      [\n        YPositionWithCaret.SIDE_CENTER,\n        [XPositionWithCaret.SIDE_START, XPositionWithCaret.SIDE_END]\n      ],\n      [\n        YPositionWithCaret.SIDE_BOTTOM,\n        [XPositionWithCaret.SIDE_START, XPositionWithCaret.SIDE_END]\n      ],\n    ]);\n\n    // TODO(b/227383292): Handle instances where one direction can fit in\n    // in the viewport (whether honoring the threshold or not), and the\n    // other direction does not.\n    for (const y of validMappings.keys()) {\n      const yDistance = yOptions.get(y)!;\n      if (this.yPositionHonorsViewportThreshold(yDistance)) {\n        for (const x of validMappings.get(y)!) {\n          const xDistance = xOptions.get(x)!;\n          if (this.positionHonorsViewportThreshold(xDistance)) {\n            const caretPositionName = this.caretPositionOptionsMapping(x, y);\n            posWithinThreshold.set(caretPositionName, {xDistance, yDistance});\n          }\n        }\n      }\n\n      if (this.yPositionDoesntCollideWithViewport(yDistance)) {\n        for (const x of validMappings.get(y)!) {\n          const xDistance = xOptions.get(x)!;\n          if (this.positionDoesntCollideWithViewport(xDistance)) {\n            const caretPositionName = this.caretPositionOptionsMapping(x, y);\n            posWithinViewport.set(caretPositionName, {xDistance, yDistance});\n          }\n        }\n      }\n    }\n\n    return posWithinThreshold.size ? posWithinThreshold : posWithinViewport;\n  }\n\n  /**\n   * Method for generating a horizontal and vertical position for the tooltip if\n   * all other calculated values are considered invalid. This would only happen\n   * in situations of very small viewports/large tooltips.\n   */\n  private generateBackupPositionOption(\n      anchorRect: DOMRect, tooltipSize: {width: number, height: number},\n      caretSize: {caretHeight: number, caretWidth: number}) {\n    const isLTR = !this.adapter.isRTL();\n    let xDistance: number;\n    let xPos: XPositionWithCaret;\n    if (anchorRect.left < 0) {\n      xDistance = this.minViewportTooltipThreshold + caretSize.caretHeight;\n      xPos = isLTR ? XPositionWithCaret.END : XPositionWithCaret.START;\n    } else {\n      const viewportWidth = this.adapter.getViewportWidth();\n      xDistance = viewportWidth -\n          (tooltipSize.width + this.minViewportTooltipThreshold +\n           caretSize.caretHeight);\n      xPos = isLTR ? XPositionWithCaret.START : XPositionWithCaret.END;\n    }\n\n    let yDistance: number;\n    let yPos: YPositionWithCaret;\n    if (anchorRect.top < 0) {\n      yDistance = this.minViewportTooltipThreshold + caretSize.caretHeight;\n      yPos = YPositionWithCaret.BELOW;\n    } else {\n      const viewportHeight = this.adapter.getViewportHeight();\n      yDistance = viewportHeight -\n          (tooltipSize.height + this.minViewportTooltipThreshold +\n           caretSize.caretHeight);\n      yPos = YPositionWithCaret.ABOVE;\n    }\n\n    const caretPositionName = this.caretPositionOptionsMapping(xPos, yPos);\n    return new Map<PositionWithCaret, {xDistance: number, yDistance: number}>(\n        [[caretPositionName, {xDistance, yDistance}]]);\n  }\n\n  /**\n   * Given a list of valid position options for a rich tooltip with caret,\n   * returns the option that should be used.\n   */\n  private determineTooltipWithCaretDistance(\n      options: Map<PositionWithCaret, {xDistance: number, yDistance: number}>):\n      {position: PositionWithCaret, xDistance: number, yDistance: number} {\n    if (options.has(this.tooltipPositionWithCaret)) {\n      const tooltipPos = options.get(this.tooltipPositionWithCaret)!;\n      return {\n        position: this.tooltipPositionWithCaret,\n        xDistance: tooltipPos.xDistance,\n        yDistance: tooltipPos.yDistance,\n      };\n    }\n\n    const orderPref = [\n      PositionWithCaret.ABOVE_START, PositionWithCaret.ABOVE_CENTER,\n      PositionWithCaret.ABOVE_END, PositionWithCaret.TOP_SIDE_START,\n      PositionWithCaret.CENTER_SIDE_START, PositionWithCaret.BOTTOM_SIDE_START,\n      PositionWithCaret.TOP_SIDE_END, PositionWithCaret.CENTER_SIDE_END,\n      PositionWithCaret.BOTTOM_SIDE_END, PositionWithCaret.BELOW_START,\n      PositionWithCaret.BELOW_CENTER, PositionWithCaret.BELOW_END\n    ];\n\n    // Before calling this method we check whether or not the \"options\" param\n    // is empty and invoke a different method. We, therefore, can be certain\n    // that \"validPosition\" will always be defined.\n    const validPosition = orderPref.find((pos) => options.has(pos))!;\n    const pos = options.get(validPosition)!;\n    return {\n      position: validPosition,\n      xDistance: pos.xDistance,\n      yDistance: pos.yDistance,\n    };\n  }\n\n  /**\n   * Returns the corresponding PositionWithCaret enum for the proivded\n   * XPositionWithCaret and YPositionWithCaret enums. This mapping exists so our\n   * public API accepts only PositionWithCaret enums (as all combinations of\n   * XPositionWithCaret and YPositionWithCaret are not valid), but internally we\n   * can calculate the X and Y positions of a rich tooltip with caret\n   * separately.\n   */\n  private caretPositionOptionsMapping(\n      xPos: XPositionWithCaret, yPos: YPositionWithCaret): PositionWithCaret {\n    switch (yPos) {\n      case YPositionWithCaret.ABOVE:\n        if (xPos === XPositionWithCaret.START) {\n          return PositionWithCaret.ABOVE_START;\n        } else if (xPos === XPositionWithCaret.CENTER) {\n          return PositionWithCaret.ABOVE_CENTER;\n        } else if (xPos === XPositionWithCaret.END) {\n          return PositionWithCaret.ABOVE_END;\n        }\n        break;\n      case YPositionWithCaret.BELOW:\n        if (xPos === XPositionWithCaret.START) {\n          return PositionWithCaret.BELOW_START;\n        } else if (xPos === XPositionWithCaret.CENTER) {\n          return PositionWithCaret.BELOW_CENTER;\n        } else if (xPos === XPositionWithCaret.END) {\n          return PositionWithCaret.BELOW_END;\n        }\n        break;\n      case YPositionWithCaret.SIDE_TOP:\n        if (xPos === XPositionWithCaret.SIDE_START) {\n          return PositionWithCaret.TOP_SIDE_START;\n        } else if (xPos === XPositionWithCaret.SIDE_END) {\n          return PositionWithCaret.TOP_SIDE_END;\n        }\n        break;\n      case YPositionWithCaret.SIDE_CENTER:\n        if (xPos === XPositionWithCaret.SIDE_START) {\n          return PositionWithCaret.CENTER_SIDE_START;\n        } else if (xPos === XPositionWithCaret.SIDE_END) {\n          return PositionWithCaret.CENTER_SIDE_END;\n        }\n        break;\n      case YPositionWithCaret.SIDE_BOTTOM:\n        if (xPos === XPositionWithCaret.SIDE_START) {\n          return PositionWithCaret.BOTTOM_SIDE_START;\n        } else if (xPos === XPositionWithCaret.SIDE_END) {\n          return PositionWithCaret.BOTTOM_SIDE_END;\n        }\n        break;\n      default:\n        break;\n    }\n    throw new Error(\n        `MDCTooltipFoundation: Invalid caret position of ${xPos}, ${yPos}`);\n  }\n\n  /**\n   * Given a PositionWithCaret, applies the correct styles to the caret element\n   * so that it is positioned properly on the rich tooltip.\n   * Returns the x and y positions of the caret, to be used as the\n   * transform-origin on the tooltip itself for entrance animations.\n   */\n  private setCaretPositionStyles(position: PositionWithCaret, caretSize: {\n    caretWidth: number,\n    caretHeight: number\n  }) {\n    const values = this.calculateCaretPositionOnTooltip(position, caretSize);\n    if (!values) {\n      return {yTransformOrigin: 0, xTransformOrigin: 0};\n    }\n    // Prior to setting the caret position styles, clear any previous styles\n    // set. This is necessary as all position options do not use the same\n    // properties (e.g. using 'left' or 'right') and so old style properties\n    // might not get overridden, causing misplaced carets.\n    this.adapter.clearTooltipCaretStyles();\n\n    this.adapter.setTooltipCaretStyle(values.yAlignment, values.yAxisPx);\n    this.adapter.setTooltipCaretStyle(values.xAlignment, values.xAxisPx);\n    // Value of scaleX is cos(skew), Math.cos() expects radians though, so we\n    // must first convert the skew value (which is in degrees) to radians.\n    const skewRadians = values.skew * (Math.PI / 180);\n    const scaleX = Math.cos(skewRadians);\n\n    this.adapter.setTooltipCaretStyle(\n        'transform',\n        `rotate(${values.rotation}deg) skewY(${values.skew}deg) scaleX(${\n            scaleX})`);\n    this.adapter.setTooltipCaretStyle(\n        'transform-origin', `${values.xAlignment} ${values.yAlignment}`);\n    for (const corner of values.caretCorners) {\n      this.adapter.setTooltipCaretStyle(corner, '0');\n    }\n    return {\n      yTransformOrigin: values.yTransformOrigin,\n      xTransformOrigin: values.xTransformOrigin\n    };\n  }\n\n  /**\n   * Given a PositionWithCaret, determines the correct styles to position the\n   * caret properly on the rich tooltip.\n   */\n  private calculateCaretPositionOnTooltip(\n      tooltipPos: PositionWithCaret,\n      caretSize: {caretWidth: number, caretHeight: number}): CaretPosOnTooltip\n      |undefined {\n    const isLTR = !this.adapter.isRTL();\n    const tooltipWidth = this.adapter.getComputedStyleProperty('width');\n    const tooltipHeight = this.adapter.getComputedStyleProperty('height');\n    if (!tooltipWidth || !tooltipHeight || !caretSize) {\n      return;\n    }\n\n    const midpointWidth =\n        `calc((${tooltipWidth} - ${caretSize.caretWidth}px) / 2)`;\n    const midpointHeight =\n        `calc((${tooltipHeight} - ${caretSize.caretWidth}px) / 2)`;\n    const flushWithEdge = '0';\n    const indentedFromEdge = `${numbers.CARET_INDENTATION}px`;\n    const indentedFromWidth = `calc(${tooltipWidth} - ${indentedFromEdge})`;\n    const indentedFromHeight = `calc(${tooltipHeight} - ${indentedFromEdge})`;\n    const verticalRotation = 35;\n    const horizontalRotation = Math.abs(90 - verticalRotation);\n    const bottomRightTopLeftBorderRadius =\n        ['border-bottom-right-radius', 'border-top-left-radius'];\n    const bottomLeftTopRightBorderRadius =\n        ['border-bottom-left-radius', 'border-top-right-radius'];\n    const skewDeg = 20;\n\n    switch (tooltipPos) {\n      case PositionWithCaret.BELOW_CENTER:\n        return {\n          yAlignment: strings.TOP,\n          xAlignment: strings.LEFT,\n          yAxisPx: flushWithEdge,\n          xAxisPx: midpointWidth,\n          rotation: -1 * verticalRotation,\n          skew: -1 * skewDeg,\n          xTransformOrigin: midpointWidth,\n          yTransformOrigin: flushWithEdge,\n          caretCorners: bottomRightTopLeftBorderRadius,\n        };\n      case PositionWithCaret.BELOW_END:\n        return {\n          yAlignment: strings.TOP,\n          xAlignment: isLTR ? strings.RIGHT : strings.LEFT,\n          yAxisPx: flushWithEdge,\n          xAxisPx: indentedFromEdge,\n          rotation: isLTR ? verticalRotation : -1 * verticalRotation,\n          skew: isLTR ? skewDeg : -1 * skewDeg,\n          xTransformOrigin: isLTR ? indentedFromWidth : indentedFromEdge,\n          yTransformOrigin: flushWithEdge,\n          caretCorners: isLTR ? bottomLeftTopRightBorderRadius :\n                                bottomRightTopLeftBorderRadius,\n        };\n      case PositionWithCaret.BELOW_START:\n        return {\n          yAlignment: strings.TOP,\n          xAlignment: isLTR ? strings.LEFT : strings.RIGHT,\n          yAxisPx: flushWithEdge,\n          xAxisPx: indentedFromEdge,\n          rotation: isLTR ? -1 * verticalRotation : verticalRotation,\n          skew: isLTR ? -1 * skewDeg : skewDeg,\n          xTransformOrigin: isLTR ? indentedFromEdge : indentedFromWidth,\n          yTransformOrigin: flushWithEdge,\n          caretCorners: isLTR ? bottomRightTopLeftBorderRadius :\n                                bottomLeftTopRightBorderRadius,\n        };\n\n      case PositionWithCaret.TOP_SIDE_END:\n        return {\n          yAlignment: strings.TOP,\n          xAlignment: isLTR ? strings.LEFT : strings.RIGHT,\n          yAxisPx: indentedFromEdge,\n          xAxisPx: flushWithEdge,\n          rotation: isLTR ? horizontalRotation : -1 * horizontalRotation,\n          skew: isLTR ? -1 * skewDeg : skewDeg,\n          xTransformOrigin: isLTR ? flushWithEdge : tooltipWidth,\n          yTransformOrigin: indentedFromEdge,\n          caretCorners: isLTR ? bottomRightTopLeftBorderRadius :\n                                bottomLeftTopRightBorderRadius,\n        };\n      case PositionWithCaret.CENTER_SIDE_END:\n        return {\n          yAlignment: strings.TOP,\n          xAlignment: isLTR ? strings.LEFT : strings.RIGHT,\n          yAxisPx: midpointHeight,\n          xAxisPx: flushWithEdge,\n          rotation: isLTR ? horizontalRotation : -1 * horizontalRotation,\n          skew: isLTR ? -1 * skewDeg : skewDeg,\n          xTransformOrigin: isLTR ? flushWithEdge : tooltipWidth,\n          yTransformOrigin: midpointHeight,\n          caretCorners: isLTR ? bottomRightTopLeftBorderRadius :\n                                bottomLeftTopRightBorderRadius,\n        };\n      case PositionWithCaret.BOTTOM_SIDE_END:\n        return {\n          yAlignment: strings.BOTTOM,\n          xAlignment: isLTR ? strings.LEFT : strings.RIGHT,\n          yAxisPx: indentedFromEdge,\n          xAxisPx: flushWithEdge,\n          rotation: isLTR ? -1 * horizontalRotation : horizontalRotation,\n          skew: isLTR ? skewDeg : -1 * skewDeg,\n          xTransformOrigin: isLTR ? flushWithEdge : tooltipWidth,\n          yTransformOrigin: indentedFromHeight,\n          caretCorners: isLTR ? bottomLeftTopRightBorderRadius :\n                                bottomRightTopLeftBorderRadius,\n        };\n\n      case PositionWithCaret.TOP_SIDE_START:\n        return {\n          yAlignment: strings.TOP,\n          xAlignment: isLTR ? strings.RIGHT : strings.LEFT,\n          yAxisPx: indentedFromEdge,\n          xAxisPx: flushWithEdge,\n          rotation: isLTR ? -1 * horizontalRotation : horizontalRotation,\n          skew: isLTR ? skewDeg : -1 * skewDeg,\n          xTransformOrigin: isLTR ? tooltipWidth : flushWithEdge,\n          yTransformOrigin: indentedFromEdge,\n          caretCorners: isLTR ? bottomLeftTopRightBorderRadius :\n                                bottomRightTopLeftBorderRadius,\n        };\n      case PositionWithCaret.CENTER_SIDE_START:\n        return {\n          yAlignment: strings.TOP,\n          xAlignment: isLTR ? strings.RIGHT : strings.LEFT,\n          yAxisPx: midpointHeight,\n          xAxisPx: flushWithEdge,\n          rotation: isLTR ? -1 * horizontalRotation : horizontalRotation,\n          skew: isLTR ? skewDeg : -1 * skewDeg,\n          xTransformOrigin: isLTR ? tooltipWidth : flushWithEdge,\n          yTransformOrigin: midpointHeight,\n          caretCorners: isLTR ? bottomLeftTopRightBorderRadius :\n                                bottomRightTopLeftBorderRadius,\n        };\n      case PositionWithCaret.BOTTOM_SIDE_START:\n        return {\n          yAlignment: strings.BOTTOM,\n          xAlignment: isLTR ? strings.RIGHT : strings.LEFT,\n          yAxisPx: indentedFromEdge,\n          xAxisPx: flushWithEdge,\n          rotation: isLTR ? horizontalRotation : -1 * horizontalRotation,\n          skew: isLTR ? -1 * skewDeg : skewDeg,\n          xTransformOrigin: isLTR ? tooltipWidth : flushWithEdge,\n          yTransformOrigin: indentedFromHeight,\n          caretCorners: isLTR ? bottomRightTopLeftBorderRadius :\n                                bottomLeftTopRightBorderRadius,\n        };\n\n      case PositionWithCaret.ABOVE_CENTER:\n        return {\n          yAlignment: strings.BOTTOM,\n          xAlignment: strings.LEFT,\n          yAxisPx: flushWithEdge,\n          xAxisPx: midpointWidth,\n          rotation: verticalRotation,\n          skew: skewDeg,\n          xTransformOrigin: midpointWidth,\n          yTransformOrigin: tooltipHeight,\n          caretCorners: bottomLeftTopRightBorderRadius,\n        };\n      case PositionWithCaret.ABOVE_END:\n        return {\n          yAlignment: strings.BOTTOM,\n          xAlignment: isLTR ? strings.RIGHT : strings.LEFT,\n          yAxisPx: flushWithEdge,\n          xAxisPx: indentedFromEdge,\n          rotation: isLTR ? -1 * verticalRotation : verticalRotation,\n          skew: isLTR ? -1 * skewDeg : skewDeg,\n          xTransformOrigin: isLTR ? indentedFromWidth : indentedFromEdge,\n          yTransformOrigin: tooltipHeight,\n          caretCorners: isLTR ? bottomRightTopLeftBorderRadius :\n                                bottomLeftTopRightBorderRadius,\n        };\n      default:\n      case PositionWithCaret.ABOVE_START:\n        return {\n          yAlignment: strings.BOTTOM,\n          xAlignment: isLTR ? strings.LEFT : strings.RIGHT,\n          yAxisPx: flushWithEdge,\n          xAxisPx: indentedFromEdge,\n          rotation: isLTR ? verticalRotation : -1 * verticalRotation,\n          skew: isLTR ? skewDeg : -1 * skewDeg,\n          xTransformOrigin: isLTR ? indentedFromEdge : indentedFromWidth,\n          yTransformOrigin: tooltipHeight,\n          caretCorners: isLTR ? bottomLeftTopRightBorderRadius :\n                                bottomRightTopLeftBorderRadius,\n        };\n    }\n  }\n\n  private clearShowTimeout() {\n    if (this.showTimeout) {\n      clearTimeout(this.showTimeout);\n      this.showTimeout = null;\n    }\n  }\n\n  private clearHideTimeout() {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n      this.hideTimeout = null;\n    }\n  }\n\n  /**\n   * Method that allows user to specify additional elements that should have a\n   * scroll event listener attached to it. This should be used in instances\n   * where the anchor element is placed inside a scrollable container, and will\n   * ensure that the tooltip will stay attached to the anchor on scroll.\n   */\n  attachScrollHandler(\n      addEventListenerFn: <K extends EventType>(\n          event: K, handler: SpecificEventListener<K>) => void) {\n    this.addAncestorScrollEventListeners.push(() => {\n      addEventListenerFn('scroll', this.windowScrollHandler);\n    });\n  }\n\n  /**\n   * Must be used in conjunction with #attachScrollHandler. Removes the scroll\n   * event handler from elements on the page.\n   */\n  removeScrollHandler(\n      removeEventHandlerFn: <K extends EventType>(\n          event: K, handler: SpecificEventListener<K>) => void) {\n    this.removeAncestorScrollEventListeners.push(() => {\n      removeEventHandlerFn('scroll', this.windowScrollHandler);\n    });\n  }\n\n\n  override destroy() {\n    if (this.frameId) {\n      cancelAnimationFrame(this.frameId);\n      this.frameId = null;\n    }\n\n    this.clearHideTimeout();\n    this.clearShowTimeout();\n\n    this.adapter.removeClass(SHOWN);\n    this.adapter.removeClass(SHOWING_TRANSITION);\n    this.adapter.removeClass(SHOWING);\n    this.adapter.removeClass(HIDE);\n    this.adapter.removeClass(HIDE_TRANSITION);\n\n    if (this.richTooltip) {\n      this.adapter.deregisterEventHandler(\n          'focusout', this.richTooltipFocusOutHandler);\n    }\n\n    if (!this.persistentTooltip) {\n      this.adapter.deregisterEventHandler(\n          'mouseenter', this.tooltipMouseEnterHandler);\n      this.adapter.deregisterEventHandler(\n          'mouseleave', this.tooltipMouseLeaveHandler);\n    }\n\n    this.adapter.deregisterAnchorEventHandler('blur', this.anchorBlurHandler);\n\n    this.adapter.deregisterDocumentEventHandler(\n        'click', this.documentClickHandler);\n    this.adapter.deregisterDocumentEventHandler(\n        'keydown', this.documentKeydownHandler);\n\n    this.adapter.deregisterWindowEventHandler(\n        'scroll', this.windowScrollHandler);\n    this.adapter.deregisterWindowEventHandler(\n        'resize', this.windowResizeHandler);\n    for (const fn of this.removeAncestorScrollEventListeners) {\n      fn();\n    }\n\n    this.animFrame.cancelAll();\n  }\n}\n\ninterface CaretPosOnTooltip {\n  // Either 'top' or 'bottom', indicating which should be used with the yAxisPx\n  // value to position the caret.\n  yAlignment: string;\n  // Either 'left' or 'right', indicating which should be used with the xAxisPx\n  // value to position the caret.\n  xAlignment: string;\n  // Indicates the vertical px alignment of the caret.\n  yAxisPx: string;\n  // Indicates the horizontal px alignment of the caret.\n  xAxisPx: string;\n  // Value (in degrees) by which the caret will be rotated.\n  rotation: number;\n  // Value (in degrees) by which the caret will be skewed.\n  skew: number;\n  // The x-axis of the transform-origin property for the whole tooltip. This\n  // ensures that, during the opening animation of the tooltip, it expands from\n  // the caret.\n  xTransformOrigin: string;\n  // The y-axis of the transform-origin property for the whole tooltip. This\n  // ensures that, during the opening animation of the tooltip, it expands from\n  // the caret.\n  yTransformOrigin: string;\n  // List of border-radius properites (e.g. border-radius-top-left, etc) that\n  // indicate which corners of the caret element should have a border-radius of\n  // 0. Certain corners use a 0 border radius to ensure a clean junction between\n  // the tooltip and the caret.\n  caretCorners: Array<string>;\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTooltipFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './foundation';\nexport * from './constants';\n"],"sourceRoot":""}