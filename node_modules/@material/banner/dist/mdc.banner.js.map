{"version":3,"sources":["webpack://mdc.[name]/webpack/universalModuleDefinition","webpack://mdc.[name]/webpack/bootstrap","webpack://mdc.[name]/./packages/mdc-banner/adapter.ts","webpack://mdc.[name]/./packages/mdc-banner/component.ts","webpack://mdc.[name]/./packages/mdc-banner/constants.ts","webpack://mdc.[name]/./packages/mdc-banner/foundation.ts","webpack://mdc.[name]/./packages/mdc-banner/index.ts","webpack://mdc.[name]/./packages/mdc-base/component.ts","webpack://mdc.[name]/./packages/mdc-base/foundation.ts","webpack://mdc.[name]/./packages/mdc-dom/focus-trap.ts","webpack://mdc.[name]/./packages/mdc-dom/ponyfill.ts"],"names":[],"mappings":"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","file":"mdc.banner.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@material/banner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"banner\"] = factory();\n\telse\n\t\troot[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"banner\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/mdc-banner/index.ts\");\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {Action, CloseReason} from './constants';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCBannerAdapter {\n  /**\n   * Adds the given class to the banner root element.\n   */\n  addClass(className: string): void;\n\n  /**\n   * @return Returns the height of the banner content element.\n   */\n  getContentHeight(): number;\n\n  /**\n   * Broadcasts an event denoting that the banner has finished closing.\n   */\n  notifyClosed(reason: CloseReason): void;\n\n  /**\n   * Broadcasts an event denoting that the banner has just started closing.\n   */\n  notifyClosing(reason: CloseReason): void;\n\n  /**\n   * Broadcasts an event denoting that the banner has finished opening.\n   */\n  notifyOpened(): void;\n\n  /**\n   * Broadcasts an event denoting that the banner has just started opening.\n   */\n  notifyOpening(): void;\n\n  /**\n   * Broadcasts an event denoting that a banner button was clicked without\n   * changing the banner state.\n   */\n  notifyActionClicked(action: Action): void;\n\n  /**\n   * Releases focus from banner and restores focus to the previously focused\n   * element.\n   */\n  releaseFocus(): void;\n\n  /**\n   * Removes the given class from the banner root element.\n   */\n  removeClass(className: string): void;\n\n  /**\n   * Sets a style property of the banner root element to the passed value.\n   */\n  setStyleProperty(propertyName: string, value: string): void;\n\n  /**\n   * Traps focus in banner and focuses on the primary action button.\n   */\n  trapFocus(): void;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {SpecificEventListener} from '@material/base/types';\nimport {FocusTrap} from '@material/dom/focus-trap';\nimport {closest} from '@material/dom/ponyfill';\n\nimport {MDCBannerAdapter} from './adapter';\nimport {CloseReason, events, MDCBannerActionEventDetail, MDCBannerCloseEventDetail, MDCBannerFocusTrapFactory, selectors} from './constants';\nimport {MDCBannerFoundation} from './foundation';\n\n/** Vanilla JS implementation of banner component. */\nexport class MDCBanner extends MDCComponent<MDCBannerFoundation> {\n  static override attachTo(root: Element) {\n    return new MDCBanner(root);\n  }\n\n  override root!: HTMLElement;  // Assigned in MDCComponent constructor.\n  private handleContentClick!:\n      SpecificEventListener<'click'>;            // Assigned in #initialize.\n  private primaryActionEl!: HTMLElement;         // Assigned in #initialize.\n  private secondaryActionEl!: HTMLElement|null;  // Assigned in #initialize.\n  private textEl!: HTMLElement;                  // Assigned in #initialize.\n  private contentEl!: HTMLElement;               // Assigned in #initialize.\n  private focusTrap!: FocusTrap;  // assigned in initialSyncWithDOM()\n  private focusTrapFactory!:\n      MDCBannerFocusTrapFactory;  // assigned in initialize()\n\n  override initialize(\n      focusTrapFactory: MDCBannerFocusTrapFactory = (el, focusOptions) =>\n          new FocusTrap(el, focusOptions),\n  ) {\n    this.contentEl = this.root.querySelector(selectors.CONTENT) as HTMLElement;\n    this.textEl = this.root.querySelector(selectors.TEXT) as HTMLElement;\n    this.primaryActionEl =\n        this.root.querySelector(selectors.PRIMARY_ACTION) as HTMLElement;\n    this.secondaryActionEl =\n        this.root.querySelector(selectors.SECONDARY_ACTION) as HTMLElement;\n    this.focusTrapFactory = focusTrapFactory;\n\n    this.handleContentClick = (evt) => {\n      const target = evt.target as Element;\n      if (closest(target, selectors.PRIMARY_ACTION)) {\n        this.foundation.handlePrimaryActionClick();\n      } else if (closest(target, selectors.SECONDARY_ACTION)) {\n        this.foundation.handleSecondaryActionClick();\n      }\n    };\n  }\n\n  override initialSyncWithDOM() {\n    this.registerContentClickHandler(this.handleContentClick);\n    this.focusTrap = this.focusTrapFactory(\n        this.root, {initialFocusEl: this.primaryActionEl});\n  }\n\n  override destroy() {\n    super.destroy();\n    this.deregisterContentClickHandler(this.handleContentClick);\n  }\n\n  layout() {\n    this.foundation.layout();\n  }\n\n  /**\n   * Opens the banner and fires events.OPENING to indicate the beginning of its\n   * opening animation and then events.OPENED once the animation finishes.\n   */\n  open() {\n    this.foundation.open();\n  }\n\n  /**\n   * Closes the banner and fires events.CLOSING to indicate the beginning of its\n   * closing animation and then events.CLOSED once the animation finishes.\n   * @param reason Why the banner was closed. Value will be passed to\n   *     events.CLOSING and events.CLOSED via the `event.detail.reason`\n   *     property. Standard values are CloseReason.PRIMARY and\n   *     CloseReason.SECONDARY, but CloseReason.UNSPECIFIED is provided for\n   *     custom handling of programmatic closing of the banner.\n   */\n  close(reason: CloseReason) {\n    this.foundation.close(reason);\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCBannerAdapter = {\n      addClass: (className) => {\n        this.root.classList.add(className);\n      },\n      getContentHeight: () => {\n        return this.contentEl.offsetHeight;\n      },\n      notifyClosed: (reason) => {\n        this.emit<MDCBannerCloseEventDetail>(events.CLOSED, {reason});\n      },\n      notifyClosing: (reason) => {\n        this.emit<MDCBannerCloseEventDetail>(events.CLOSING, {reason});\n      },\n      notifyOpened: () => {\n        this.emit(events.OPENED, {});\n      },\n      notifyOpening: () => {\n        this.emit(events.OPENING, {});\n      },\n      notifyActionClicked: (action) => {\n        this.emit<MDCBannerActionEventDetail>(events.ACTION_CLICKED, {action});\n      },\n      releaseFocus: () => {\n        this.focusTrap.releaseFocus();\n      },\n      removeClass: (className) => {\n        this.root.classList.remove(className);\n      },\n      setStyleProperty: (propertyName, value) => {\n        this.root.style.setProperty(propertyName, value);\n      },\n      trapFocus: () => {\n        this.focusTrap.trapFocus();\n      },\n    };\n    return new MDCBannerFoundation(adapter);\n  }\n\n  get isOpen(): boolean {\n    return this.foundation.isOpen();\n  }\n\n  getText(): string {\n    return this.textEl.textContent || '';\n  }\n\n  setText(text: string) {\n    this.textEl.textContent = text;\n  }\n\n  getPrimaryActionText(): string {\n    return this.primaryActionEl.textContent || '';\n  }\n\n  setPrimaryActionText(actionButtonText: string) {\n    this.primaryActionEl.textContent = actionButtonText;\n  }\n\n  /** Returns null if the banner has no secondary action. */\n  getSecondaryActionText(): string|null {\n    return this.secondaryActionEl ? this.secondaryActionEl.textContent || '' :\n                                    null;\n  }\n\n  setSecondaryActionText(actionButtonText: string) {\n    if (this.secondaryActionEl) {\n      this.secondaryActionEl.textContent = actionButtonText;\n    }\n  }\n\n  private registerContentClickHandler(handler: SpecificEventListener<'click'>) {\n    this.contentEl.addEventListener('click', handler as EventListener);\n  }\n\n  private deregisterContentClickHandler(handler:\n                                            SpecificEventListener<'click'>) {\n    this.contentEl.removeEventListener('click', handler as EventListener);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {FocusOptions, FocusTrap} from '@material/dom/focus-trap';\n\n/** Banner element classes. */\nexport const cssClasses = {\n  CLOSING: 'mdc-banner--closing',\n  OPEN: 'mdc-banner--open',\n  OPENING: 'mdc-banner--opening',\n};\n\n/** Banner numbers. */\nexport const numbers = {\n  BANNER_ANIMATION_CLOSE_TIME_MS: 250,\n  BANNER_ANIMATION_OPEN_TIME_MS: 300,\n};\n\n/** Banner events. */\nexport const events = {\n  CLOSED: 'MDCBanner:closed',\n  CLOSING: 'MDCBanner:closing',\n  OPENED: 'MDCBanner:opened',\n  OPENING: 'MDCBanner:opening',\n  ACTION_CLICKED: 'MDCBanner:actionClicked',\n};\n\n/** Banner selectors. */\nexport const selectors = {\n  CONTENT: '.mdc-banner__content',\n  PRIMARY_ACTION: '.mdc-banner__primary-action',\n  SECONDARY_ACTION: '.mdc-banner__secondary-action',\n  TEXT: '.mdc-banner__text',\n};\n\n/** Reason as to why the banner was closed. */\nexport enum CloseReason {\n  // Indicates the banner was closed via primary action button.\n  PRIMARY,\n  // Indicates the banner was closed via secondary action button.\n  SECONDARY,\n  // Will never be used by the component. Provided for custom handling of\n  // programmatic closing of the banner.\n  UNSPECIFIED,\n}\n\n/**\n * Payload of actionClicked events to signify which action emitted the event.\n */\nexport const enum Action {\n  PRIMARY,\n  SECONDARY,\n  UNKNOWN\n}\n\n/** Interface for the detail of the closing and closed events emitted. */\nexport interface MDCBannerCloseEventDetail {\n  reason: CloseReason;\n}\n\n/** Interface for the detail of the closing and closed events emitted. */\nexport interface MDCBannerActionEventDetail {\n  action: Action;\n}\n\n/**  */\nexport type MDCBannerFocusTrapFactory = (\n    element: HTMLElement,\n    options: FocusOptions,\n    ) => FocusTrap;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\n\nimport {MDCBannerAdapter} from './adapter';\nimport {Action, CloseReason, cssClasses, numbers} from './constants';\n\nconst {OPENING, OPEN, CLOSING} = cssClasses;\n\n/**\n * Foundation class for banner. Responsibilities include opening and closing the\n * banner.\n */\nexport class MDCBannerFoundation extends MDCFoundation<MDCBannerAdapter> {\n  static override get defaultAdapter(): MDCBannerAdapter {\n    return {\n      addClass: () => undefined,\n      getContentHeight: () => 0,\n      notifyClosed: () => undefined,\n      notifyClosing: () => undefined,\n      notifyOpened: () => undefined,\n      notifyOpening: () => undefined,\n      notifyActionClicked: () => undefined,\n      releaseFocus: () => undefined,\n      removeClass: () => undefined,\n      setStyleProperty: () => undefined,\n      trapFocus: () => undefined,\n    };\n  }\n\n  private isOpened = false;\n  // Request id for open animation, used to cancel the refresh callback\n  // request on close() and destroy().\n  private animationFrame = 0;\n  // Timer id for close and open animation, used to cancel the timer on\n  // close() and destroy().\n  private animationTimer = 0;\n\n  constructor(adapter?: Partial<MDCBannerAdapter>) {\n    super({...MDCBannerFoundation.defaultAdapter, ...adapter});\n  }\n\n  override destroy() {\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = 0;\n    clearTimeout(this.animationTimer);\n    this.animationTimer = 0;\n  }\n\n  open() {\n    this.isOpened = true;\n    this.adapter.notifyOpening();\n    this.adapter.removeClass(CLOSING);\n    this.adapter.addClass(OPENING);\n\n    const contentHeight = this.adapter.getContentHeight();\n    this.animationFrame = requestAnimationFrame(() => {\n      this.adapter.addClass(OPEN);\n      this.adapter.setStyleProperty('height', `${contentHeight}px`);\n\n      this.animationTimer = setTimeout(() => {\n        this.handleAnimationTimerEnd();\n        this.adapter.trapFocus();\n        this.adapter.notifyOpened();\n      }, numbers.BANNER_ANIMATION_OPEN_TIME_MS);\n    });\n  }\n\n  /**\n   * @param reason Why the banner was closed. Value will be passed to\n   *     events.CLOSING and events.CLOSED via the `event.detail.reason`\n   *     property. Standard values are CloseReason.PRIMARY and\n   *     CloseReason.SECONDARY, but CloseReason.UNSPECIFIED is provided for\n   *     custom handling of programmatic closing of the banner.\n   */\n  close(reason: CloseReason) {\n    if (!this.isOpened) {\n      // Avoid redundant close calls (and events), e.g. repeated interactions as\n      // the banner is animating closed\n      return;\n    }\n\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = 0;\n\n    this.isOpened = false;\n    this.adapter.notifyClosing(reason);\n    this.adapter.addClass(CLOSING);\n    this.adapter.setStyleProperty('height', '0');\n    this.adapter.removeClass(OPEN);\n    this.adapter.removeClass(OPENING);\n\n    clearTimeout(this.animationTimer);\n    this.animationTimer = setTimeout(() => {\n      this.adapter.releaseFocus();\n      this.handleAnimationTimerEnd();\n      this.adapter.notifyClosed(reason);\n    }, numbers.BANNER_ANIMATION_CLOSE_TIME_MS);\n  }\n\n  isOpen(): boolean {\n    return this.isOpened;\n  }\n\n  handlePrimaryActionClick(disableAutoClose: boolean = false) {\n    if (disableAutoClose) {\n      this.adapter.notifyActionClicked(Action.PRIMARY);\n    } else {\n      this.close(CloseReason.PRIMARY);\n    }\n  }\n\n  handleSecondaryActionClick(disableAutoClose: boolean = false) {\n    if (disableAutoClose) {\n      this.adapter.notifyActionClicked(Action.SECONDARY);\n\n    } else {\n      this.close(CloseReason.SECONDARY);\n    }\n  }\n\n  layout() {\n    const contentHeight = this.adapter.getContentHeight();\n    this.adapter.setStyleProperty('height', `${contentHeight}px`);\n  }\n\n  private handleAnimationTimerEnd() {\n    this.animationTimer = 0;\n    this.adapter.removeClass(OPENING);\n    this.adapter.removeClass(CLOSING);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './constants';\nexport * from './foundation';\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from './foundation';\nimport {CustomEventListener, EventType, SpecificEventListener} from './types';\n\nexport class MDCComponent<FoundationType extends MDCFoundation> {\n  static attachTo(root: Element): MDCComponent<MDCFoundation<{}>> {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation({}));\n  }\n\n  protected foundation: FoundationType;\n\n  constructor(\n      public root: Element, foundation?: FoundationType, ...args: unknown[]) {\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's\n    // default param so that this.root is defined and can be used within the\n    // foundation class.\n    this.foundation =\n        foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation.init();\n    this.initialSyncWithDOM();\n  }\n\n  /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n  initialize(..._args: Array<unknown>) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  getDefaultFoundation(): FoundationType {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n        'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   */\n  listen<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  listen<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  listen(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.addEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   */\n  unlisten<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  unlisten<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  unlisten(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.removeEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n   */\n  emit<T extends object>(evtType: string, evtData: T, shouldBubble = false) {\n    let evt: CustomEvent<T>;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent<T>(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root.dispatchEvent(evt);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport class MDCFoundation<AdapterType extends {} = {}> {\n  static get cssClasses(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  static get strings(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  static get numbers(): { [key: string]: number } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  static get defaultAdapter(): {} {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  constructor(protected adapter: AdapterType = {} as AdapterType) {}\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\n/**\n * The constructor for MDCFoundation.\n */\nexport interface MDCFoundationConstructor<AdapterType extends object = any> {\n  new(adapter: AdapterType): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * The deprecated constructor for MDCFoundation.\n */\nexport interface MDCFoundationDeprecatedConstructor<AdapterType extends object = any> {\n  readonly cssClasses: Record<string, string>;\n  readonly strings: Record<string, string>;\n  readonly numbers: Record<string, number>;\n  readonly defaultAdapter: AdapterType;\n\n  new(adapter?: Partial<AdapterType>): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * Retrieves the AdapaterType from the provided MDCFoundation generic type.\n */\nexport type MDCFoundationAdapter<T> =\n    T extends MDCFoundation<infer A>? A : never;\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst FOCUS_SENTINEL_CLASS = 'mdc-dom-focus-sentinel';\n\n/**\n * Utility to trap focus in a given root element, e.g. for modal components such\n * as dialogs. The root should have at least one focusable child element,\n * for setting initial focus when trapping focus.\n * Also tracks the previously focused element, and restores focus to that\n * element when releasing focus.\n */\nexport class FocusTrap {\n  // Previously focused element before trapping focus.\n  private elFocusedBeforeTrapFocus: HTMLElement|null = null;\n\n  constructor(\n      private readonly root: HTMLElement,\n      private readonly options: FocusOptions = {}) {}\n\n  /**\n   * Traps focus in `root`. Also focuses on either `initialFocusEl` if set;\n   * otherwises sets initial focus to the first focusable child element.\n   */\n  trapFocus() {\n    const focusableEls = this.getFocusableElements(this.root);\n    if (focusableEls.length === 0) {\n      throw new Error(\n          'FocusTrap: Element must have at least one focusable child.');\n    }\n\n    this.elFocusedBeforeTrapFocus =\n        document.activeElement instanceof HTMLElement ? document.activeElement :\n                                                        null;\n    this.wrapTabFocus(this.root);\n\n    if (!this.options.skipInitialFocus) {\n      this.focusInitialElement(focusableEls, this.options.initialFocusEl);\n    }\n  }\n\n  /**\n   * Releases focus from `root`. Also restores focus to the previously focused\n   * element.\n   */\n  releaseFocus() {\n    [].slice.call(this.root.querySelectorAll(`.${FOCUS_SENTINEL_CLASS}`))\n        .forEach((sentinelEl: HTMLElement) => {\n          sentinelEl.parentElement!.removeChild(sentinelEl);\n        });\n\n    if (!this.options.skipRestoreFocus && this.elFocusedBeforeTrapFocus) {\n      this.elFocusedBeforeTrapFocus.focus();\n    }\n  }\n\n  /**\n   * Wraps tab focus within `el` by adding two hidden sentinel divs which are\n   * used to mark the beginning and the end of the tabbable region. When\n   * focused, these sentinel elements redirect focus to the first/last\n   * children elements of the tabbable region, ensuring that focus is trapped\n   * within that region.\n   */\n  private wrapTabFocus(el: HTMLElement) {\n    const sentinelStart = this.createSentinel();\n    const sentinelEnd = this.createSentinel();\n\n    sentinelStart.addEventListener('focus', () => {\n      const focusableEls = this.getFocusableElements(el);\n      if (focusableEls.length > 0) {\n        focusableEls[focusableEls.length - 1].focus();\n      }\n    });\n    sentinelEnd.addEventListener('focus', () => {\n      const focusableEls = this.getFocusableElements(el);\n      if (focusableEls.length > 0) {\n        focusableEls[0].focus();\n      }\n    });\n\n    el.insertBefore(sentinelStart, el.children[0]);\n    el.appendChild(sentinelEnd);\n  }\n\n  /**\n   * Focuses on `initialFocusEl` if defined and a child of the root element.\n   * Otherwise, focuses on the first focusable child element of the root.\n   */\n  private focusInitialElement(\n      focusableEls: HTMLElement[], initialFocusEl?: HTMLElement) {\n    let focusIndex = 0;\n    if (initialFocusEl) {\n      focusIndex = Math.max(focusableEls.indexOf(initialFocusEl), 0);\n    }\n    focusableEls[focusIndex].focus();\n  }\n\n  private getFocusableElements(root: HTMLElement): HTMLElement[] {\n    const focusableEls =\n        [].slice.call(root.querySelectorAll(\n            '[autofocus], [tabindex], a, input, textarea, select, button')) as\n        HTMLElement[];\n    return focusableEls.filter((el) => {\n      const isDisabledOrHidden = el.getAttribute('aria-disabled') === 'true' ||\n          el.getAttribute('disabled') != null ||\n          el.getAttribute('hidden') != null ||\n          el.getAttribute('aria-hidden') === 'true';\n      const isTabbableAndVisible = el.tabIndex >= 0 &&\n          el.getBoundingClientRect().width > 0 &&\n          !el.classList.contains(FOCUS_SENTINEL_CLASS) && !isDisabledOrHidden;\n\n      let isProgrammaticallyHidden = false;\n      if (isTabbableAndVisible) {\n        const style = getComputedStyle(el);\n        isProgrammaticallyHidden =\n            style.display === 'none' || style.visibility === 'hidden';\n      }\n      return isTabbableAndVisible && !isProgrammaticallyHidden;\n    });\n  }\n\n  private createSentinel() {\n    const sentinel = document.createElement('div');\n    sentinel.setAttribute('tabindex', '0');\n    // Don't announce in screen readers.\n    sentinel.setAttribute('aria-hidden', 'true');\n    sentinel.classList.add(FOCUS_SENTINEL_CLASS);\n    return sentinel;\n  }\n}\n\n/** Customization options. */\nexport interface FocusOptions {\n  // The element to focus initially when trapping focus.\n  //  Must be a child of the root element.\n  initialFocusEl?: HTMLElement;\n\n  // Whether to skip initially focusing on any element when trapping focus.\n  // By default, focus is set on the first focusable child element of the root.\n  // This is useful if the caller wants to handle setting initial focus.\n  skipInitialFocus?: boolean;\n\n  // Whether to restore focus on the previously focused element when releasing\n  // focus. This is useful if the caller wants to handle restoring focus.\n  skipRestoreFocus?: boolean;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\nexport function closest(element: Element, selector: string): Element | null {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el: Element | null = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\nexport function matches(element: Element, selector: string): boolean {\n  const nativeMatches = element.matches\n      || element.webkitMatchesSelector\n      || (element as any).msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\n/**\n * Used to compute the estimated scroll width of elements. When an element is\n * hidden due to display: none; being applied to a parent element, the width is\n * returned as 0. However, the element will have a true width once no longer\n * inside a display: none context. This method computes an estimated width when\n * the element is hidden or returns the true width when the element is visble.\n * @param {Element} element the element whose width to estimate\n */\nexport function estimateScrollWidth(element: Element): number {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element as HTMLElement;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n\n  const clone = htmlEl.cloneNode(true) as HTMLElement;\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  document.documentElement.removeChild(clone);\n  return scrollWidth;\n}\n"],"sourceRoot":""}