{"version":3,"sources":["webpack://mdc.[name]/webpack/universalModuleDefinition","webpack://mdc.[name]/webpack/bootstrap","webpack://mdc.[name]/./packages/mdc-animation/util.ts","webpack://mdc.[name]/./packages/mdc-base/component.ts","webpack://mdc.[name]/./packages/mdc-base/foundation.ts","webpack://mdc.[name]/./packages/mdc-checkbox/component.ts","webpack://mdc.[name]/./packages/mdc-checkbox/constants.ts","webpack://mdc.[name]/./packages/mdc-checkbox/foundation.ts","webpack://mdc.[name]/./packages/mdc-data-table/adapter.ts","webpack://mdc.[name]/./packages/mdc-data-table/component.ts","webpack://mdc.[name]/./packages/mdc-data-table/constants.ts","webpack://mdc.[name]/./packages/mdc-data-table/foundation.ts","webpack://mdc.[name]/./packages/mdc-data-table/index.ts","webpack://mdc.[name]/./packages/mdc-data-table/types.ts","webpack://mdc.[name]/./packages/mdc-dom/events.ts","webpack://mdc.[name]/./packages/mdc-dom/ponyfill.ts","webpack://mdc.[name]/./packages/mdc-linear-progress/component.ts","webpack://mdc.[name]/./packages/mdc-linear-progress/constants.ts","webpack://mdc.[name]/./packages/mdc-linear-progress/foundation.ts","webpack://mdc.[name]/./packages/mdc-ripple/component.ts","webpack://mdc.[name]/./packages/mdc-ripple/constants.ts","webpack://mdc.[name]/./packages/mdc-ripple/foundation.ts","webpack://mdc.[name]/./packages/mdc-ripple/util.ts"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;AC7DG;;;;;;;;;;;;;;;;;;;;;;;;;AAQH,IAAwB;AACb;AACC,kBAAqB;AACrB,kBACT;AAHU;AAIF;AACC,kBAAqB;AACrB,kBACT;AAHU;AAID;AACA,kBAAsB;AACtB,kBAEV;AAJY;AATmC;AAejD,IAAoB;AACN;AACC,qBAAa;AAChB,kBAAsB;AACtB,kBACT;AAJa;AAKI;AACL,qBAAa;AAChB,kBAA4B;AAC5B,kBACT;AAJmB;AAKN;AACD,qBAAa;AAChB,kBAAwB;AACxB,kBACT;AAJe;AAKH;AACA,qBAAc;AACjB,kBAAuB;AACvB,kBAEV;AALe;AAhB2B;AAuB5C,SAAiB,SAAkB;AACjC,WAAc,QAAU,UAAU,aAAI,OAAgB,UAAS,SAAc,kBAC/E;AAAC;AAED,SAAsC,uBAAkB,WAAsC;AAE5F,QAAY,SAAW,cAAe,eAAsB,oBAAE;AAC5D,YAAQ,KAAY,UAAS,SAAc,cAAQ;AAC7C,iBAAyC,mBAAa;YAA7C;YAAU,cAAoC;AAC7D,YAAgB,aAAW,YAAM,GAAO;AACxC,eAAmB,aAAW,WAAU;AACzC;AACD,WACF;AAAC;AATD,iCASC;AAED,SAAmC,oBAAkB,WAAgC;AAEnF,QAAY,SAAW,cAAa,aAAkB,gBAAE;AACtD,YAAQ,KAAY,UAAS,SAAc,cAAQ;AAC7C,iBAAkD,eAAW;YAApD;YAAU;YAAa,iBAA8B;AACpE,YAAgB,aAAc,eAAM,GAAO;AAC3C,eAAmB,aAAW,WAAU;AACzC;AACD,WACF;AAAC;AATD,8BASC,oB;;;;;;;;;;;;;ACtEE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,uCAA2C;AAG3C;AAWE,0BACwB,MAA6B;AAAE,mBAAkB;aAAlB,SAAkB,GAAlB,eAAkB;AAAlB,qCAAkB;;AAA9D,aAAI,OAAS;AAClB,aAAW,iBAAX,+BAAqB;AACkD;AACH;AACpD;AAChB,aAAW,aACD,eAAgB,YAAK,KAAyB,yBAAY;AACpE,aAAW,WAAQ;AACnB,aACN;AAAC;AApBM,iBAAQ,WAAf,UAA6B;AACyE;AACE;AACE;AACzE;AAC/B,eAAO,IAAgB,aAAK,MAAE,IAAI,aAAa,cACjD;AAAC;AAgB2G;AAC5G,2BAAU,aAAV;AAAW,oBAAwB;aAAxB,SAAwB,GAAxB,eAAwB;AAAxB,kCAAwB;;AACiE;AACF;AAElG;AAAC;AAED,2BAAoB,uBAApB;AACkG;AACnF;AACb,cAAM,IAAS,MAAiF,mFAElG;AAAC;AAED,2BAAkB,qBAAlB;AACuG;AACK;AACL;AAEvG;AAAC;AAED,2BAAO,UAAP;AACuG;AACR;AACzF,aAAW,WACjB;AAAC;AAUD,2BAAM,SAAN,UAAsB,SAAwB,SAA6C;AACrF,aAAK,KAAiB,iBAAQ,SAAS,SAC7C;AAAC;AAUD,2BAAQ,WAAR,UAAwB,SAAwB,SAA6C;AACvF,aAAK,KAAoB,oBAAQ,SAAS,SAChD;AAAC;AAIE;;;AACH,2BAAI,OAAJ,UAAsC,SAAY,SAAsB;AAApB;AAAA,2BAAoB;;AACtE,YAAwB;AACxB,YAAI,OAAkB,gBAAe,YAAE;AAClC,sBAAkB,YAAW;AACvB,yBAAc;AACf,wBACL;AAH+B,aAA5B;AAIP,eAAM;AACF,kBAAW,SAAY,YAAgB;AACvC,gBAAgB,gBAAQ,SAAc,cAAO,OAAW;AAC5D;AAEG,aAAK,KAAc,cACzB;AAAC;AACH,WAAC;AAAA;AA3FY,uBAAY;AA6FwF;AACjH,kBAA4B,a;;;;;;;;;;;;;ACnGzB;;;;;;;;;;;;;;;;;;;;;;;;;AAEH;AA0BE,2BAA8D;AAAxC;AAAA,sBAAwC;;AAAxC,aAAO,UAAoC;AAAC;AAzBlE,0BAAW,eAAU;aAArB;AACyG;AACV;AAC7F,mBACF;AAAC;;sBAAA;;AAED,0BAAW,eAAO;aAAlB;AACuG;AACxC;AAC7D,mBACF;AAAC;;sBAAA;;AAED,0BAAW,eAAO;aAAlB;AACuG;AAC9B;AACvE,mBACF;AAAC;;sBAAA;;AAED,0BAAW,eAAc;aAAzB;AACyG;AACE;AAC3F;AACd,mBACF;AAAC;;sBAAA;;AAID,4BAAI,OAAJ;AAEA;AAAC;AAED,4BAAO,UAAP;AAEA;AAAC;AACH,WAAC;AAAA;AAnCY,wBAAa;AAgEuF;AACjH,kBAA6B,c;;;;;;;;;;;;;ACnE1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,iCAA6D;AAC7D,sCAAsD;AACtD,mCAAkD;AAClD,qCAA+C;AAE/C,sCAAqD;AACrD,uCAAgE;AAIhE,sCAAoC;AACpC,uCAAmD;AAOnD,IAAoB,iBAAG,CAAU,WAAmB;AAIpD;AAAiC,2BAAmC;AAApE;AAAA,wEA2KC;AAlIkB,cAAa,gBAAkB,MAAgB;eAkIlE;AAAC;AA1KiB,gBAAQ,WAAxB,UAAsC;AACpC,eAAO,IAAe,YACxB;AAAC;AAED,0BAAI,uBAAM;aAAV;AACE,mBAAW,KACb;AAAC;;sBAAA;;AAED,0BAAI,uBAAO;aAAX;AACE,mBAAW,KAAmB,mBAChC;AAAC;aAED,aAA4B;AACtB,iBAAmB,mBAAQ,UACjC;AAAC;;sBAJA;;AAMD,0BAAI,uBAAa;aAAjB;AACE,mBAAW,KAAmB,mBAChC;AAAC;aAED,aAAwC;AAClC,iBAAmB,mBAAc,gBACvC;AAAC;;sBAJA;;AAMD,0BAAI,uBAAQ;aAAZ;AACE,mBAAW,KAAmB,mBAChC;AAAC;aAED,aAA8B;AACxB,iBAAW,WAAY,YAC7B;AAAC;;sBAJA;;AAMD,0BAAI,uBAAK;aAAT;AACE,mBAAW,KAAmB,mBAChC;AAAC;aAED,aAAuB;AACjB,iBAAmB,mBAAM,QAC/B;AAAC;;sBAJA;;AAWQ,0BAAU,aAAnB;AACS,YAAuB,0BAAI,YAAO,QAAC;AACtC,aAAmB,mBAAc,gBAC7B,KAAmB,mBAAa,aAAyB,6BACtD;AACP,aAAmB,mBAAgB,gBACzC;AAAC;AAEQ,0BAAkB,qBAA3B;AAAA,oBAWC;AAVK,aAAa,eAAG;AACd,kBAAW,WACjB;AAAE;AACE,aAAmB,qBAAG;AACpB,kBAAW,WACjB;AAAE;AACE,aAAmB,mBAAiB,iBAAS,UAAM,KAAe;AAClE,aAAO,OACP,OAAmB,oBAAO,QAAiB,iBAAM,KAAqB;AACtE,aACN;AAAC;AAEQ,0BAAO,UAAhB;AACM,aAAc,cAAW;AACzB,aAAmB,mBAAoB,oBAAS,UAAM,KAAe;AACrE,aAAS,SACT,OAAmB,oBAAO,QAAiB,iBAAM,KAAqB;AACtE,aAAgC;AACpC,yBAAa,aACf;AAAC;AAEQ,0BAAoB,uBAA7B;AAAA,oBAwBC;AAvBuG;AACG;AACzG,YAAa;AACH,sBAAE,kBAAU;AAAK,uBAAI,MAAK,KAAU,UAAI,IAAW;AAAA;AAChD,yBAAE;AAAM,uBAAK,MAAqB,KAAY;AAAA;AACzC,8BAAE;AAAM,wBAAC,CAAK,MAAmB;AAAA;AAClC,6BAAE;AAAM,uBAAO,QAAK,MAAK,KAAY;AAAA;AAC3C,uBAAE;AAAM,uBAAI,MAAQ;AAAA;AACd,6BAAE;AAAM,uBAAI,MAAc;AAAA;AAC9B,yBAAE,qBAAU;AACjB,sBAAK,KAAU,UAAO,OAC5B;AAAC;AACsB,qCAAE,iCAAK;AACxB,sBAAmB,mBAAgB,gBACzC;AAAC;AACmB,kCAAE,8BAAK,MAAO;AAC5B,sBAAmB,mBAAa,aAAK,MAC3C;AAAC;AACuB,sCAAE,kCAAS;AAC7B,sBAAmB,mBAAS,WAClC;AACA;AAnBkC;AAoBpC,eAAO,IAAI,aAAqB,sBAClC;AAAC;AAEO,0BAAY,eAApB;AAAA,oBAiBC;AAhBuG;AACG;AACzG,YAAa,gCACR,YAAS,UAAc,cAAM,UACJ,8BAAE,sCAAQ,SAAS;AACzC,sBAAmB,mBAAoB,oBAChC,SAAS,SAAE,SACxB;AAAC,eACc,iBAAE;AAAM,kCAAO,QAAK,MAAmB,oBAAY;AAAA,eACvD,aAAE;AAAM,uBAAI;AAAA,eACG,4BAAE,oCAAQ,SAAS;AACvC,sBAAmB,mBAAiB,iBAC7B,SAAS,SAAE,SACxB;AACA;AACF,eAAO,IAAI,YAAS,UAAK,KAAK,MAAE,IAAI,aAAmB,oBACzD;AAAC;AAEO,0BAA0B,6BAAlC;;AAAA,oBA0BC;AAzBC,YAAc,WAAO,KAAoB;AACzC,YAAa,UAAS,OAAe,eAAW;uCAEzB;AACrB,gBAAU,OAAS,OAAyB,yBAAQ,SAAgB;AAC2B;AAC1C;AACrD,gBAAI,CAAgB,gBAAM,OAAE;;AAE3B;AAE8D;AAC/D,gBAAkB,eAA4C,KAAK;AAEnE,gBAAkB;AACJ,8BAAM,KAAa;AACrB,4BAAM,KAAW;AACxB,qBAAc;AACd,qBAAE,aAAe;AACd,yBAAK,IAAK,KAAS,UAAS;AAC5B,0BAAW,WACjB;AACA;AARmB;AASf,mBAAe,eAAS,UAAc,cAAgB;;;AApB9D,iBAA2B,gCAAc;AAApC,oBAAkB;sCAAA;;AAqBtB;;;;;;;;;AACH;AAAC;AAEO,0BAA4B,+BAApC;;AACE,YAAc,WAAO,KAAoB;AACzC,YAAa,UAAS,OAAe,eAAW;;AAEhD,iBAA2B,gCAAc,uIAAE;AAAtC,oBAAkB;AACrB,oBAAU,OAAS,OAAyB,yBAAQ,SAAgB;AACpE,oBAAI,CAAgB,gBAAM,OAAE;AACnB;AACR;AACK,uBAAe,eAAS,UAAc,cAAQ;AACrD;;;;;;;;;AACH;AAAC;AAEO,0BAAgB,mBAAxB;AACS,YAAuB,0BAAI,YAAO,QAAC;AAC1C,YAAQ,KACA,KAAK,KAAc,cAA4C;AACvE,YAAI,CAAG,IAAE;AACP,kBAAM,IAAS,MAAC,mCAAwD,0BAAY;AACrF;AACD,eACF;AAAC;AACH,WAAC;AAAA,EA3KgC,YA2KhC;AA3KY,sBAAW;AA6KxB,SAAwB,gBAA8C;AACpE,WAAO,CAAC,CAAc,iBAAI,OAAoB,cAAI,QACpD;AAAC,C;;;;;;;;;;;;;ACvME;;;;;;;;;;;;;;;;;;;;;;;;;AAEU,QAAU;AACK,gCAA4C;AAChD,4BAAwC;AACpC,gCAA4C;AAC1C,kCAA8C;AACpD,4BAAwC;AAClC,kCAA8C;AAChE,gBAA4B;AAC/B,aAAyB;AACvB,eAA2B;AACtB,oBAAgC;AACtC,cAA0B;AACrB,mBAA+B;AACnC,eAA2B;AACtB,oBAAgC;AAC1C,UAAgB;AACZ,cAA0B;AAC1B,cACR;AAlBwB;AAoBb,QAAO;AACD,uBAAgB;AACD,sCAAS;AAClB,6BAAsB;AACtB,6BAAiC;AAChC,8BAAW;AACL,oCAAiB;AAC1B,2BAAQ;AACH,gCAC1B;AATqB;AAWV,QAAO;AACD,uBACjB;AAFqB,E;;;;;;;;;;;;;ACjCpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,uCAAwD;AAExD,sCAAyD;AAEzD;AAA2C,qCAAiC;AAiC1E,mCAAiD;AAAjD,oBACE,wCAA+B,sBAAe,iBAAc,aAC7D;AAPO,cAAiB,oBAAG,YAAO,QAAuB;AAClD,cAAqB,wBAAM;AAC3B,cAAiB,oBAAK;AACtB,cAAyB,4BAAS;eAI1C;AAAC;AAlCD,0BAAoB,uBAAU;aAA9B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,uBAAO;aAA3B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,uBAAO;aAA3B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,uBAAc;aAAlC;AACE;AACU,0BAAE;AAAM,2BAAS;AAAA;AACd,6BAAE;AAAM,2BAAS;AAAA;AACZ,kCAAE;AAAM,2BAAK;AAAA;AACd,iCAAE;AAAM,2BAAK;AAAA;AACnB,2BAAE;AAAM,2BAAK;AAAA;AACP,iCAAE;AAAM,2BAAK;AAAA;AACjB,6BAAE;AAAM,2BAAS;AAAA;AACL,yCAAE;AAAM,2BAAS;AAAA;AACpB,sCAAE;AAAM,2BAAS;AAAA;AACb,0CAAE;AAAM,2BAAS;AAE7C;AAZS;AAYR;;sBAAA;;AAWQ,oCAAI,OAAb;AACM,aAAkB,oBAAO,KAAuB;AAChD,aAAqB;AACrB,aAAQ,QAAS,SAAC,YAAU,WAClC;AAAC;AAEQ,oCAAO,UAAhB;AACc,qBAAK,KACnB;AAAC;AAED,oCAAW,cAAX,UAA6B;AACvB,aAAQ,QAAyB,yBAAW;AAChD,YAAY,UAAE;AACR,iBAAQ,QAAS,SAAC,YAAU,WAAW;AAC5C,eAAM;AACD,iBAAQ,QAAY,YAAC,YAAU,WAAW;AAElD;AAAC;AAIE;;;AACH,oCAAkB,qBAAlB;AAAA,oBAWC;AAVC,YAAI,CAAK,KAA0B,2BAAE;AAC5B;AACR;AAEW,qBAAK,KAAoB;AAEjC,aAAkB,+BAAc;AAC9B,kBAAQ,QAAY,YAAK,MAAwB;AACjD,kBAA0B,4BAChC;AAAC,SAHkC,EAGhC,YAAO,QACZ;AAAC;AAIE;;;AACH,oCAAY,eAAZ;AACM,aACN;AAAC;AAEO,oCAAoB,uBAA5B;AACE,YAAI,CAAK,KAAQ,QAAmB,oBAAE;AAC7B;AACR;AACD,YAAc,WAAO,KAAmB;AACxC,YAAc,WAAO,KAAuB;AAE5C,YAAY,aAAa,UAAE;AAClB;AACR;AAEG,aAAqB;AAElB,YAA0B,6BAAI,YAAO,QAAC;AACtC,YAAQ,WAAI,YAAU,WAAC;AAC9B,YAAY,aAA+B,4BAAE;AACvC,iBAAQ,QAAY,YAAW;AACpC,eAAM;AACD,iBAAQ,QAAS,SAAW;AACjC;AAE6F;AACnB;AAC3E,YAAQ,KAAsB,sBAAO,SAAI,GAAE;AAC7B,yBAAK,KAAoB;AACjC,iBAAQ,QAAe;AACvB,iBAAQ,QAAY,YAAK,KAAwB;AACtD;AAEG,aAAsB,wBAClB,KAA4B,4BAAS,UAAY;AACrD,aAAkB,oBAAY;AAEkD;AACtE;AACd,YAAQ,KAAQ,QAAkB,qBAC1B,KAAsB,sBAAO,SAAI,GAAE;AACrC,iBAAQ,QAAS,SAAK,KAAwB;AAC9C,iBAA0B,4BAAQ;AAE1C;AAAC;AAEO,oCAAmB,sBAA3B;AAEI,YAA8B,iCAG5B,YAAO,QAHqB;YACN,2BAEtB,YAAO,QAFe;YACE,6BACxB,YAAO,QAAC;AAEZ,YAAQ,KAAQ,QAAkB,mBAAE;AAClC,mBAAsC;AACvC;AACD,eAAW,KAAQ,QAAc,cAA2B,2BAE9D;AAAC;AAEO,oCAA2B,8BAAnC,UAAoD,UAAkB;AAGlE,YAAqB,wBAGnB,YAAO,QAHY;YACG,2BAEtB,YAAO,QAFe;YACE,6BACxB,YAAO,QAAC;AAEN,iBAOmB,sBAAW;YANZ;YACM;YACN;YACI;YACA;YACE,kCACO;AAErC,gBAAkB;AAChB,iBAA0B;AACxB,oBAAY,aAA+B,4BAAE;AAC3C,2BAAU;AACX;AACD,uBAAe,aAA+B,2BAA6B,6BAA8B;AAC3G,iBAA+B;AAC7B,uBAAe,aAA+B,2BAAyB,yBAA8B;AACvG,iBAA6B;AAC3B,uBAAe,aAAiC,6BAAyB,yBAA4B;AACvG;AAA0C;AACxC,uBAAe,aAA+B,2BAA6B,6BAEjF;;AAAC;AAEO,oCAAiB,oBAAzB;AAC+E;AAC7E,YAAQ,KAAQ,QAAkB,mBAAE;AAC9B,iBAAQ,QAAqB,qBAC7B,YAAO,QAAkB,mBAAE,YAAO,QAAmC;AAC1E,eAAM;AACiE;AACA;AAClE,iBAAQ,QAAwB,wBAAC,YAAO,QAAoB;AAEpE;AAAC;AACH,WAAC;AAAA,EAlL0C,aAkL1C;AAlLY,gCAAqB;AAoL+E;AACjH,kBAAqC,sB;;;;;;;;;;;;;AC3LlC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,sCAAsD;AAEtD,sCAA6E;AAC7E,qCAA+C;AAC/C,sCAAsE;AAGtE,sCAA+F;AAC/F,uCAAoD;AAKjD;;;AACH;AAAkC,4BAAoC;AAAtE;mEAiWA;AAAC;AAhWiB,iBAAQ,WAAxB,UAAsC;AACpC,eAAO,IAAgB,aACzB;AAAC;AAeQ,2BAAU,aAAnB,UAEiE;AAD7D;AAAA,uDACqC;AAAK,2BAAI,YAAW,YAAI;AAAA;;AAC3D,aAAgB,kBACtB;AAAC;AAEQ,2BAAkB,qBAA3B;AAAA,oBAkCC;AAjCK,aAAU,YACN,KAAK,KAAc,cAAC,MAAI,YAAU,WAA8B;AACpE,aAA8B,gCAAG;AAC/B,kBAAW,WACjB;AAAE;AACE,aAAU,UAAiB,iBACnB,UAAM,KAAgC;AAE9C,aAAuB,yBAAG,UAAM;AAC9B,kBAAqB,qBAC3B;AAAE;AACE,aAAU,UAAiB,iBAAQ,SAAM,KAAyB;AAGlE,aAAQ,UACJ,KAAK,KAAc,cAAC,MAAI,YAAU,WAA2B;AACjE,aAAmB,qBAAG,UAAM;AAC9B,gBAAe,YACX,WAAO,QAAM,MAAkB,QAAE,YAAS,UAAqB;AACnE,gBAAI,CAAU,WAAS;AAEnB,kBAAW,WAAe;AACvB,uBAAM,MAAqB,qBAAW;AACxC,qBAEP;AAJiC;AAI/B;AACE,aAAQ,QAAiB,iBAAQ,SAAM,KAAqB;AAC5D,aAAwB,0BAAG,UAAM;AAC/B,kBAAW,WAAwB,wBACzC;AAAE;AACE,aAAQ,QAAiB,iBAAS,UAAM,KAA0B;AAElE,aACN;AAAC;AAKE;;;;AACH,2BAAM,SAAN;AACM,aAAW,WACjB;AAAC;AAIE;;;AACH,2BAAc,iBAAd;AACE,eAAS,GAAM,MAAK,KAAK,KAAK,KAAiB,iBAAC,YAAS,UAC3D;AAAC;AAIE;;;AACH,2BAAO,UAAP;AACE,eAAW,KAAW,WACxB;AAAC;AAIE;;;AACH,2BAAiB,oBAAjB;AACE,eAAW,KAAW,WACxB;AAAC;AAKE;;;;AACH,2BAAiB,oBAAjB,UAAkC;AAC5B,aAAW,WAAkB,kBACnC;AAAC;AAIE;;;AACH,2BAAY,eAAZ;AACM,aAAoB,oBAAQ;AAC5B,aAAW,WACjB;AAAC;AAIE;;;AACH,2BAAY,eAAZ;AACM,aAAW,WAAgB;AAC3B,aAAoB,oBAC1B;AAAC;AAEQ,2BAAO,UAAhB;;AACE,YAAQ,KAA8B,+BAAE;AAClC,iBAAU,UAAoB,oBACtB,UAAM,KAAgC;AACnD;AACD,YAAQ,KAAuB,wBAAE;AAC3B,iBAAU,UAAoB,oBAAQ,SAAM,KAAyB;AAC1E;AACD,YAAQ,KAAwB,yBAAE;AAC5B,iBAAQ,QAAoB,oBAAS,UAAM,KAA0B;AAC1E;AAED,YAAQ,KAAkB,mBAAE;AACtB,iBAAkB,kBAAW;AAClC;AACD,YAAQ,KAAgB,iBAAE;;AACxB,qBAAuB,kBAAI,KAAgB,4DAAE;AAAxC,wBAAc;AACT,6BAAW;AACpB;;;;;;;;;;AACF;AACD,YAAQ,KAAmB,oBAAE;AACvB,iBAAQ,QAAoB,oBAAQ,SAAM,KAAqB;AAEvE;AAAC;AAEQ,2BAAoB,uBAA7B;AAAA,oBA0JC;AAzJ6E;AACP;AACL;AACwC;AACxG,YAAa;AACH,sBAAE,kBAAU;AACd,sBAAK,KAAU,UAAI,IACzB;AAAC;AACU,yBAAE,qBAAU;AACjB,sBAAK,KAAU,UAAO,OAC5B;AAAC;AACoB,mCAAE;AAAM,uBAAI,MAAiB;AAAA;AAChC,gCAAE;AAAM,uBAAI,MAAiB,iBAAO;AAAA;AACzB,2CAAE,uCAAM,OAAW;AAC9C,uBAAW,MAAiB,iBAAO,OAAa,aAClD;AAAC;AAC4B,2CAAE,uCAAM,OAAW,WAAO;AACjD,sBAAiB,iBAAO,OAAa,aAAU,WACrD;AAAC;AAC4B,2CAAE,uCAAM,OAAW;AAC1C,sBAAiB,iBAAO,OAAU,UAAI,IAC5C;AAAC;AAC+B,8CAAE,0CAAM,OAAW;AAC7C,sBAAiB,iBAAO,OAAU,UAAO,OAC/C;AAAC;AACe,8BAAE,0BAAK;AACjB,sBAAK,KAAC,YAAM,OAAO,QAAM,MAAqB,mBACpD;AAAC;AACsB,qCAAE;AACvB,oBAAoB,iBAAO,MAAK,KAAc,cAC1C,MAAI,YAAU,WAAoB;AAEtC,oBAAI,CAAe,gBAAE;AACnB,0BAAM,IAAS,MAAqD;AACrE;AAED,uBAAqB,eAAwB,wBAC/C;AAAC;AACmB,kCAAE;AACpB,oBAAiB,cACT,MAAK,KAAc,cAAc,YAAS,UAAa;AAE/D,oBAAI,CAAY,aAAE;AAChB,0BAAM,IAAS,MAAkD;AAClE;AAED,uBAAkB,YAAwB,wBAC5C;AAAC;AACyB,wCAAE,oCAAO;AACjC,oBAAuB,oBACf,MAAK,KAAc,cAAc,YAAS,UAAqB;AAEvE,oBAAI,CAAkB,mBAAE;AACtB,0BAAM,IAAS,MAC4C;AAC5D;AAEgB,kCAAM,MAAY,YAAS,UAAQ,OAAS;AAC5C,kCAAM,MAAY,YAAM,OAAQ,OACnD;AAAC;AACiB,gCAAE,4BAAiB,UAAmB;AAClD,sBAAU,UAAU,UAAU,UAAI,IACxC;AAAC;AACU,yBAAE;AAAM,uBAAI,MAAU,UAAO;AAAA;AAC1B,4BACV;AAAM,uBAAE,GAAM,MAAK,KAAK,MAAK,KAAiB,iBAAC,YAAS,UAAM;AAAA;AACnD,6BAAE,yBAAiB;AAC9B,uBAAI,MAAU,UAAU,UAAa,aAAC,YAAc,eAAQ;AAAA;AACvC,uCAAE,mCAAY;AACrC,uBAAW,MAAU,UAAQ,QACxB,WAAO,QAAG,IAAE,YAAS,UAC5B;AAAC;AACkB,iCAAE;AACjB,uBAAI,MAAK,KAAiB,iBAAC,YAAS,UAAc,cAAO;AAAA;AAClC,yCAAE,qCAAiB;AAC1C,uBAAI,MAAgB,gBAAU,UAAQ;AAAA;AAChB,wCAAE;AAAM,uBAAI,MAAkB,kBAAQ;AAAA;AAChD,8BAAE;AACd,wBAAC,CAAK,MAAK,KAAc,cAAC,YAAS,UAAc,iBACjD,CAAC,CAAK,MAAK,KAAc,cAAC,YAAS,UAAqB;AAAA;AACnC,uCACrB,mCAAiD;AAC3C,sBAAK,KACL,YAAM,OAAsB;AACvB,yBAAM,MAAc,cAAK,KAAU;AACjC,2BAAM,MAAgB,gBAAK,KAAU;AAClC,8BAAM,KAAS;AACf,8BAAM,KACf;AAL6B;AAMX,mCACzB;AAAC;AACY,+BAAE;AACb,sBAAK,KAAC,YAAM,OAAa,cAAI,IAAqB,mBACxD;AAAC;AACkB,iCAAE;AACf,sBAAK,KAAC,YAAM,OAAe,gBAAI,IAAqB,mBAC1D;AAAC;AACa,4BAAE,wBAAwB;AAClC,sBAAK,KAAC,YAAM,OAAU,WAAM,MAAqB,mBACvD;AAAC;AACwB,uCAAE;AACzB,oBAAQ,MAAkB,mBAAE;AACtB,0BAAkB,kBAAW;AAClC;AAED,oBAAgB,aACP,MAAK,KAAc,cAAC,YAAS,UACpB;AACd,sBAAkB,oBAAO,MAAgB,gBAC/C;AAAC;AACoB,mCAAE;AACrB,oBAAQ,MAAgB,iBAAE;AACpB,0BAAgB,gBAAQ,QAAC,UAAS;AAC5B,iCACV;AAAG;AACJ;AAEG,sBAAgB,kBAAM;AACtB,sBAAU,UAAQ,QAAC,UAAM;AAC3B,wBAAc,WAAO,MAAgB,gBAC3B,MAAc,cAAC,YAAS,UAAgC;AAC9D,0BAAgB,gBAAK,KAC3B;AACF;AAAC;AACoB,mCAAE,+BAAiB,UAAmB;AACrD,sBAAU,UAAU,UAAU,UAAO,OAC3C;AAAC;AACqB,oCAClB,gCAAiB,UAAc,MAAe;AACxC,sBAAU,UAAU,UAAa,aAAK,MAC5C;AAAC;AACsB,yCAAE,qCAAiB;AACxC,sBAAkB,kBAAQ,UAChC;AAAC;AACgC,+CAAE,2CAAuB;AACpD,sBAAkB,kBAAc,gBACtC;AAAC;AAC2B,0CAAE,sCAAiB,UAAkB;AAC3D,sBAAgB,gBAAU,UAAQ,UACxC;AAAC;AACkC,iDAAE,6CACd,aAAsB;AAC3C,oBAAgB,aAAO,MAAiB,iBAAc;AACtD,oBAAqB,kBACP,WAAc,cAAc,YAAS,UAAoB;AAEvE,oBAAI,CAAgB,iBAAS;AAEd,gCAAY,cACnB,MAAgC,gCAC1C;AACA;AAnJmC;AAoJrC,eAAO,IAAI,aAAsB,uBACnC;AAAC;AAEO,2BAAa,gBAArB,UAAmC;AACjC,eAAW,KAAU,UACvB;AAAC;AAEO,2BAAe,kBAAvB,UAAqC;AACnC,eAAW,KAAc,cAAO,OAAa,aAAC,YAAc,eAC9D;AAAC;AAEO,2BAAoB,uBAA5B,UAAyC;AACvC,YAAgB,aACZ,WAAO,QAAM,MAAkB,QAAE,YAAS,UAC9B;AAEhB,YAAI,CAAW,YAAE;AACR;AACR;AAED,YAAc,WAAa,WAAa,aAAC,YAAc,eAAY;AACnE,YAAiB,cAAO,KAAiB,iBAAQ,QAAa;AAC9D,YAAe,gBAAK,CAAE,GAAE;AACf;AACR;AAEG,aAAW,WAAiB,iBAAC,EAAS,oBAAa,0BAAY,YACrE;AAAC;AAEO,2BAA+B,kCAAvC,UAA4D;AAC1D,gBAAmB;AACjB,iBAAK,YAAS,UAAU;AACtB,uBAAO,YAAQ,SAAqB;AACtC,iBAAK,YAAS,UAAW;AACvB,uBAAO,YAAQ,SAAsB;AACvC;AACE,uBAEN;;AAAC;AAEO,2BAAwB,2BAAhC;AACE,YAAQ,KACA,KAAK,KAAc,cAAc,MAAI,YAAU,WAAoB;AAC3E,YAAI,CAAG,IAAE;AACP,kBAAM,IAAS,MAAwD;AACxE;AAED,eACF;AAAC;AAEO,2BAAiB,oBAAzB;AACE,YAAI,CAAK,KAAe,gBAAE;AACxB,gBAAQ,KAAO,KAA4B;AACvC,iBAAe,iBAAG,IAAI,YAAiB,kBAAK;AACjD;AAED,eAAW,KACb;AAAC;AAEO,2BAAoB,uBAA5B,UAAoD;AAClD,eAAiB,WAAa,aAAC,YAAc,eAC/C;AAAC;AACH,WAAC;AAAA,EAjWiC,YAiWjC;AAjWY,uBAAY,a;;;;;;;;;;;;;AChBtB;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;AACU,QAAU;AACjB,QAAwB;AAChB,gBAAiC;AACtC,WAA2B;AACvB,eAA+B;AACzB,qBAAqC;AACpC,sBAAuC;AAC5B,iCACuB;AAC/B,yBAA0C;AAC5C,uBAAuC;AAChD,cAA8B;AACrB,uBAAuC;AAC/C,eAA+B;AAC3B,mBAAmC;AACpB,kCACsB;AACrB,mCACsB;AACnC,sBAAsC;AACpD,QAAkB;AACnB,OAAuB;AACd,gBAAgC;AAChC,gBAAiC;AAC7B,oBAAoC;AACnC,qBAAqC;AACvC,mBACf;AA3BwB;AA+BvB;;;AACU,QAAU;AACR,iBAAiB;AACrB,aACT;AAHwB;AAOvB;;;AACU,QAAc;AAChB,aAAkB;AACrB,UACN;AAH4B;AAO3B;;;AACU,QAAS;AACb,WAAE,MAAI,QAAU,WAAU;AACtB,eAAE,MAAI,QAAU,WAAc;AACpB,yBAAE,MAAI,QAAU,WAAwB;AACnD,cAAE,MAAI,QAAU,WAAa;AACpB,uBAAE,MAAI,QAAU,WAAsB;AACvC,sBAAE,MAAI,QAAU,WAAqB;AACpD,OAAE,MAAI,QAAU,WAAM;AACb,gBAAE,MAAI,QAAU,WAAe;AAC/B,gBAAE,MAAI,QAAU,WAAe;AAC3B,oBAAE,MAAI,QAAU,WAAmB;AAClC,qBAAE,MAAI,QAAU,WACjC;AAZuB;AAgBtB;;;AACU,QAAQ;AACC,wBAA8B;AAC/B,uBACnB;AAHsB;AAQrB;;;;AACU,QAAO;AACL,iBAAE,QAAU,WAAc;AAC9B,aAAE,QAAU,WAAU;AACf,oBAAE,QAAc,eAAO;AACX,gCAAE,QAAS,UAAoB;AACtC,yBAAE,QAAS,UAAa;AACxB,yBAAE,QAAS,UAAa;AACjC,gBAAE,QAAS,UACvB;AARqB;AAapB;;;;AACH,IAYC;AAZD,WAAqB;AACmC;AACtD,2BAAuB;AAEgC;AACvD,4BAAyB;AAEyB;AAClD,sBAAa;AAE2D;AACxE,uBACF;AAAC,GAZoB,YAAT,QAAS,cAAT,QAAS,YAYpB;AAIE;;;AACU,QAAM;AACR,aAAyB;AACb,yBAAoC;AAC7C,gBAA4B;AAClC,UAAuB;AACf,kBACd;AANoB,E;;;;;;;;;;;;;AC9GnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,uCAAwD;AAGxD,sCAA2D;AAMxD;;;;AACH;AAA4C,sCAAkC;AAuC5E,oCAAkD;eAChD,wCAAgC,uBAAe,iBAAc,aAC/D;AAAC;AAxCD,0BAAoB,wBAAc;aAAlC;AACE;AACU,0BAAE;AAAM,2BAAS;AAAA;AACP,oCAAE;AAAM,2BAAS;AAAA;AACN,+CAAE;AAAM,2BAAE;AAAA;AACrB,oCAAE;AAAM,2BAAC;AAAA;AACN,uCAAE;AAAM,2BAAE;AAAA;AACpB,6BAAE;AAAM,2BAAC;AAAA;AACN,gCAAE;AAAM,2BAAE;AAAA;AACT,iCAAE;AAAM,2BAAE;AAAA;AACA,2CAAE;AAAM,2BAAC;AAAA;AACf,qCAAE;AAAM,2BAAC;AAAA;AACL,yCAAE;AAAM,2BAAC;AAAA;AACZ,sCAAE;AAAM,2BAAC;AAAA;AACF,6CAAE;AAAM,2BAAK;AAAA;AACd,4CAAE;AAAM,2BAAK;AAAA;AACvB,kCAAE;AAAM,2BAAK;AAAA;AACJ,2CAAE;AAAM,2BAAS;AAAA;AACzB,mCAAE;AAAM,2BAAS;AAAA;AAClB,kCAAE;AAAM,2BAAS;AAAA;AACd,qCAAE;AAAM,2BAAS;AAAA;AACtB,gCAAE;AAAM,2BAAS;AAAA;AACN,2CAAE;AAAM,2BAAS;AAAA;AACrB,uCAAE;AAAM,2BAAS;AAAA;AAC3B,6BAAE;AAAM,2BAAS;AAAA;AACP,uCAAE;AAAM,2BAAS;AAAA;AACN,kDAAE;AAAM,2BAAS;AAAA;AAC3B,wCAAE;AAAM,2BAAS;AAAA;AACV,+CAAE;AAAM,2BAAS;AAAA;AACjB,+CAAE;AAAM,2BAAS;AAAA;AACnB,6CAAE;AAAM,2BAAS;AAAA;AACX,mDAAE;AAAM,2BAAS;AAAA;AACxB,4CAAE;AAAM,2BAAS;AAAA;AACf,8CAAE;AAAM,2BAAS;AAAA;AACV,qDAAE;AAAM,2BAAS;AAExD;AAnCS;AAmCR;;sBAAA;;AAUE;;;;;AACH,qCAAM,SAAN;AACE,YAAQ,KAAQ,QAAmB,oBAAE;AAC/B,iBAAQ,QAA6B;AACrC,iBAAQ,QAAyB;AAEjC,iBAA6B;AAErC;AAAC;AAME;;;;;AACG,qCAAW,cAAjB;;;;;6BACU,KAAQ,QAAmB,oBAA/B,qBAA+B;AACjC,6CAAU,KAAQ,QAA4B;;AAA9C,2BAA+C;AAC/C,6CAAU,KAAQ,QAAwB;;AAA1C,2BAA2C;AAEvC,6BAA6B;;;;;;;AAEpC;AAIE;;;AACH,qCAAO,UAAP;AACE,eAAW,KAAQ,QACrB;AAAC;AAIE;;;AACH,qCAAc,iBAAd;AACE,eAAW,KAAQ,QACrB;AAAC;AAKE;;;;AACH,qCAAiB,oBAAjB,UAAkC;AAChC,aAAK,IAAY,WAAI,GAAU,WAAO,KAAQ,QAAc,eAAY,YAAE;AACxE,gBAAW,QAAO,KAAQ,QAAgB,gBAAW;AAErD,gBAAc,aAAS;AACvB,gBAAS,SAAU,OAAQ,QAAO,UAAK,GAAE;AAC7B,6BAAQ;AACnB;AAEG,iBAAQ,QAA6B,6BAAS,UAAc;AAC5D,iBAAiB,iBAAS,UAAc;AAC7C;AAEG,aACN;AAAC;AAIE;;;AACH,qCAAS,YAAT;AACE,YAAY,SAAM;AAClB,aAAK,IAAY,WAAI,GAAU,WAAO,KAAQ,QAAc,eAAY,YAAE;AAClE,mBAAK,KAAK,KAAQ,QAAgB,gBAAY;AACrD;AAED,eACF;AAAC;AAIE;;;AACH,qCAAiB,oBAAjB;AACE,YAAoB,iBAA0B;AAC9C,aAAK,IAAY,WAAI,GAAU,WAAO,KAAQ,QAAc,eAAY,YAAE;AACxE,gBAAQ,KAAQ,QAA4B,4BAAU,WAAE;AACxC,+BAAK,KAAK,KAAQ,QAAgB,gBAAY;AAC7D;AACF;AAED,eACF;AAAC;AAIE;;;AACH,qCAA6B,gCAA7B;AACE,YAAqB,kBAAO,KAAQ,QAA8B;AAElE,aAAK,IAAY,WAAI,GAAU,WAAO,KAAQ,QAAc,eAAY,YAAE;AACpE,iBAAQ,QAA6B,6BAAS,UAAmB;AACjE,iBAAiB,iBAAS,UAAmB;AAClD;AAED,YAAmB,iBAAE;AACf,iBAAQ,QAAqB;AAClC,eAAM;AACD,iBAAQ,QAAuB;AAEvC;AAAC;AAIE;;;AACH,qCAAuB,0BAAvB,UAAoC;AAClC,YAAc,WAAO,KAAQ,QAA0B,0BAC9C,MAA6B;AAEtC,YAAY,aAAK,CAAE,GAAE;AACZ;AACR;AAED,YAAc,WAAO,KAAQ,QAA4B,4BAAW;AAEhE,aAAiB,iBAAS,UAAY;AACtC,aAA6B;AAEjC,YAAW,QAAO,KAAQ,QAAgB,gBAAW;AACjD,aAAQ,QAA0B,0BAAC,EAAM,cAAU,oBAAU,UACnE;AAAC;AAIE;;;AACH,qCAAgB,mBAAhB,UAA+C;AACtC,YAAQ,WAAsC,UAAtC;YAAa,cAAyB,UAAzB;YAAY,aAAa,UAAC;AAEG;AACzD,aAAK,IAAS,QAAI,GAAO,QAAO,KAAQ,QAAqB,sBAAS,SAAE;AACtE,gBAAS,UAAgB,aAAE;AAChB;AACV;AAEG,iBAAQ,QAAiC,iCACpC,OAAE,YAAU,WAAqB;AACtC,iBAAQ,QAAiC,iCACpC,OAAE,YAAU,WAAgC;AACjD,iBAAQ,QAA8B,8BACjC,OAAE,YAAO,QAAU,WAAE,YAAS,UAAO;AAC1C,iBAAQ,QAAoC,oCAAM,OAAE,YAAS,UAAO;AACzE;AAEkE;AAC/D,aAAQ,QAA8B,8BAC3B,aAAE,YAAU,WAAqB;AAEhD,YAAsB,mBAAO,KAAQ,QAA8B,8BACpD,aAAE,YAAO,QAAY;AACpC,YAAa,YAAG,YAAS,UAAM;AAEmB;AAClD,YAAoB,qBAAK,YAAS,UAAU,WAAE;AACxC,iBAAQ,QAA8B,8BAC3B,aAAE,YAAU,WAAgC;AACvD,iBAAQ,QAA8B,8BAC3B,aAAE,YAAO,QAAU,WAAE,YAAS,UAAa;AACjD,wBAAG,YAAS,UAAY;AACiB;AACnD,mBAA0B,qBAAK,YAAS,UAAW,YAAE;AAChD,iBAAQ,QAAiC,iCAC9B,aAAE,YAAU,WAAgC;AACvD,iBAAQ,QAA8B,8BAC3B,aAAE,YAAO,QAAU,WAAE,YAAS,UAAY;AAChD,wBAAG,YAAS,UAAW;AACjC,SANM,MAMA;AAC0C;AAC3C,iBAAQ,QAA8B,8BAC3B,aAAE,YAAO,QAAU,WAAE,YAAS,UAAY;AAChD,wBAAG,YAAS,UAAW;AACjC;AAEG,aAAQ,QAAoC,oCAAY,aAAa;AAErE,aAAQ,QAAiB;AACnB;AACG;AACD;AACD,uBAEb;AANgC;AAM/B;AAIE;;;AACH,qCAAc,iBAAd,UAA8C;YAAzB;YAAK;AACpB,aAAQ,QAAe;AACpB;AACF,iBAEP;AAJ8B;AAI7B;AAKE;;;;AACH,qCAAY,eAAZ;AACE,YAAuB,oBAAO,KAAQ,QAAwB;AACS;AAClD;AACrB,YAAY,SAAO,KAAQ,QAA0B,4BAAqB;AAC1E,YAAS,MAAqB;AAE1B,aAAQ,QAA2B;AAC/B,oBAAW,SAAI;AAClB,iBAAQ,MACV;AAHqC;AAIpC,aAAQ,QAAS,SAAC,YAAU,WAClC;AAAC;AAIE;;;AACH,qCAAY,eAAZ;AACM,aAAQ,QAAY,YAAC,YAAU,WACrC;AAAC;AAIE;;;AACK,qCAAyB,4BAAjC;AACE,YAAQ,KAAQ,QAAsB,0BAAM,GAAE;AACxC,iBAAQ,QAA4B,4BAAQ;AAC5C,iBAAQ,QAAkC,kCAAQ;AACvD,mBACO,KAAQ,QAAsB,0BAAS,KAAQ,QAAc,eAAE;AACjE,iBAAQ,QAA4B,4BAAO;AAC3C,iBAAQ,QAAkC,kCAAQ;AACvD,SAJM,MAIA;AACD,iBAAQ,QAAkC,kCAAO;AACjD,iBAAQ,QAA4B,4BAAQ;AAEpD;AAAC;AAIE;;;AACK,qCAAgB,mBAAxB,UAAyC,UAAmB;AAC1D,YAAY,UAAE;AACR,iBAAQ,QAAmB,mBAAS,UAAE,YAAU,WAAe;AAC/D,iBAAQ,QAAuB,uBACvB,UAAE,YAAO,QAAc,eAAU;AAC9C,eAAM;AACD,iBAAQ,QAAsB,sBAAS,UAAE,YAAU,WAAe;AAClE,iBAAQ,QAAuB,uBACvB,UAAE,YAAO,QAAc,eAAW;AAElD;AAAC;AACH,WAAC;AAAA,EAvS2C,aAuS3C;AAvSY,iCAAsB,uB;;;;;;;;;;;;;ACZhC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2FAA0B;AAC1B,+FAA4B;AAC5B,iGAA6B;AAC7B,+FAA4B;AAC5B,uFAAwB,S;;;;;;;;;;;;;ACNrB;;;;;;;;;;;;;;;;;;;;;;;;AAyCF,C;;;;;;;;;;;;;ACzCE;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AACH,SAA4B,aAA2B;AAA1B;AAAA,oBAA0B;;AAErD,WAA4B,sBAAa,aACrC,EAAQ,SAAoC,SAElD;AAAC;AALD,uBAKC;AAED,SAA8B,sBAA2B;AAA1B;AAAA,oBAA0B;;AACjD;AAC0E;AAChF,QAAoB,mBAAS;AAE7B,QAAI;AACF,YAAa;AACqC;AACL;AAC3C,gBAAW;AACO,mCAAQ;AACxB,uBACF;AACA;AAPc;AAShB,YAAa,UAAG,mBAAO,CAAE;AAChB,kBAAS,SAAiB,iBAAO,QAAS,SAAW;AACrD,kBAAS,SAAoB,oBAC5B,QAAS,SAAmC;AACvD,MAAC,OAAU,KAAE;AACI,2BAAS;AAC1B;AAED,WACF;AAAC,C;;;;;;;;;;;;;ACrCE;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;;;AAEH,SAAuB,QAAiB,SAAkB;AACxD,QAAW,QAAQ,SAAE;AACnB,eAAc,QAAQ,QAAW;AAClC;AAED,QAAM,KAA2B;AACjC,WAAS,IAAE;AACT,YAAW,QAAG,IAAW,WAAE;AACzB,mBAAU;AACX;AACC,aAAK,GAAe;AACvB;AACD,WACF;AAAC;AAbD,kBAaC;AAED,SAAuB,QAAiB,SAAkB;AACxD,QAAmB,gBAAU,QAAQ,WACvB,QAAsB,yBACb,QAAmB;AAC1C,WAAoB,cAAK,KAAQ,SACnC;AAAC;AALD,kBAKC;AASE;;;;;;;;AACH,SAAmC,oBAAiB;AACuB;AACnB;AACwB;AAClB;AAC5D,QAAY,SAA0B;AACtC,QAAU,OAAa,iBAAS,MAAE;AAChC,eAAa,OAAa;AAC3B;AAED,QAAW,QAAS,OAAU,UAAsB;AAC/C,UAAM,MAAY,YAAW,YAAc;AAC3C,UAAM,MAAY,YAAY,aAAiC;AAC5D,aAAgB,gBAAY,YAAQ;AAC5C,QAAiB,cAAQ,MAAa;AAC9B,aAAgB,gBAAY,YAAQ;AAC5C,WACF;AAAC;AAjBD,8BAiBC,oB;;;;;;;;;;;;;ACtDE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,sCAAsD;AAGtD,uCAAyD;AAGzD;AACI,iCAAyC;AAD7C;mEAoFA;AAAC;AAlFiB,sBAAQ,WAAxB,UAAsC;AACpC,eAAO,IAAqB,kBAC9B;AAAC;AAED,0BAAI,6BAAW;aAAf,aAA8B;AACxB,iBAAW,WAAe,eAChC;AAAC;;sBAAA;;AAED,0BAAI,6BAAQ;aAAZ,aAA0B;AACpB,iBAAW,WAAY,YAC7B;AAAC;;sBAAA;;AAED,0BAAI,6BAAM;aAAV,aAAwB;AAClB,iBAAW,WAAU,UAC3B;AAAC;;sBAAA;;AAED,gCAAI,OAAJ;AACM,aAAW,WACjB;AAAC;AAED,gCAAK,QAAL;AACM,aAAW,WACjB;AAAC;AAEQ,gCAAkB,qBAA3B;AAAA,oBAIC;AAHK,aAAK,KAAiB,iBAAgB,iBAAE;AACtC,kBAAW,WACjB;AACF;AAAC;AAEQ,gCAAoB,uBAA7B;AAAA,oBAmDC;AAlD6E;AACP;AACL;AAChE,YAAa;AACH,sBAAE,kBAAkB;AACtB,sBAAK,KAAU,UAAI,IACzB;AAAC;AACU,yBAAE;AACP,sBAAK,KACX;AAAC;AACgB,+BAAE,2BAAsB,eAAe;AACtD,oBAAe,YAAO,MAAK,KAAc,cACrC,aAA2B,4BAAQ,QAAsB;AAC7D,oBAAa,WAAE;AACJ,8BAAM,MAAY,YAAc,eAAS;AAEtD;AAAC;AACiB,gCAAE,4BAAsB,eAAe;AACvD,oBAAgB,aAAO,MAAK,KAAc,cACtC,aAA2B,4BAAQ,QAAuB;AAC9D,oBAAc,YAAE;AACJ,+BAAM,MAAY,YAAc,eAAS;AAEvD;AAAC;AACO,sBAAE,kBAAkB;AAAK,uBAAI,MAAK,KAAU,UAAS,SAAW;AAAA;AACzD,6BAAE,yBAAsB;AACjC,sBAAK,KAAgB,gBAC3B;AAAC;AACU,yBAAE,qBAAkB;AACzB,sBAAK,KAAU,UAAO,OAC5B;AAAC;AACW,0BAAE,sBAAsB,eAAe;AAC7C,sBAAK,KAAa,aAAc,eACtC;AAAC;AACO,sBAAE,kBAAa,MAAe;AAC/B,sBAAqB,KAAM,MAAY,YAAK,MACnD;AAAC;AACmB,kCAAE,8BAAS;AAC7B,oBAAQ,KAA+C,OAAgB;AACvE,oBAAM,IAAE;AACN,wBAAQ,KAAG,IAAM,GAAW;AAC1B,uBAAQ,QAAK,MAAO;AACtB,2BAAU;AACX;AAED,uBACF;AAAC;AACO,sBAAE;AAAM,uBAAK,MAAqB,KAAY;AACtD;AA7CwC;AA8C1C,eAAO,IAAI,aAA2B,4BACxC;AAAC;AACH,WAAC;AAAA,EAnFG,YAmFH;AApFY,4BAAiB,kB;;;;;;;;;;;;;ACR3B;;;;;;;;;;;;;;;;;;;;;;;;;AAEU,QAAU;AACT,kBAA+B;AACjB,gCAA6C;AACpD,yBAAsC;AAC3C,oBAAiC;AAC1B,2BACrB;AANwB;AAQb,QAAO;AACP,iBAAe;AACb,mBAAiB;AACjB,mBAAiB;AACjB,mBAAiB;AACX,yBAAoC;AAC7C,gBAAc;AACJ,0BACpB;AARqB;AAU4B;AACtC,QAA6B;AAC5B,kBAAU;AACV,kBAAY;AACP,uBAAW;AACd,oBAAW;AACX,oBACd;AAN2C,E;;;;;;;;;;;;;ACrB1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,iCAAgE;AAChE,uCAAwD;AAIxD,sCAA2F;AAG3F;AACI,2CAAuC;AA+BzC,yCAAuD;AAAvD,oBACE,wCAAqC,4BAAe,iBAAc,aACnE;AAJO,cAAQ,WAAgC;eAIhD;AAAC;AA/BD,0BAAoB,6BAAU;aAA9B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,6BAAO;aAA3B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,6BAAc;aAAlC;AACE;AACU,0BAAE;AAAM,2BAAS;AAAA;AACL,sCAAE;AAAM,2BAAI;AAAA;AACrB,6BAAE;AAAM,2BAAS;AAAA;AACpB,0BAAE;AAAM,2BAAC;AAAA;AACT,0BAAE;AAAM,2BAAK;AAAA;AACJ,mCAAE;AAAM,2BAAI;AAAA;AACX,oCAAE;AAAM,2BAAI;AAAA;AACtB,0BAAE;AAAM,2BAAS;AAAA;AACV,iCAAE;AAAM,2BAAS;AAAA;AACrB,6BAAE;AAAM,2BAAS;AAAA;AAChB,8BAAE;AAAM,2BAAS;AAEjC;AAbS;AAaR;;sBAAA;;AAWQ,0CAAI,OAAb;AAAA,oBAqBC;AApBK,aAAY,cAAG,CAAK,KAAQ,QAAS,SAAC,YAAU,WAAsB;AACtE,aAAQ,QAAS,SAAC,YAAU,WAAwB;AACpD,aAAS,WAAK;AACd,aAAO,SAAK;AAEZ,aAAS,gBAAe,QAAqB,qBAAC,UAAQ;;AACxD,gBAAQ,MAAY,aAAE;AACb;AACR;;AAED,qBAAoB,yBAAO,6FAAE;AAAxB,wBAAW;AACd,wBAAS,MAAY,aAAE;AACjB,8BAA0B,0BAAM,MAAY,YAAQ;AACzD;AACF;;;;;;;;;AACH;AAAG,SAViB;AAYpB,YAAI,CAAK,KAAY,eAAQ,KAAS,UAAE;AAClC,iBAA0B,0BAAK,KAAQ,QAAa;AAE5D;AAAC;AAED,0CAAc,iBAAd,UAAqC;AAC/B,aAAY,cAAiB;AAEjC,YAAQ,KAAY,aAAE;AAChB,iBAAQ,QAAY,YAAC,YAAU,WAAsB;AACrD,iBAAQ,QAAa,aACrB,YAAO,QAAc,eAAM,KAAS,SAAa;AACjD,iBAAQ,QAAa,aAAC,YAAO,QAAc,eAAO;AAClD,iBAAQ,QAAa,aAAC,YAAO,QAAc,eAAO;AAClD,iBAAsB,sBAAK,KAAW;AACtC,iBAAqB,qBAAK,KAAS;AAEhC;AACR;AAED,YAAQ,KAAS,UAAE;AACb,iBAA0B,0BAAK,KAAQ,QAAa;AACzD;AAEG,aAAQ,QAAS,SAAC,YAAU,WAAsB;AAClD,aAAQ,QAAgB,gBAAC,YAAO,QAAgB;AAChD,aAAQ,QAAgB,gBAAC,YAAO,QAAgB;AAChD,aAAQ,QAAgB,gBAAC,YAAO,QAAgB;AAChD,aAAsB,sBAAI;AAC1B,aAAqB,qBAC3B;AAAC;AAED,0CAAa,gBAAb;AACE,eAAW,KACb;AAAC;AAED,0CAAW,cAAX,UAAyB;AACnB,aAAS,WAAS;AACtB,YAAQ,KAAY,aAAE;AAChB,iBAAsB,sBAAQ;AAC9B,iBAAQ,QAAa,aAAC,YAAO,QAAc,eAAO,MAAa;AAEvE;AAAC;AAED,0CAAW,cAAX;AACE,eAAW,KACb;AAAC;AAED,0CAAS,YAAT,UAAuB;AACjB,aAAO,SAAS;AACpB,YAAQ,KAAY,aAAE;AAChB,iBAAqB,qBAAQ;AAErC;AAAC;AAED,0CAAS,YAAT;AACE,eAAW,KACb;AAAC;AAED,0CAAI,OAAJ;AACM,aAAQ,QAAY,YAAC,YAAU,WAAe;AAC9C,aAAQ,QAAY,YAAC,YAAU,WAA6B;AAC5D,aAAQ,QAAgB,gBAAC,YAAO,QACtC;AAAC;AAED,0CAAK,QAAL;AACM,aAAQ,QAAS,SAAC,YAAU,WAAe;AAC3C,aAAQ,QAAa,aAAC,YAAO,QAAY,aAC/C;AAAC;AAED,0CAAQ,WAAR;AACE,eAAW,KAAQ,QAAS,SAAC,YAAU,WACzC;AAAC;AAME;;;;;AACH,0CAAmB,sBAAnB;AACE,YAAQ,KAAQ,QAAS,SAAC,YAAU,WAAc,eAAE;AAC9C,iBAAQ,QAAS,SAAC,YAAU,WAA6B;AAEjE;AAAC;AAEQ,0CAAO,UAAhB;AACE,yBAAa,aAAG;AAEhB,YAAQ,KAAS,UAAE;AACb,iBAAS,SAAc;AAE/B;AAAC;AAED,0CAAgB,mBAAhB;AACM,aAAQ,QAAY,YAAC,YAAU,WAAwB;AACvD,aAAQ,QAAe;AACvB,aAAQ,QAAS,SAAC,YAAU,WAClC;AAAC;AAEO,0CAAqB,wBAA7B,UAAmD;AACjD,YAAW,QAAG,YAAuB,gBAAI;AAEwB;AACjD;AAChB,YAAmB,gBAAG,OAAa,WAAkB,cACjD,OAAsB,uBAAO,QAAgB,eACjC;AACZ,aAAQ,QAAmB,mBAAc,eAC/C;AAAC;AAEO,0CAAoB,uBAA5B,UAAkD;AAChD,YAAW,QAAmB,gBAAM,MAAI;AACpC,aAAQ,QAAkB,kBAAC,YAAO,QAAW,YACnD;AAAC;AAEO,0CAAyB,4BAAjC,UAA+C;AAC7C,YAAiB,cAAQ,QAAG,YAAQ,8BAAc;AAClD,YAAiB,cAAQ,QAAG,YAAQ,8BAAc;AAClD,YAAsB,mBAAQ,QAAG,YAAQ,8BAAmB;AAC5D,YAAmB,gBAAQ,QAAG,YAAQ,8BAAgB;AACtD,YAAmB,gBAAQ,QAAG,YAAQ,8BAAgB;AAElD,aAAQ,QAAS,SACmB,sCAAgB,cAAM;AAC1D,aAAQ,QAAS,SACuB,0CAAK,CAAa,cAAM;AAChE,aAAQ,QAAS,SACmB,sCAAgB,cAAM;AAC1D,aAAQ,QAAS,SACuB,0CAAK,CAAa,cAAM;AAChE,aAAQ,QAAS,SACwB,2CAAqB,mBAAM;AACpE,aAAQ,QAAS,SAC4B,+CAC1C,CAAkB,mBAAM;AAC3B,aAAQ,QAAS,SACqB,wCAAkB,gBAAM;AAC9D,aAAQ,QAAS,SACyB,4CAAK,CAAe,gBAAM;AACpE,aAAQ,QAAS,SACqB,wCAAkB,gBAAM;AAC9D,aAAQ,QAAS,SACyB,4CAAK,CAAe,gBAAM;AAEL;AAC/D,aACN;AAAC;AACH,WAAC;AAAA,EAxMG,aAwMH;AAzMY,sCAA2B;AA2MyE;AACjH,kBAA2C,4B;;;;;;;;;;;;;ACtNxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,sCAAsD;AACtD,mCAAkD;AAClD,qCAA+C;AAE/C,uCAAiD;AAEjD,4CAA+B;AAI/B;AAA+B,yBAAiC;AAAhE;AAAA,wEAwFC;AA3CC,cAAQ,WAAS;eA2CnB;AAAC;AAvFiB,cAAQ,WAAxB,UAAsC,MAErC;AAFuC;AAAA;AAC3B,6BACZ;;;AACC,YAAY,SAAG,IAAa,UAAO;AACkC;AACrE,YAAQ,KAAY,gBAAc,WAAE;AAC5B,mBAAU,YAAO,KAAa;AACrC;AACD,eACF;AAAC;AAEM,cAAa,gBAApB,UAAsD;AACpD;AACU,sBAAE,kBAAU;AAAK,uBAAQ,SAAK,KAAU,UAAI,IAAW;AAAA;AACzC,oCAAE;AAAM,uBAAI,KAAqB,qBAAQ;AAAA;AAC5C,iCAAE;AAAM,uBAAQ,SAAK,KAAwB;AAAA;AAC7C,iCAAE,6BAAO;AAAK,uBAAQ,SAAK,KAAS,SAAgB;AAAA;AACnC,kDAAE,8CAAQ,SAAS;AACnD,uBAAQ,SAAgB,gBAAoB,oBACjC,SAAS,SAAE,SAAe;AAAA;AACb,0CAAE,sCAAQ,SAAS;AAC3C,uBAAS,SAAqB,KACN,oBAAQ,SAAS,SAAE,SAAe;AAAA;AACvC,qCAAE,iCAAQ;AAC7B,uBAAM,OAAoB,oBAAS,UAAU;AAAA;AAC9B,iCAAE;AACjB,uBAAC,EAAE,GAAQ,OAAY,aAAG,GAAQ,OAAc;AAAA;AACrC,6BAAE;AAAM,kCAAO,QAAS,SAAK,MAAY;AAAA;AACvC,+BAAE;AAAM,uBAAO,QAAS,SAAU;AAAA;AACxC,yBAAE;AAAM,uBAAO,QAAS,SAAW;AAAA;AACZ,gDAAE,4CAAQ,SAAS;AACjD,uBAAQ,SAAgB,gBAAiB,iBAC9B,SAAS,SAAE,SAAe;AAAA;AACf,wCAAE,oCAAQ,SAAS;AACzC,uBAAS,SAAqB,KACT,iBAAQ,SAAS,SAAE,SAAe;AAAA;AACtC,mCAAE,+BAAQ;AAC3B,uBAAM,OAAiB,iBAAS,UAAU;AAAA;AACnC,yBAAE,qBAAU;AAAK,uBAAQ,SAAK,KAAU,UAAO,OAAW;AAAA;AACpD,+BAAE,2BAAQ,SAAO;AAC9B,uBAAS,SAAqB,KAAM,MAAY,YAAQ,SAAQ;AAExE;AA9BS;AA8BR;AAMD,0BAAI,qBAAS;aAAb;AACE,mBAAc,QAAK,KACrB;AAAC;aAED,aAAgC;AAC1B,iBAAY,cAAU,QAAY;AAClC,iBACN;AAAC;;sBALA;;AAOD,wBAAQ,WAAR;AACM,aAAW,WACjB;AAAC;AAED,wBAAU,aAAV;AACM,aAAW,WACjB;AAAC;AAED,wBAAM,SAAN;AACM,aAAW,WACjB;AAAC;AAEQ,wBAAoB,uBAA7B;AACE,eAAO,IAAI,aAAmB,oBAAU,UAAc,cACxD;AAAC;AAEQ,wBAAkB,qBAA3B;AACE,YAAU,OAAO,KAAqB;AAClC,aAAY,cAAyB,0BAAQ,KACnD;AAAC;AAOE;;;;;;AACK,wBAAY,eAApB;AACM,aAAW,WAAa,aAAQ,QAAK,KAC3C;AAAC;AACH,WAAC;AAAA,EAxF8B,YAwF9B;AAxFY,oBAAS,U;;;;;;;;;;;;;ACZnB;;;;;;;;;;;;;;;;;;;;;;;;;AAEU,QAAU;AAC+D;AACI;AACpC;AAC1C,gBAA2C;AACxC,mBAA8C;AAC5C,qBAAgD;AAC3D,UAAuB;AAClB,eACT;AATwB;AAWb,QAAO;AACN,kBAAyB;AAC1B,iBAAwB;AACf,0BAAiC;AAC/B,4BAAmC;AACjD,cAAqB;AACtB,aACP;AAPqB;AASV,QAAO;AACK,6BAAK;AACV,wBAAK;AACH,0BAAK;AAClB,aAAI,EAJU;AAKT,kBACZ,M;;;;;;;;;;;;;AC5BC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,uCAAwD;AAExD,sCAAyD;AAEzD,iCAAgD;AA4BmC;AACnF,IAA4B,yBAA0B,CACxC,cAAe,eAAa,aACxC;AAE2F;AAC7F,IAAsC,mCAA4B,CACtD,YAAa,aAAW,WAClC;AAEgC;AAClC,IAAoB,mBAAiC;AAErD;AAAyC,mCAA+B;AAuDtE,iCAA+C;AAA/C,oBACE,wCAA6B,oBAAe,iBAAc,aAuB3D;AA5CO,cAA2B,8BAAS;AAEpC,cAAe,kBAAK;AACpB,cAA0B,6BAAK;AAC/B,cAAO,UAAO;AACd,cAAK,QAAG,EAAM,OAAG,GAAQ,QAAK;AAC9B,cAAW,cAAK;AAChB,cAAW,cAAK;AAChB,cAAS,YAAK;AACd,cAAe,kBAAgB,EAAK,MAAG,GAAK,KAAK;AAcnD,cAAgB,kBAAO,MAA0B;AAEjD,cAAwB,0BAAG;AACzB,kBAA4B,8BAAQ;AACpC,kBACN;AAAE;AACE,cAAgB,kBAAG,UAAE;AACnB,kBAAa,aACnB;AAAE;AACE,cAAkB,oBAAG;AACnB,kBACN;AAAE;AACE,cAAa,eAAG;AACd,kBACN;AAAE;AACE,cAAY,cAAG;AACb,kBACN;AAAE;AACE,cAAc,gBAAG;AACf,kBACN;AAAE;eACJ;AAAC;AA9ED,0BAAoB,qBAAU;aAA9B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,qBAAO;aAA3B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,qBAAO;aAA3B;AACE,mBAAO,YACT;AAAC;;sBAAA;;AAED,0BAAoB,qBAAc;aAAlC;AACE;AACU,0BAAE;AAAM,2BAAS;AAAA;AACH,wCAAE;AAAM,2BAAI;AAAA;AACf,qCAAE;AACjB,2BAAC,EAAI,KAAG,GAAO,OAAG,GAAQ,QAAG,GAAM,MAAG,GAAO,OAAG,GAAQ,QAAY;AAAA;AACrD,qCAAE;AAAM,2BAAI;AAAA;AACK,sDAAE;AAAM,2BAAS;AAAA;AACzB,8CAAE;AAAM,2BAAS;AAAA;AACtB,yCAAE;AAAM,2BAAS;AAAA;AACrB,qCAAE;AAAM,2BAAC,EAAE,GAAG,GAAG,GAAK;AAAA;AAC1B,iCAAE;AAAM,2BAAI;AAAA;AACV,mCAAE;AAAM,2BAAI;AAAA;AAClB,6BAAE;AAAM,2BAAI;AAAA;AACW,oDAAE;AAAM,2BAAS;AAAA;AACzB,4CAAE;AAAM,2BAAS;AAAA;AACtB,uCAAE;AAAM,2BAAS;AAAA;AAC3B,6BAAE;AAAM,2BAAS;AAAA;AACX,mCAAE;AAAM,2BAAS;AAEtC;AAnBS;AAmBR;;sBAAA;;AAgDQ,kCAAI,OAAb;AAAA,oBAgBC;AAfC,YAAyB,sBAAO,KAAuB;AAEnD,aAAqB,qBAAsB;AAE/C,YAAuB,qBAAE;AACjB,qBAAuC,oBAAW;gBAA7C;gBAAW,iBAAmC;AACpC,kCAAC;AAChB,sBAAQ,QAAS,SAAO;AAC5B,oBAAQ,MAAQ,QAAc,eAAE;AAC1B,0BAAQ,QAAS,SAAY;AACsE;AACnG,0BAAkB;AAE1B;AAAG;AAEP;AAAC;AAEQ,kCAAO,UAAhB;AAAA,oBAyBC;AAxBC,YAAQ,KAAsB,uBAAE;AAC9B,gBAAQ,KAAgB,iBAAE;AACZ,6BAAK,KAAkB;AAC/B,qBAAgB,kBAAK;AACrB,qBAAQ,QAAY,YAAoB,oBAAW,WAAgB;AACxE;AAED,gBAAQ,KAA2B,4BAAE;AACvB,6BAAK,KAA6B;AAC1C,qBAA2B,6BAAK;AAChC,qBAAQ,QAAY,YACD,oBAAW,WAAkB;AACrD;AAEK,qBAAuC,oBAAW;gBAA7C;gBAAW,iBAAmC;AACpC,kCAAC;AAChB,sBAAQ,QAAY,YAAO;AAC3B,sBAAQ,QAAY,YAAY;AAChC,sBACN;AAAG;AACJ;AAEG,aAA0B;AAC1B,aACN;AAAC;AAIE;;;AACH,kCAAQ,WAAR,UAAoB;AACd,aAAa,aACnB;AAAC;AAED,kCAAU,aAAV;AACM,aACN;AAAC;AAED,kCAAM,SAAN;AAAA,oBAQC;AAPC,YAAQ,KAAY,aAAE;AACA,iCAAK,KAAc;AACxC;AACG,aAAY,oCAAyB;AACnC,kBAAkB;AAClB,kBAAY,cAClB;AACF,SAJ0C;AAIzC;AAED,kCAAY,eAAZ,UAA+B;AACtB,YAAS,YAAuB,oBAAW,WAAC;AACnD,YAAa,WAAE;AACT,iBAAQ,QAAS,SAAY;AAClC,eAAM;AACD,iBAAQ,QAAY,YAAY;AAExC;AAAC;AAED,kCAAW,cAAX;AAAA,oBAGC;AAFsB,8BACjB;AAAM,mBAAI,MAAQ,QAAS,SAAoB,oBAAW,WAAY;AAC5E;AAAC;AAED,kCAAU,aAAV;AAAA,oBAIC;AAHsB,8BACjB;AAAM,mBAAI,MAAQ,QAAY,YACP,oBAAW,WAAY;AACpD;AAAC;AAOE;;;;;;AACK,kCAAmB,sBAA3B;AACE,eAAW,KAAQ,QACrB;AAAC;AAEO,kCAAsB,yBAA9B;AACE;AACiB,6BAAW;AACN,kCAAO;AAChB,yBAAO;AACJ,4BAAO;AACA,mCAAO;AACR,kCAExB;AARS;AAQR;AAIE;;;AACK,kCAAoB,uBAA5B,UAAyD;;AACvD,YAAuB,qBAAE;;AACvB,qBAAsB,wCAAsB,uLAAE;AAAzC,wBAAa;AACZ,yBAAQ,QAA2B,2BAAQ,SAAM,KAAkB;AACxE;;;;;;;;;;AACD,gBAAQ,KAAQ,QAAc,eAAE;AAC1B,qBAAQ,QAAsB,sBAAK,KAAgB;AACxD;AACF;AAEG,aAAQ,QAA2B,2BAAQ,SAAM,KAAe;AAChE,aAAQ,QAA2B,2BAAO,QAAM,KACtD;AAAC;AAEO,kCAA4B,+BAApC,UAA+C;;AAC7C,YAAO,IAAK,SAAc,WAAE;AACtB,iBAAQ,QAA2B,2BAAQ,SAAM,KAAoB;AAC1E,eAAM;;AACL,qBAAsB,kDAAgC,mPAAE;AAAnD,wBAAa;AACZ,yBAAQ,QAAmC,mCACpC,SAAM,KAAoB;AACtC;;;;;;;;;;AAEL;AAAC;AAEO,kCAAsB,yBAA9B;;;AACE,iBAAsB,wCAAsB,uLAAE;AAAzC,oBAAa;AACZ,qBAAQ,QAA6B,6BAAQ,SAAM,KAAkB;AAC1E;;;;;;;;;;AACG,aAAQ,QAA6B,6BAAQ,SAAM,KAAe;AAClE,aAAQ,QAA6B,6BAAO,QAAM,KAAc;AAEpE,YAAQ,KAAQ,QAAc,eAAE;AAC1B,iBAAQ,QAAwB,wBAAK,KAAgB;AAE7D;AAAC;AAEO,kCAA8B,iCAAtC;;AACM,aAAQ,QAA6B,6BAAQ,SAAM,KAAoB;;AAC3E,iBAAsB,kDAAgC,mPAAE;AAAnD,oBAAa;AACZ,qBAAQ,QAAqC,qCACtC,SAAM,KAAoB;AACtC;;;;;;;;;AACH;AAAC;AAEO,kCAAa,gBAArB;AAAA,oBAQC;AAPC,YAAmB,gBAAsB,oBAAS;AAClD,YAAU,OAAS,OAAK,KAAqD;AACzE,aAAQ,QAAC,UAAI;AACf,gBAAO,IAAQ,QAAQ,YAAM,GAAE;AACzB,sBAAQ,QAAkB,kBAAc,cAAK,MAAQ;AAE7D;AACF;AAAC;AAEO,kCAAY,eAApB,UAAgC;AAAhC,oBAoEC;AAnEC,YAAQ,KAAQ,QAAoB,qBAAE;AAC7B;AACR;AAED,YAAqB,kBAAO,KAAiB;AAC7C,YAAmB,gBAAY,aAAE;AACxB;AACR;AAEsG;AACvG,YAA6B,0BAAO,KAAyB;AAC7D,YAAuB,oBAA0B,2BAAO,QAAc,aAA2B,wBAAK,SAAQ,IAAM;AACpH,YAAqB,mBAAE;AACd;AACR;AAEc,wBAAY,cAAQ;AACpB,wBAAe,iBAAM,QAAe;AACpC,wBAAgB,kBAAO;AACvB,wBAAsB,wBAAkB,gBAAiB,iBAAQ,QAAI,QAAkB,cAC/F,IAAK,SAAgB,eAAO,IAAK,SAAiB,gBAAO,IAAK,SACnE;AAEF,YAAuB,oBAAM,QAAc,aACvB,iBAAO,SAAI,sBACN,KACjB,UAAO;AAAK,mBAAI,MAAQ,QAAoB,oBAAQ;AAAE,SAD1C;AAEpB,YAAqB,mBAAE;AAC6E;AAC9F,iBAAwB;AACrB;AACR;AAED,YAAO,QAAc,WAAE;AACL,6BAAK,KAAI,IAAS;AAC9B,iBAA6B,6BAAM;AACxC;AAEc,wBAAqB,uBAAO,KAAuB,uBAAM;AACxE,YAAmB,gBAAqB,sBAAE;AACpC,iBAAqB;AAC1B;AAEoB,8BAAC;AACuF;AAC3F,+BAAM;AAEtB,gBAAI,CAAgB,gBAAqB,wBAC/B,QACH,cAAuB,IAAI,QAAQ,OAA0B,IAAQ,YAAQ,KAAE;AACiB;AACtB;AACd;AACR;AACgD;AACxB;AAClE,gCAAqB,uBAAO,MAAuB,uBAAM;AACxE,oBAAmB,gBAAqB,sBAAE;AACpC,0BAAqB;AAC1B;AACF;AAED,gBAAI,CAAgB,gBAAqB,sBAAE;AAC4B;AACjE,sBAAgB,kBAAO,MAA0B;AAEzD;AACF;AAAC;AAEO,kCAAsB,yBAA9B,UAA0C;AACxC,eAAW,QAAc,aAAO,IAAK,SAAiB,SAA/C,GACC,KAAQ,QAAoB,oBAEtC;AAAC;AAEO,kCAAiB,oBAAzB;AAAA,oBA8BC;AA7BO,iBAAoE,oBAAQ;YAArD;YAAsB,0BAAgC;AAC7E,iBAAsD,oBAAW;YAAjD;YAAe,mBAAmC;AACjE,YAAuB,0BAAuB,oBAAQ,QAAC;AAE1D,aAAkB;AAEtB,YAAkB,iBAAM;AACxB,YAAgB,eAAM;AAEtB,YAAI,CAAK,KAAQ,QAAc,eAAE;AACzB,qBAA6B,KAA8B;gBAAhD;gBAAU,cAAuC;AACpD,6BAAgB,WAAE,aAAiB,WAAE,IAAK;AAC5C,2BAAc,SAAE,aAAe,SAAE,IAAK;AACnD;AAEG,aAAQ,QAAkB,kBAAuB,wBAAkB;AACnE,aAAQ,QAAkB,kBAAqB,sBAAgB;AACX;AAC5C,qBAAK,KAAkB;AACvB,qBAAK,KAA6B;AAC1C,aAA8B;AAC9B,aAAQ,QAAY,YAAkB;AAEW;AACjD,aAAQ,QAAuB;AAC/B,aAAQ,QAAS,SAAgB;AACjC,aAAgB,6BAAc;AAC5B,kBACN;AAAC,SAFgC,EAGnC;AAAC;AAEO,kCAA2B,8BAAnC;AACQ,iBAA+C,KAAgB;YAA/C;YAAuB,2BAAyB;AAEtE,YAAe;AACf,YAAyB,uBAAE;AACf,yBAAG,OAAwB,yBAClB,iBACX,KAAQ,QAAsB,uBAC9B,KAAQ,QACd;AACH,eAAM;AACK;AACP,mBAAM,KAAM,MAAM,QAAI;AACtB,mBAAM,KAAM,MAAO,SACpB;AAHW;AAId;AAC4C;AACnC;AACP,eAAY,WAAK,IAAK,KAAY,cAAK;AACvC,eAAY,WAAK,IAAK,KAAY,cACnC;AAHW;AAKb,YAAc;AACX,eAAO,KAAM,MAAM,QAAQ,CAAzB,GAA8B,KAAY,cAAK;AACjD,eAAO,KAAM,MAAO,SAAQ,CAA1B,GAA+B,KAAY,cAC9C;AAHe;AAKjB,eAAO,EAAW,wBAAU,UAC9B;AAAC;AAEO,kCAA6B,gCAArC;AAAA,oBAcC;AAb0G;AACjC;AACjE,YAAe,kBAAuB,oBAAW,WAAC;AACnD,iBAA0C,KAAgB;YAArC;YAAa,iBAAyB;AACjE,YAAwB,qBAAuB,wBAAI,CAAa;AAEhE,YAAsB,sBAAQ,KAA4B,6BAAE;AACtD,iBAA8B;AAC9B,iBAAQ,QAAS,SAAkB;AACnC,iBAA2B,wCAAc;AACvC,sBAAQ,QAAY,YAC1B;AAAC,aAF2C,EAEzC,YAAO,QAAqB;AAEnC;AAAC;AAEO,kCAA0B,6BAAlC;AACS,YAAa,gBAAuB,oBAAW,WAAC;AACnD,aAAQ,QAAY,YAAgB;AACpC,aAA4B,8BAAS;AACrC,aAAQ,QACd;AAAC;AAEO,kCAAoB,uBAA5B;AAAA,oBAQC;AAPK,aAAwB,0BAAO,KAAgB,gBAAiB;AAChE,aAAgB,kBAAO,KAA0B;AACoC;AACa;AAC5F,mBACN;AAAM,mBAAI,MAAwB,0BAAY;AAAA,WAC3B,oBAAQ,QACjC;AAAC;AAEO,kCAAc,iBAAtB;AAAA,oBAsBC;AArBC,YAAqB,kBAAO,KAAiB;AAC8C;AAC3F,YAAI,CAAgB,gBAAY,aAAE;AACzB;AACR;AAED,YAAW,qBAA6C;AAExD,YAAmB,gBAAe,gBAAE;AACb,kCAAC;AAChB,sBAAoB,oBAC1B;AAAG;AACC,iBAAwB;AAC7B,eAAM;AACD,iBAAkC;AACjB,kCAAC;AAChB,sBAAgB,gBAAqB,uBAAQ;AAC7C,sBAAoB,oBAAQ;AAC5B,sBACN;AAAG;AAEP;AAAC;AAEO,kCAAmB,sBAA3B,UACmD;YADD;YAAsB;AAEtE,YAAyB,yBAAwB,sBAAE;AAC7C,iBAAiC;AAEzC;AAAC;AAEO,kCAAc,iBAAtB;AAAA,oBA6BC;AA5BK,aAAM,QAAO,KAAQ,QAAuB;AAChD,YAAY,SAAO,KAAI,IAAK,KAAM,MAAO,QAAM,KAAM,MAAQ;AAEgB;AACsC;AACL;AACI;AACR;AACpF;AACtB,YAAsB,mBAAG;AACvB,gBAAgB,aAAO,KAAK,KACpB,KAAI,IAAK,MAAM,MAAM,OAAI,KAAO,KAAI,IAAK,MAAM,MAAO,QAAM;AACpE,mBAAiB,aAAsB,oBAAQ,QACjD;AAAE;AAEE,aAAU,YAAO,KAAQ,QAAgB,gBAAS,SAAoB;AAE0C;AACpH,YAAiB,cAAO,KAAM,MAAO,SAAsB,oBAAQ,QAAuB;AACZ;AAC9E,YAAQ,KAAQ,QAAc,iBAAe,cAAI,MAAM,GAAE;AACnD,iBAAY,cAAc,cAAK;AACpC,eAAM;AACD,iBAAY,cAAe;AAChC;AACG,aAAQ,UAAG,KAAO,KAAU,YAAO,KAAe;AAElD,aACN;AAAC;AAEO,kCAAmB,sBAA3B;AACQ,iBAEiB,oBAAQ;YADlB;YAAU;YAAS;YAAc,kBACd;AAE5B,aAAQ,QAAkB,kBAAY,aAAS,KAAY,cAAM;AACjE,aAAQ,QAAkB,kBAAa,cAAM,KAAU;AAE3D,YAAQ,KAAQ,QAAc,eAAE;AAC1B,iBAAgB;AACd,sBAAM,KAAM,MAAM,KAAM,MAAM,QAAQ,CAAzB,GAA8B,KAAY,cAAM;AAC9D,qBAAM,KAAM,MAAM,KAAM,MAAO,SAAQ,CAA1B,GAA+B,KAAY,cAC3D;AAHqB;AAKnB,iBAAQ,QAAkB,kBAClB,UAAS,KAAgB,gBAAK,OAAM;AAC5C,iBAAQ,QAAkB,kBAAQ,SAAS,KAAgB,gBAAI,MAAM;AAE7E;AAAC;AACH,WAAC;AAAA,EAlfwC,aAkfxC;AAlfY,8BAAmB;AAofiF;AACjH,kBAAmC,oB;;;;;;;;;;;;;;;;AC9hBhC;;;;AACH,IAA+C;AAE/C,SAAoC,qBAA6B,WAAsB;AAApB;AAAA,uBAAoB;;AAC9E,QAAG,MAAa,UAAC;AACxB,QAAmB,kBAAyB;AAC5C,QAAI,OAA4B,0BAAc,aAAI,CAAa,cAAE;AAC/D,eAA6B;AAC9B;AAED,QAA6B,0BAAM,OAAI,OAAU,IAAS,aAAgB;AAC1E,QAAI,CAAwB,yBAAE;AAC5B,eAAa;AACd;AAED,QAA+B,4BAAM,IAAS,SAAa,cAAS;AACd;AACtB;AAChC,QAA0C,oCACnC,IAAS,SAAqB,wBAC9B,IAAS,SAAQ,SACtB;AAEa,sBACc,6BAAsC;AAEnE,QAAI,CAAa,cAAE;AACI,gCAAmB;AACzC;AACD,WACF;AAAC;AA3BD,+BA2BC;AAED,SAAwC,yBAAuB,KAA4B,YAAqB;AAE9G,QAAI,CAAI,KAAE;AACR,eAAO,EAAE,GAAG,GAAG,GAAK;AACrB;AACM,QAAC,IAAiB,WAAjB;QAAG,IAAc,WAAC;AAC1B,QAAe,YAAI,IAAa,WAAM;AACtC,QAAe,YAAI,IAAa,WAAK;AAErC,QAAgB;AAChB,QAAgB;AAC0C;AAC1D,QAAO,IAAK,SAAiB,cAAE;AAC7B,YAAgB,aAAqB;AAC1B,sBAAa,WAAe,eAAG,GAAM,QAAa;AAClD,sBAAa,WAAe,eAAG,GAAM,QAAa;AAC9D,WAAM;AACL,YAAgB,aAAqB;AAC1B,sBAAa,WAAM,QAAa;AAChC,sBAAa,WAAM,QAAa;AAC5C;AAED,WAAO,EAAE,GAAa,aAAG,GAC3B;AAAC;AAvBD,mCAuBC,yB","file":"mdc.dataTable.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@material/data-table\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"data-table\"] = factory();\n\telse\n\t\troot[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"data-table\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/mdc-data-table/index.ts\");\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {\n  CssVendorPropertyMap, JsVendorPropertyMap,\n  PrefixedCssPropertyName, PrefixedJsEventType,\n  StandardCssPropertyName, StandardJsEventType,\n} from './types';\n\nconst cssPropertyNameMap: CssVendorPropertyMap = {\n  animation: {\n    prefixed: '-webkit-animation',\n    standard: 'animation',\n  },\n  transform: {\n    prefixed: '-webkit-transform',\n    standard: 'transform',\n  },\n  transition: {\n    prefixed: '-webkit-transition',\n    standard: 'transition',\n  },\n};\n\nconst jsEventTypeMap: JsVendorPropertyMap = {\n  animationend: {\n    cssProperty: 'animation',\n    prefixed: 'webkitAnimationEnd',\n    standard: 'animationend',\n  },\n  animationiteration: {\n    cssProperty: 'animation',\n    prefixed: 'webkitAnimationIteration',\n    standard: 'animationiteration',\n  },\n  animationstart: {\n    cssProperty: 'animation',\n    prefixed: 'webkitAnimationStart',\n    standard: 'animationstart',\n  },\n  transitionend: {\n    cssProperty: 'transition',\n    prefixed: 'webkitTransitionEnd',\n    standard: 'transitionend',\n  },\n};\n\nfunction isWindow(windowObj: Window): boolean {\n  return Boolean(windowObj.document) && typeof windowObj.document.createElement === 'function';\n}\n\nexport function getCorrectPropertyName(windowObj: Window, cssProperty: StandardCssPropertyName):\n    StandardCssPropertyName | PrefixedCssPropertyName {\n  if (isWindow(windowObj) && cssProperty in cssPropertyNameMap) {\n    const el = windowObj.document.createElement('div');\n    const {standard, prefixed} = cssPropertyNameMap[cssProperty];\n    const isStandard = standard in el.style;\n    return isStandard ? standard : prefixed;\n  }\n  return cssProperty;\n}\n\nexport function getCorrectEventName(windowObj: Window, eventType: StandardJsEventType):\n    StandardJsEventType | PrefixedJsEventType {\n  if (isWindow(windowObj) && eventType in jsEventTypeMap) {\n    const el = windowObj.document.createElement('div');\n    const {standard, prefixed, cssProperty} = jsEventTypeMap[eventType];\n    const isStandard = cssProperty in el.style;\n    return isStandard ? standard : prefixed;\n  }\n  return eventType;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from './foundation';\nimport {CustomEventListener, EventType, SpecificEventListener} from './types';\n\nexport class MDCComponent<FoundationType extends MDCFoundation> {\n  static attachTo(root: Element): MDCComponent<MDCFoundation<{}>> {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation({}));\n  }\n\n  protected foundation: FoundationType;\n\n  constructor(\n      public root: Element, foundation?: FoundationType, ...args: unknown[]) {\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's\n    // default param so that this.root is defined and can be used within the\n    // foundation class.\n    this.foundation =\n        foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation.init();\n    this.initialSyncWithDOM();\n  }\n\n  /* istanbul ignore next: method param only exists for typing purposes; it does not need to be unit tested */\n  initialize(..._args: Array<unknown>) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  getDefaultFoundation(): FoundationType {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n        'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   */\n  listen<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  listen<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  listen(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.addEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   */\n  unlisten<K extends EventType>(\n    evtType: K, handler: SpecificEventListener<K>, options?: AddEventListenerOptions | boolean): void;\n  unlisten<E extends Event>(\n    evtType: string, handler: CustomEventListener<E>, options?: AddEventListenerOptions | boolean): void;\n  unlisten(evtType: string, handler: EventListener, options?: AddEventListenerOptions | boolean) {\n    this.root.removeEventListener(evtType, handler, options);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type, with the given data.\n   */\n  emit<T extends object>(evtType: string, evtData: T, shouldBubble = false) {\n    let evt: CustomEvent<T>;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent<T>(evtType, {\n        bubbles: shouldBubble,\n        detail: evtData,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root.dispatchEvent(evt);\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport class MDCFoundation<AdapterType extends {} = {}> {\n  static get cssClasses(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  static get strings(): { [key: string]: string } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  static get numbers(): { [key: string]: number } {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  static get defaultAdapter(): {} {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  constructor(protected adapter: AdapterType = {} as AdapterType) {}\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\n/**\n * The constructor for MDCFoundation.\n */\nexport interface MDCFoundationConstructor<AdapterType extends object = any> {\n  new(adapter: AdapterType): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * The deprecated constructor for MDCFoundation.\n */\nexport interface MDCFoundationDeprecatedConstructor<AdapterType extends object = any> {\n  readonly cssClasses: Record<string, string>;\n  readonly strings: Record<string, string>;\n  readonly numbers: Record<string, number>;\n  readonly defaultAdapter: AdapterType;\n\n  new(adapter?: Partial<AdapterType>): MDCFoundation<AdapterType>;\n  readonly prototype: MDCFoundation<AdapterType>;\n}\n\n/**\n * Retrieves the AdapaterType from the provided MDCFoundation generic type.\n */\nexport type MDCFoundationAdapter<T> =\n    T extends MDCFoundation<infer A>? A : never;\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {getCorrectEventName} from '@material/animation/util';\nimport {MDCComponent} from '@material/base/component';\nimport {applyPassive} from '@material/dom/events';\nimport {matches} from '@material/dom/ponyfill';\nimport {MDCRippleAdapter} from '@material/ripple/adapter';\nimport {MDCRipple} from '@material/ripple/component';\nimport {MDCRippleFoundation} from '@material/ripple/foundation';\nimport {MDCRippleCapableSurface} from '@material/ripple/types';\n\nimport {MDCCheckboxAdapter} from './adapter';\nimport {strings} from './constants';\nimport {MDCCheckboxFoundation} from './foundation';\n\n/**\n * This type is needed for compatibility with Closure Compiler.\n */\ntype PropertyDescriptorGetter = (() => unknown) | undefined;\n\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\nexport type MDCCheckboxFactory = (el: Element, foundation?: MDCCheckboxFoundation) => MDCCheckbox;\n\nexport class MDCCheckbox extends MDCComponent<MDCCheckboxFoundation> implements MDCRippleCapableSurface {\n  static override attachTo(root: Element) {\n    return new MDCCheckbox(root);\n  }\n\n  get ripple(): MDCRipple {\n    return this.rippleSurface;\n  }\n\n  get checked(): boolean {\n    return this.getNativeControl().checked;\n  }\n\n  set checked(checked: boolean) {\n    this.getNativeControl().checked = checked;\n  }\n\n  get indeterminate(): boolean {\n    return this.getNativeControl().indeterminate;\n  }\n\n  set indeterminate(indeterminate: boolean) {\n    this.getNativeControl().indeterminate = indeterminate;\n  }\n\n  get disabled(): boolean {\n    return this.getNativeControl().disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.foundation.setDisabled(disabled);\n  }\n\n  get value(): string {\n    return this.getNativeControl().value;\n  }\n\n  set value(value: string) {\n    this.getNativeControl().value = value;\n  }\n\n  private readonly rippleSurface: MDCRipple = this.createRipple();\n  private handleChange!: EventListener;  // assigned in initialSyncWithDOM()\n  private handleAnimationEnd!:\n      EventListener;  // assigned in initialSyncWithDOM()\n\n  override initialize() {\n    const {DATA_INDETERMINATE_ATTR} = strings;\n    this.getNativeControl().indeterminate =\n        this.getNativeControl().getAttribute(DATA_INDETERMINATE_ATTR) ===\n        'true';\n    this.getNativeControl().removeAttribute(DATA_INDETERMINATE_ATTR);\n  }\n\n  override initialSyncWithDOM() {\n    this.handleChange = () => {\n      this.foundation.handleChange();\n    };\n    this.handleAnimationEnd = () => {\n      this.foundation.handleAnimationEnd();\n    };\n    this.getNativeControl().addEventListener('change', this.handleChange);\n    this.listen(\n        getCorrectEventName(window, 'animationend'), this.handleAnimationEnd);\n    this.installPropertyChangeHooks();\n  }\n\n  override destroy() {\n    this.rippleSurface.destroy();\n    this.getNativeControl().removeEventListener('change', this.handleChange);\n    this.unlisten(\n        getCorrectEventName(window, 'animationend'), this.handleAnimationEnd);\n    this.uninstallPropertyChangeHooks();\n    super.destroy();\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCCheckboxAdapter = {\n      addClass: (className) => this.root.classList.add(className),\n      forceLayout: () => (this.root as HTMLElement).offsetWidth,\n      hasNativeControl: () => !!this.getNativeControl(),\n      isAttachedToDOM: () => Boolean(this.root.parentNode),\n      isChecked: () => this.checked,\n      isIndeterminate: () => this.indeterminate,\n      removeClass: (className) => {\n        this.root.classList.remove(className);\n      },\n      removeNativeControlAttr: (attr) => {\n        this.getNativeControl().removeAttribute(attr);\n      },\n      setNativeControlAttr: (attr, value) => {\n        this.getNativeControl().setAttribute(attr, value);\n      },\n      setNativeControlDisabled: (disabled) => {\n        this.getNativeControl().disabled = disabled;\n      },\n    };\n    return new MDCCheckboxFoundation(adapter);\n  }\n\n  private createRipple(): MDCRipple {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n    // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCRippleAdapter = {\n      ...MDCRipple.createAdapter(this),\n      deregisterInteractionHandler: (evtType, handler) => {\n        this.getNativeControl().removeEventListener(\n            evtType, handler, applyPassive());\n      },\n      isSurfaceActive: () => matches(this.getNativeControl(), ':active'),\n      isUnbounded: () => true,\n      registerInteractionHandler: (evtType, handler) => {\n        this.getNativeControl().addEventListener(\n            evtType, handler, applyPassive());\n      },\n    };\n    return new MDCRipple(this.root, new MDCRippleFoundation(adapter));\n  }\n\n  private installPropertyChangeHooks() {\n    const nativeCb = this.getNativeControl();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    for (const controlState of CB_PROTO_PROPS) {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (!validDescriptor(desc)) {\n        return;\n      }\n\n      // Type cast is needed for compatibility with Closure Compiler.\n      const nativeGetter = (desc as {get: PropertyDescriptorGetter}).get;\n\n      const nativeCbDesc = {\n        configurable: desc.configurable,\n        enumerable: desc.enumerable,\n        get: nativeGetter,\n        set: (state: boolean) => {\n          desc.set!.call(nativeCb, state);\n          this.foundation.handleChange();\n        },\n      };\n      Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n    }\n  }\n\n  private uninstallPropertyChangeHooks() {\n    const nativeCb = this.getNativeControl();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    for (const controlState of CB_PROTO_PROPS) {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      if (!validDescriptor(desc)) {\n        return;\n      }\n      Object.defineProperty(nativeCb, controlState, desc);\n    }\n  }\n\n  private getNativeControl(): HTMLInputElement {\n    const {NATIVE_CONTROL_SELECTOR} = strings;\n    const el =\n        this.root.querySelector<HTMLInputElement>(NATIVE_CONTROL_SELECTOR);\n    if (!el) {\n      throw new Error(`Checkbox component requires a ${NATIVE_CONTROL_SELECTOR} element`);\n    }\n    return el;\n  }\n}\n\nfunction validDescriptor(inputPropDesc: PropertyDescriptor | undefined): inputPropDesc is PropertyDescriptor {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const cssClasses = {\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  BACKGROUND: 'mdc-checkbox__background',\n  CHECKED: 'mdc-checkbox--checked',\n  CHECKMARK: 'mdc-checkbox__checkmark',\n  CHECKMARK_PATH: 'mdc-checkbox__checkmark-path',\n  DISABLED: 'mdc-checkbox--disabled',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  MIXEDMARK: 'mdc-checkbox__mixedmark',\n  NATIVE_CONTROL: 'mdc-checkbox__native-control',\n  ROOT: 'mdc-checkbox',\n  SELECTED: 'mdc-checkbox--selected',\n  UPGRADED: 'mdc-checkbox--upgraded',\n};\n\nexport const strings = {\n  ARIA_CHECKED_ATTR: 'aria-checked',\n  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed',\n  DATA_INDETERMINATE_ATTR: 'data-indeterminate',\n  NATIVE_CONTROL_SELECTOR: '.mdc-checkbox__native-control',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n};\n\nexport const numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {MDCCheckboxAdapter} from './adapter';\nimport {cssClasses, numbers, strings} from './constants';\n\nexport class MDCCheckboxFoundation extends MDCFoundation<MDCCheckboxAdapter> {\n  static override get cssClasses() {\n    return cssClasses;\n  }\n\n  static override get strings() {\n    return strings;\n  }\n\n  static override get numbers() {\n    return numbers;\n  }\n\n  static override get defaultAdapter(): MDCCheckboxAdapter {\n    return {\n      addClass: () => undefined,\n      forceLayout: () => undefined,\n      hasNativeControl: () => false,\n      isAttachedToDOM: () => false,\n      isChecked: () => false,\n      isIndeterminate: () => false,\n      removeClass: () => undefined,\n      removeNativeControlAttr: () => undefined,\n      setNativeControlAttr: () => undefined,\n      setNativeControlDisabled: () => undefined,\n    };\n  }\n\n  private currentCheckState = strings.TRANSITION_STATE_INIT;\n  private currentAnimationClass = '';\n  private animEndLatchTimer = 0;\n  private enableAnimationEndHandler = false;\n\n  constructor(adapter?: Partial<MDCCheckboxAdapter>) {\n    super({...MDCCheckboxFoundation.defaultAdapter, ...adapter});\n  }\n\n  override init() {\n    this.currentCheckState = this.determineCheckState();\n    this.updateAriaChecked();\n    this.adapter.addClass(cssClasses.UPGRADED);\n  }\n\n  override destroy() {\n    clearTimeout(this.animEndLatchTimer);\n  }\n\n  setDisabled(disabled: boolean) {\n    this.adapter.setNativeControlDisabled(disabled);\n    if (disabled) {\n      this.adapter.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    if (!this.enableAnimationEndHandler) {\n      return;\n    }\n\n    clearTimeout(this.animEndLatchTimer);\n\n    this.animEndLatchTimer = setTimeout(() => {\n      this.adapter.removeClass(this.currentAnimationClass);\n      this.enableAnimationEndHandler = false;\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState();\n  }\n\n  private transitionCheckState() {\n    if (!this.adapter.hasNativeControl()) {\n      return;\n    }\n    const oldState = this.currentCheckState;\n    const newState = this.determineCheckState();\n\n    if (oldState === newState) {\n      return;\n    }\n\n    this.updateAriaChecked();\n\n    const {TRANSITION_STATE_UNCHECKED} = strings;\n    const {SELECTED} = cssClasses;\n    if (newState === TRANSITION_STATE_UNCHECKED) {\n      this.adapter.removeClass(SELECTED);\n    } else {\n      this.adapter.addClass(SELECTED);\n    }\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass.length > 0) {\n      clearTimeout(this.animEndLatchTimer);\n      this.adapter.forceLayout();\n      this.adapter.removeClass(this.currentAnimationClass);\n    }\n\n    this.currentAnimationClass =\n        this.getTransitionAnimationClass(oldState, newState);\n    this.currentCheckState = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter.isAttachedToDOM() &&\n        this.currentAnimationClass.length > 0) {\n      this.adapter.addClass(this.currentAnimationClass);\n      this.enableAnimationEndHandler = true;\n    }\n  }\n\n  private determineCheckState(): string {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (this.adapter.isIndeterminate()) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return this.adapter.isChecked() ? TRANSITION_STATE_CHECKED :\n                                      TRANSITION_STATE_UNCHECKED;\n  }\n\n  private getTransitionAnimationClass(oldState: string, newState: string):\n      string {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n      case TRANSITION_STATE_INIT:\n        if (newState === TRANSITION_STATE_UNCHECKED) {\n          return '';\n        }\n        return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n      case TRANSITION_STATE_UNCHECKED:\n        return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n      case TRANSITION_STATE_CHECKED:\n        return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n      default: // TRANSITION_STATE_INDETERMINATE\n        return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  private updateAriaChecked() {\n    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.\n    if (this.adapter.isIndeterminate()) {\n      this.adapter.setNativeControlAttr(\n          strings.ARIA_CHECKED_ATTR, strings.ARIA_CHECKED_INDETERMINATE_VALUE);\n    } else {\n      // The on/off state does not need to keep track of aria-checked, since\n      // the screenreader uses the checked property on the checkbox element.\n      this.adapter.removeNativeControlAttr(strings.ARIA_CHECKED_ATTR);\n    }\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\nimport {SortValue} from './constants';\nimport {MDCDataTableRowSelectionChangedEventDetail, ProgressIndicatorStyles, RowClickEventData, SortActionEventDetail} from './types';\n\n/**\n * Defines the shape of the adapter expected by the foundation.\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n */\nexport interface MDCDataTableAdapter {\n  /**\n   * Adds CSS class name to root element.\n   *\n   * @param className CSS class name to add to root element.\n   */\n  addClass(className: string): void;\n\n  /**\n   * Removes CSS class name from root element.\n   *\n   * @param className CSS class name to add to root element.\n   */\n  removeClass(className: string): void;\n\n  /**\n   * Adds a class name to row element at given row index excluding header row.\n   *\n   * @param rowIndex Index of row element excluding header row.\n   * @param cssClasses CSS Class string to add.\n   */\n  addClassAtRowIndex(rowIndex: number, cssClasses: string): void;\n\n  /**\n   * @return Row count excluding header row.\n   */\n  getRowCount(): number;\n\n  /**\n   * @return Array of row elements excluding header row.\n   */\n  getRowElements(): Element[];\n\n  /**\n   * Returns row id of row element at given row index based on `data-row-id`\n   * attribute on row element `tr`.\n   *\n   * @param rowIndex Index of row element.\n   * @return Row id of row element, returns `null` in absence of `data-row-id`\n   *     attribute on row element.\n   */\n  getRowIdAtIndex(rowIndex: number): string|null;\n\n  /**\n   * Returns index of row element that contains give child element. Returns -1\n   * if element is not child of any row element.\n   *\n   * @param el Child element of row element.\n   * @return Index of row element.\n   */\n  getRowIndexByChildElement(el: Element): number;\n\n  /**\n   * @return Selected row count.\n   */\n  getSelectedRowCount(): number;\n\n  /**\n   * @param rowIndex Index of row element.\n   * @return True if row checkbox at given row index is checked.\n   */\n  isCheckboxAtRowIndexChecked(rowIndex: number): boolean;\n\n  /**\n   * @return True if header row checkbox is checked.\n   */\n  isHeaderRowCheckboxChecked(): boolean;\n\n  /**\n   * @return True if table rows are selectable.\n   */\n  isRowsSelectable(): boolean;\n\n  /**\n   * Notifies when row selection is changed.\n   *\n   * @param data Event detail data for row selection changed event.\n   */\n  notifyRowSelectionChanged(data: MDCDataTableRowSelectionChangedEventDetail):\n      void;\n\n  /**\n   * Notifies when header row is checked.\n   */\n  notifySelectedAll(): void;\n\n  /**\n   * Notifies when header row is unchecked.\n   */\n  notifyUnselectedAll(): void;\n\n  /**\n   * Notifies when data row is clicked.\n   */\n  notifyRowClick(detail: RowClickEventData): void;\n\n  /**\n   * Initializes header row checkbox. Destroys previous header row checkbox\n   * instance if any.\n   * @return Can return Promise only if registering checkbox is asynchronous.\n   */\n  registerHeaderRowCheckbox(): Promise<void>|void;\n\n  /**\n   * Initializes all row checkboxes. Destroys previous row checkbox instances if\n   * any. This is usually called when row checkboxes are added or removed from\n   * table.\n   * @return Can return Promise only if registering checkbox is asynchronous.\n   */\n  registerRowCheckboxes(): Promise<void>|void;\n\n  /**\n   * Removes class name from row element at give row index.\n   *\n   * @param rowIndex Index of row element excluding header row element.\n   * @param cssClasses Class name string.\n   */\n  removeClassAtRowIndex(rowIndex: number, cssClasses: string): void;\n\n  /**\n   * Sets attribute to row element at given row index.\n   *\n   * @param rowIndex Index of row element excluding header row element.\n   * @param attr Name of attribute.\n   * @param value Value of attribute.\n   */\n  setAttributeAtRowIndex(rowIndex: number, attr: string, value: string): void;\n\n  /**\n   * Sets header row checkbox checked or unchecked.\n   *\n   * @param checked True to set header row checkbox checked.\n   */\n  setHeaderRowCheckboxChecked(checked: boolean): void;\n\n  /**\n   * Sets header row checkbox to indeterminate.\n   *\n   * @param indeterminate True to set header row checkbox indeterminate.\n   */\n  setHeaderRowCheckboxIndeterminate(indeterminate: boolean): void;\n\n  /**\n   * Sets row checkbox to checked or unchecked at given row index.\n   *\n   * @param rowIndex Index of row element excluding header row element.\n   * @param checked True to set checked.\n   */\n  setRowCheckboxCheckedAtIndex(rowIndex: number, checked: boolean): void;\n\n  /**\n   * @return Total count of header cells.\n   */\n  getHeaderCellCount(): number;\n\n  /**\n   * @return Array of header cell elements.\n   */\n  getHeaderCellElements(): Element[];\n\n  /**\n   * @return Attribute value for given header cell index.\n   */\n  getAttributeByHeaderCellIndex(columnIndex: number, attribute: string): string\n      |null;\n\n  /**\n   * Sets attribute of a header cell by index.\n   */\n  setAttributeByHeaderCellIndex(\n      columnIndex: number, attribute: string, value: string): void;\n\n  /**\n   * Sets class name of a header cell by index.\n   */\n  setClassNameByHeaderCellIndex(columnIndex: number, className: string): void;\n\n  /**\n   * Removes a class name of a header cell by index.\n   */\n  removeClassNameByHeaderCellIndex(columnIndex: number, className: string):\n      void;\n\n  /**\n   * Notifies when column is sorted.\n   */\n  notifySortAction(data: SortActionEventDetail): void;\n\n  /**\n   * @return Returns computed styles height of table container element.\n   */\n  getTableContainerHeight(): number;\n\n  /**\n   * @return Returns computed styles height of table's header element.\n   */\n  getTableHeaderHeight(): number;\n\n  /**\n   * Sets progress indicator CSS styles to position it on top of table body.\n   */\n  setProgressIndicatorStyles(styles: ProgressIndicatorStyles): void;\n\n  /**\n   * Sets appropriate sort status label by header cell index. Skips setting sort\n   * status label if header cell is not sortable.\n   *\n   * Example status label to set for sortValue:\n   *\n   *   - `SortValue.ASCENDING`: 'Sorted in ascending order'\n   *   - `SortValue.DESCENDING`: 'Sorted in descending order'\n   *   - `SortValue.NONE`: '' (Empty string)\n   */\n  setSortStatusLabelByHeaderCellIndex(\n      columnIndex: number, sortValue: SortValue): void;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {SpecificEventListener} from '@material/base/types';\nimport {MDCCheckbox, MDCCheckboxFactory} from '@material/checkbox/component';\nimport {closest} from '@material/dom/ponyfill';\nimport {MDCLinearProgress} from '@material/linear-progress/component';\n\nimport {MDCDataTableAdapter} from './adapter';\nimport {cssClasses, dataAttributes, events, messages, selectors, SortValue} from './constants';\nimport {MDCDataTableFoundation} from './foundation';\nimport {MDCDataTableRowSelectionChangedEventDetail, RowClickEventData} from './types';\n\n/**\n * Implementation of `MDCDataTableFoundation`\n */\nexport class MDCDataTable extends MDCComponent<MDCDataTableFoundation> {\n  static override attachTo(root: Element): MDCDataTable {\n    return new MDCDataTable(root);\n  }\n\n  private headerRowCheckbox!: MDCCheckbox;\n  private rowCheckboxList!: MDCCheckbox[];\n  private checkboxFactory!: MDCCheckboxFactory;\n  private linearProgress!: MDCLinearProgress;\n  private headerRow!: HTMLElement;\n  private content!: HTMLElement;\n  private handleHeaderRowCheckboxChange!: SpecificEventListener<'change'>;\n  private handleRowCheckboxChange!: SpecificEventListener<'change'>;\n  private headerRowClickListener!:\n      SpecificEventListener<'click'>;  // Assigned in `initialSyncWithDOM()`\n  private handleContentClick!:\n      SpecificEventListener<'click'>;  // Assigned in `initialSyncWithDOM()`\n\n  override initialize(\n      checkboxFactory:\n          MDCCheckboxFactory = (el: Element) => new MDCCheckbox(el)) {\n    this.checkboxFactory = checkboxFactory;\n  }\n\n  override initialSyncWithDOM() {\n    this.headerRow =\n        this.root.querySelector(`.${cssClasses.HEADER_ROW}`) as HTMLElement;\n    this.handleHeaderRowCheckboxChange = () => {\n      this.foundation.handleHeaderRowCheckboxChange();\n    };\n    this.headerRow.addEventListener(\n        'change', this.handleHeaderRowCheckboxChange);\n\n    this.headerRowClickListener = (event) => {\n      this.handleHeaderRowClick(event);\n    };\n    this.headerRow.addEventListener('click', this.headerRowClickListener);\n\n\n    this.content =\n        this.root.querySelector(`.${cssClasses.CONTENT}`) as HTMLElement;\n    this.handleContentClick = (event) => {\n      const dataRowEl =\n          closest(event.target as Element, selectors.ROW) as HTMLElement;\n      if (!dataRowEl) return;\n\n      this.foundation.handleRowClick({\n        rowId: this.getRowIdByRowElement(dataRowEl),\n        row: dataRowEl,\n      });\n    };\n    this.content.addEventListener('click', this.handleContentClick);\n    this.handleRowCheckboxChange = (event) => {\n      this.foundation.handleRowCheckboxChange(event);\n    };\n    this.content.addEventListener('change', this.handleRowCheckboxChange);\n\n    this.layout();\n  }\n\n  /**\n   * Re-initializes header row checkbox and row checkboxes when selectable rows\n   * are added or removed from table.\n   */\n  layout() {\n    this.foundation.layout();\n  }\n\n  /**\n   * @return Returns array of header row cell elements.\n   */\n  getHeaderCells(): Element[] {\n    return [].slice.call(this.root.querySelectorAll(selectors.HEADER_CELL));\n  }\n\n  /**\n   * @return Returns array of row elements.\n   */\n  getRows(): Element[] {\n    return this.foundation.getRows();\n  }\n\n  /**\n   * @return Returns array of selected row ids.\n   */\n  getSelectedRowIds(): Array<string|null> {\n    return this.foundation.getSelectedRowIds();\n  }\n\n  /**\n   * Sets selected row ids. Overwrites previously selected rows.\n   * @param rowIds Array of row ids that needs to be selected.\n   */\n  setSelectedRowIds(rowIds: string[]) {\n    this.foundation.setSelectedRowIds(rowIds);\n  }\n\n  /**\n   * Shows progress indicator when data table is in loading state.\n   */\n  showProgress() {\n    this.getLinearProgress().open();\n    this.foundation.showProgress();\n  }\n\n  /**\n   * Hides progress indicator after data table is finished loading.\n   */\n  hideProgress() {\n    this.foundation.hideProgress();\n    this.getLinearProgress().close();\n  }\n\n  override destroy() {\n    if (this.handleHeaderRowCheckboxChange) {\n      this.headerRow.removeEventListener(\n          'change', this.handleHeaderRowCheckboxChange);\n    }\n    if (this.headerRowClickListener) {\n      this.headerRow.removeEventListener('click', this.headerRowClickListener);\n    }\n    if (this.handleRowCheckboxChange) {\n      this.content.removeEventListener('change', this.handleRowCheckboxChange);\n    }\n\n    if (this.headerRowCheckbox) {\n      this.headerRowCheckbox.destroy();\n    }\n    if (this.rowCheckboxList) {\n      for (const checkbox of this.rowCheckboxList) {\n        checkbox.destroy();\n      }\n    }\n    if (this.handleContentClick) {\n      this.content.removeEventListener('click', this.handleContentClick);\n    }\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n    const adapter: MDCDataTableAdapter = {\n      addClass: (className) => {\n        this.root.classList.add(className);\n      },\n      removeClass: (className) => {\n        this.root.classList.remove(className);\n      },\n      getHeaderCellElements: () => this.getHeaderCells(),\n      getHeaderCellCount: () => this.getHeaderCells().length,\n      getAttributeByHeaderCellIndex: (index, attribute) => {\n        return this.getHeaderCells()[index].getAttribute(attribute);\n      },\n      setAttributeByHeaderCellIndex: (index, attribute, value) => {\n        this.getHeaderCells()[index].setAttribute(attribute, value);\n      },\n      setClassNameByHeaderCellIndex: (index, className) => {\n        this.getHeaderCells()[index].classList.add(className);\n      },\n      removeClassNameByHeaderCellIndex: (index, className) => {\n        this.getHeaderCells()[index].classList.remove(className);\n      },\n      notifySortAction: (data) => {\n        this.emit(events.SORTED, data, /** shouldBubble */ true);\n      },\n      getTableContainerHeight: () => {\n        const tableContainer = this.root.querySelector<HTMLElement>(\n            `.${cssClasses.TABLE_CONTAINER}`);\n\n        if (!tableContainer) {\n          throw new Error('MDCDataTable: Table container element not found.');\n        }\n\n        return tableContainer.getBoundingClientRect().height;\n      },\n      getTableHeaderHeight: () => {\n        const tableHeader =\n            this.root.querySelector<HTMLElement>(selectors.HEADER_ROW);\n\n        if (!tableHeader) {\n          throw new Error('MDCDataTable: Table header element not found.');\n        }\n\n        return tableHeader.getBoundingClientRect().height;\n      },\n      setProgressIndicatorStyles: (styles) => {\n        const progressIndicator =\n            this.root.querySelector<HTMLElement>(selectors.PROGRESS_INDICATOR);\n\n        if (!progressIndicator) {\n          throw new Error(\n              'MDCDataTable: Progress indicator element not found.');\n        }\n\n        progressIndicator.style.setProperty('height', styles.height);\n        progressIndicator.style.setProperty('top', styles.top);\n      },\n      addClassAtRowIndex: (rowIndex: number, className: string) => {\n        this.getRows()[rowIndex].classList.add(className);\n      },\n      getRowCount: () => this.getRows().length,\n      getRowElements:\n          () => [].slice.call(this.root.querySelectorAll(selectors.ROW)),\n      getRowIdAtIndex: (rowIndex: number) =>\n          this.getRows()[rowIndex].getAttribute(dataAttributes.ROW_ID),\n      getRowIndexByChildElement: (el: Element) => {\n        return this.getRows().indexOf(\n            (closest(el, selectors.ROW) as HTMLElement));\n      },\n      getSelectedRowCount: () =>\n          this.root.querySelectorAll(selectors.ROW_SELECTED).length,\n      isCheckboxAtRowIndexChecked: (rowIndex: number) =>\n          this.rowCheckboxList[rowIndex].checked,\n      isHeaderRowCheckboxChecked: () => this.headerRowCheckbox.checked,\n      isRowsSelectable: () =>\n          !!this.root.querySelector(selectors.ROW_CHECKBOX) ||\n          !!this.root.querySelector(selectors.HEADER_ROW_CHECKBOX),\n      notifyRowSelectionChanged:\n          (data: MDCDataTableRowSelectionChangedEventDetail) => {\n            this.emit(\n                events.ROW_SELECTION_CHANGED, {\n                  row: this.getRowByIndex(data.rowIndex),\n                  rowId: this.getRowIdByIndex(data.rowIndex),\n                  rowIndex: data.rowIndex,\n                  selected: data.selected,\n                },\n                /** shouldBubble */ true);\n          },\n      notifySelectedAll: () => {\n        this.emit(events.SELECTED_ALL, {}, /** shouldBubble */ true);\n      },\n      notifyUnselectedAll: () => {\n        this.emit(events.UNSELECTED_ALL, {}, /** shouldBubble */ true);\n      },\n      notifyRowClick: (data: RowClickEventData) => {\n        this.emit(events.ROW_CLICK, data, /** shouldBubble */ true);\n      },\n      registerHeaderRowCheckbox: () => {\n        if (this.headerRowCheckbox) {\n          this.headerRowCheckbox.destroy();\n        }\n\n        const checkboxEl =\n            (this.root.querySelector(selectors.HEADER_ROW_CHECKBOX) as\n             HTMLElement);\n        this.headerRowCheckbox = this.checkboxFactory(checkboxEl);\n      },\n      registerRowCheckboxes: () => {\n        if (this.rowCheckboxList) {\n          this.rowCheckboxList.forEach((checkbox) => {\n            checkbox.destroy();\n          });\n        }\n\n        this.rowCheckboxList = [];\n        this.getRows().forEach((rowEl) => {\n          const checkbox = this.checkboxFactory(\n              (rowEl.querySelector(selectors.ROW_CHECKBOX) as HTMLElement));\n          this.rowCheckboxList.push(checkbox);\n        });\n      },\n      removeClassAtRowIndex: (rowIndex: number, className: string) => {\n        this.getRows()[rowIndex].classList.remove(className);\n      },\n      setAttributeAtRowIndex:\n          (rowIndex: number, attr: string, value: string) => {\n            this.getRows()[rowIndex].setAttribute(attr, value);\n          },\n      setHeaderRowCheckboxChecked: (checked: boolean) => {\n        this.headerRowCheckbox.checked = checked;\n      },\n      setHeaderRowCheckboxIndeterminate: (indeterminate: boolean) => {\n        this.headerRowCheckbox.indeterminate = indeterminate;\n      },\n      setRowCheckboxCheckedAtIndex: (rowIndex: number, checked: boolean) => {\n        this.rowCheckboxList[rowIndex].checked = checked;\n      },\n      setSortStatusLabelByHeaderCellIndex: (\n          columnIndex: number, sortValue: SortValue) => {\n        const headerCell = this.getHeaderCells()[columnIndex];\n        const sortStatusLabel =\n            headerCell.querySelector<HTMLElement>(selectors.SORT_STATUS_LABEL);\n\n        if (!sortStatusLabel) return;\n\n        sortStatusLabel.textContent =\n            this.getSortStatusMessageBySortValue(sortValue);\n      },\n    };\n    return new MDCDataTableFoundation(adapter);\n  }\n\n  private getRowByIndex(index: number): Element {\n    return this.getRows()[index];\n  }\n\n  private getRowIdByIndex(index: number): string|null {\n    return this.getRowByIndex(index).getAttribute(dataAttributes.ROW_ID);\n  }\n\n  private handleHeaderRowClick(event: Event): void {\n    const headerCell =\n        closest(event.target as Element, selectors.HEADER_CELL_WITH_SORT) as\n        HTMLElement;\n\n    if (!headerCell) {\n      return;\n    }\n\n    const columnId = headerCell.getAttribute(dataAttributes.COLUMN_ID);\n    const columnIndex = this.getHeaderCells().indexOf(headerCell);\n    if (columnIndex === -1) {\n      return;\n    }\n\n    this.foundation.handleSortAction({columnId, columnIndex, headerCell});\n  }\n\n  private getSortStatusMessageBySortValue(sortValue: SortValue): string {\n    switch (sortValue) {\n      case SortValue.ASCENDING:\n        return messages.SORTED_IN_ASCENDING;\n      case SortValue.DESCENDING:\n        return messages.SORTED_IN_DESCENDING;\n      default:\n        return '';\n    }\n  }\n\n  private getLinearProgressElement(): HTMLElement {\n    const el =\n        this.root.querySelector<HTMLElement>(`.${cssClasses.LINEAR_PROGRESS}`);\n    if (!el) {\n      throw new Error('MDCDataTable: linear progress element is not found.');\n    }\n\n    return el;\n  }\n\n  private getLinearProgress(): MDCLinearProgress {\n    if (!this.linearProgress) {\n      const el = this.getLinearProgressElement();\n      this.linearProgress = new MDCLinearProgress(el);\n    }\n\n    return this.linearProgress;\n  }\n\n  private getRowIdByRowElement(rowElement: HTMLElement): string|null {\n    return rowElement.getAttribute(dataAttributes.ROW_ID);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * CSS class names used in component.\n */\nexport const cssClasses = {\n  CELL: 'mdc-data-table__cell',\n  CELL_NUMERIC: 'mdc-data-table__cell--numeric',\n  CONTENT: 'mdc-data-table__content',\n  HEADER_CELL: 'mdc-data-table__header-cell',\n  HEADER_CELL_LABEL: 'mdc-data-table__header-cell-label',\n  HEADER_CELL_SORTED: 'mdc-data-table__header-cell--sorted',\n  HEADER_CELL_SORTED_DESCENDING:\n      'mdc-data-table__header-cell--sorted-descending',\n  HEADER_CELL_WITH_SORT: 'mdc-data-table__header-cell--with-sort',\n  HEADER_CELL_WRAPPER: 'mdc-data-table__header-cell-wrapper',\n  HEADER_ROW: 'mdc-data-table__header-row',\n  HEADER_ROW_CHECKBOX: 'mdc-data-table__header-row-checkbox',\n  IN_PROGRESS: 'mdc-data-table--in-progress',\n  LINEAR_PROGRESS: 'mdc-data-table__linear-progress',\n  PAGINATION_ROWS_PER_PAGE_LABEL:\n      'mdc-data-table__pagination-rows-per-page-label',\n  PAGINATION_ROWS_PER_PAGE_SELECT:\n      'mdc-data-table__pagination-rows-per-page-select',\n  PROGRESS_INDICATOR: 'mdc-data-table__progress-indicator',\n  ROOT: 'mdc-data-table',\n  ROW: 'mdc-data-table__row',\n  ROW_CHECKBOX: 'mdc-data-table__row-checkbox',\n  ROW_SELECTED: 'mdc-data-table__row--selected',\n  SORT_ICON_BUTTON: 'mdc-data-table__sort-icon-button',\n  SORT_STATUS_LABEL: 'mdc-data-table__sort-status-label',\n  TABLE_CONTAINER: 'mdc-data-table__table-container',\n};\n\n/**\n * DOM attributes used in component.\n */\nexport const attributes = {\n  ARIA_SELECTED: 'aria-selected',\n  ARIA_SORT: 'aria-sort',\n};\n\n/**\n * List of data attributes used in component.\n */\nexport const dataAttributes = {\n  COLUMN_ID: 'data-column-id',\n  ROW_ID: 'data-row-id',\n};\n\n/**\n * CSS selectors used in component.\n */\nexport const selectors = {\n  CONTENT: `.${cssClasses.CONTENT}`,\n  HEADER_CELL: `.${cssClasses.HEADER_CELL}`,\n  HEADER_CELL_WITH_SORT: `.${cssClasses.HEADER_CELL_WITH_SORT}`,\n  HEADER_ROW: `.${cssClasses.HEADER_ROW}`,\n  HEADER_ROW_CHECKBOX: `.${cssClasses.HEADER_ROW_CHECKBOX}`,\n  PROGRESS_INDICATOR: `.${cssClasses.PROGRESS_INDICATOR}`,\n  ROW: `.${cssClasses.ROW}`,\n  ROW_CHECKBOX: `.${cssClasses.ROW_CHECKBOX}`,\n  ROW_SELECTED: `.${cssClasses.ROW_SELECTED}`,\n  SORT_ICON_BUTTON: `.${cssClasses.SORT_ICON_BUTTON}`,\n  SORT_STATUS_LABEL: `.${cssClasses.SORT_STATUS_LABEL}`,\n};\n\n/**\n * Messages used in component.\n */\nexport const messages = {\n  SORTED_IN_DESCENDING: 'Sorted in descending order',\n  SORTED_IN_ASCENDING: 'Sorted in ascending order',\n};\n\n/**\n * Attributes and selectors used in component.\n * @deprecated Use `attributes`, `dataAttributes` and `selectors` instead.\n */\nexport const strings = {\n  ARIA_SELECTED: attributes.ARIA_SELECTED,\n  ARIA_SORT: attributes.ARIA_SORT,\n  DATA_ROW_ID_ATTR: dataAttributes.ROW_ID,\n  HEADER_ROW_CHECKBOX_SELECTOR: selectors.HEADER_ROW_CHECKBOX,\n  ROW_CHECKBOX_SELECTOR: selectors.ROW_CHECKBOX,\n  ROW_SELECTED_SELECTOR: selectors.ROW_SELECTED,\n  ROW_SELECTOR: selectors.ROW,\n};\n\n/**\n * Sort values defined by ARIA.\n * See https://www.w3.org/WAI/PF/aria/states_and_properties#aria-sort\n */\nexport enum SortValue {\n  // Items are sorted in ascending order by this column.\n  ASCENDING = 'ascending',\n\n  // Items are sorted in descending order by this column.\n  DESCENDING = 'descending',\n\n  // There is no defined sort applied to the column.\n  NONE = 'none',\n\n  // A sort algorithm other than ascending or descending has been applied.\n  OTHER = 'other',\n}\n\n/**\n * Event names used in component.\n */\nexport const events = {\n  ROW_CLICK: 'MDCDataTable:rowClick',\n  ROW_SELECTION_CHANGED: 'MDCDataTable:rowSelectionChanged',\n  SELECTED_ALL: 'MDCDataTable:selectedAll',\n  SORTED: 'MDCDataTable:sorted',\n  UNSELECTED_ALL: 'MDCDataTable:unselectedAll',\n};\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\n\nimport {MDCDataTableAdapter} from './adapter';\nimport {cssClasses, SortValue, strings} from './constants';\nimport {RowClickEventData, SortActionEventData} from './types';\n\n/**\n * The Foundation of data table component containing pure business logic, any\n * logic requiring DOM manipulation are delegated to adapter methods.\n */\nexport class MDCDataTableFoundation extends MDCFoundation<MDCDataTableAdapter> {\n  static override get defaultAdapter(): MDCDataTableAdapter {\n    return {\n      addClass: () => undefined,\n      addClassAtRowIndex: () => undefined,\n      getAttributeByHeaderCellIndex: () => '',\n      getHeaderCellCount: () => 0,\n      getHeaderCellElements: () => [],\n      getRowCount: () => 0,\n      getRowElements: () => [],\n      getRowIdAtIndex: () => '',\n      getRowIndexByChildElement: () => 0,\n      getSelectedRowCount: () => 0,\n      getTableContainerHeight: () => 0,\n      getTableHeaderHeight: () => 0,\n      isCheckboxAtRowIndexChecked: () => false,\n      isHeaderRowCheckboxChecked: () => false,\n      isRowsSelectable: () => false,\n      notifyRowSelectionChanged: () => undefined,\n      notifySelectedAll: () => undefined,\n      notifySortAction: () => undefined,\n      notifyUnselectedAll: () => undefined,\n      notifyRowClick: () => undefined,\n      registerHeaderRowCheckbox: () => undefined,\n      registerRowCheckboxes: () => undefined,\n      removeClass: () => undefined,\n      removeClassAtRowIndex: () => undefined,\n      removeClassNameByHeaderCellIndex: () => undefined,\n      setAttributeAtRowIndex: () => undefined,\n      setAttributeByHeaderCellIndex: () => undefined,\n      setClassNameByHeaderCellIndex: () => undefined,\n      setHeaderRowCheckboxChecked: () => undefined,\n      setHeaderRowCheckboxIndeterminate: () => undefined,\n      setProgressIndicatorStyles: () => undefined,\n      setRowCheckboxCheckedAtIndex: () => undefined,\n      setSortStatusLabelByHeaderCellIndex: () => undefined,\n    };\n  }\n\n  constructor(adapter?: Partial<MDCDataTableAdapter>) {\n    super({...MDCDataTableFoundation.defaultAdapter, ...adapter});\n  }\n\n  /**\n   * Re-initializes header row checkbox and row checkboxes when selectable rows\n   * are added or removed from table. Use this if registering checkbox is\n   * synchronous.\n   */\n  layout() {\n    if (this.adapter.isRowsSelectable()) {\n      this.adapter.registerHeaderRowCheckbox();\n      this.adapter.registerRowCheckboxes();\n\n      this.setHeaderRowCheckboxState();\n    }\n  }\n\n  /**\n   * Re-initializes header row checkbox and row checkboxes when selectable rows\n   * are added or removed from table. Use this if registering checkbox is\n   * asynchronous.\n   */\n  async layoutAsync(): Promise<void> {\n    if (this.adapter.isRowsSelectable()) {\n      await this.adapter.registerHeaderRowCheckbox();\n      await this.adapter.registerRowCheckboxes();\n\n      this.setHeaderRowCheckboxState();\n    }\n  }\n\n  /**\n   * @return Returns array of row elements.\n   */\n  getRows(): Element[] {\n    return this.adapter.getRowElements();\n  }\n\n  /**\n   * @return Array of header cell elements.\n   */\n  getHeaderCells(): Element[] {\n    return this.adapter.getHeaderCellElements();\n  }\n\n  /**\n   * Sets selected row ids. Overwrites previously selected rows.\n   * @param rowIds Array of row ids that needs to be selected.\n   */\n  setSelectedRowIds(rowIds: string[]) {\n    for (let rowIndex = 0; rowIndex < this.adapter.getRowCount(); rowIndex++) {\n      const rowId = this.adapter.getRowIdAtIndex(rowIndex);\n\n      let isSelected = false;\n      if (rowId && rowIds.indexOf(rowId) >= 0) {\n        isSelected = true;\n      }\n\n      this.adapter.setRowCheckboxCheckedAtIndex(rowIndex, isSelected);\n      this.selectRowAtIndex(rowIndex, isSelected);\n    }\n\n    this.setHeaderRowCheckboxState();\n  }\n\n  /**\n   * @return Returns array of all row ids.\n   */\n  getRowIds(): Array<string|null> {\n    const rowIds = [];\n    for (let rowIndex = 0; rowIndex < this.adapter.getRowCount(); rowIndex++) {\n      rowIds.push(this.adapter.getRowIdAtIndex(rowIndex));\n    }\n\n    return rowIds;\n  }\n\n  /**\n   * @return Returns array of selected row ids.\n   */\n  getSelectedRowIds(): Array<string|null> {\n    const selectedRowIds: Array<string|null> = [];\n    for (let rowIndex = 0; rowIndex < this.adapter.getRowCount(); rowIndex++) {\n      if (this.adapter.isCheckboxAtRowIndexChecked(rowIndex)) {\n        selectedRowIds.push(this.adapter.getRowIdAtIndex(rowIndex));\n      }\n    }\n\n    return selectedRowIds;\n  }\n\n  /**\n   * Handles header row checkbox change event.\n   */\n  handleHeaderRowCheckboxChange() {\n    const isHeaderChecked = this.adapter.isHeaderRowCheckboxChecked();\n\n    for (let rowIndex = 0; rowIndex < this.adapter.getRowCount(); rowIndex++) {\n      this.adapter.setRowCheckboxCheckedAtIndex(rowIndex, isHeaderChecked);\n      this.selectRowAtIndex(rowIndex, isHeaderChecked);\n    }\n\n    if (isHeaderChecked) {\n      this.adapter.notifySelectedAll();\n    } else {\n      this.adapter.notifyUnselectedAll();\n    }\n  }\n\n  /**\n   * Handles change event originated from row checkboxes.\n   */\n  handleRowCheckboxChange(event: Event) {\n    const rowIndex = this.adapter.getRowIndexByChildElement(\n        event.target as HTMLInputElement);\n\n    if (rowIndex === -1) {\n      return;\n    }\n\n    const selected = this.adapter.isCheckboxAtRowIndexChecked(rowIndex);\n\n    this.selectRowAtIndex(rowIndex, selected);\n    this.setHeaderRowCheckboxState();\n\n    const rowId = this.adapter.getRowIdAtIndex(rowIndex);\n    this.adapter.notifyRowSelectionChanged({rowId, rowIndex, selected});\n  }\n\n  /**\n   * Handles sort action on sortable header cell.\n   */\n  handleSortAction(eventData: SortActionEventData) {\n    const {columnId, columnIndex, headerCell} = eventData;\n\n    // Reset sort attributes / classes on other header cells.\n    for (let index = 0; index < this.adapter.getHeaderCellCount(); index++) {\n      if (index === columnIndex) {\n        continue;\n      }\n\n      this.adapter.removeClassNameByHeaderCellIndex(\n          index, cssClasses.HEADER_CELL_SORTED);\n      this.adapter.removeClassNameByHeaderCellIndex(\n          index, cssClasses.HEADER_CELL_SORTED_DESCENDING);\n      this.adapter.setAttributeByHeaderCellIndex(\n          index, strings.ARIA_SORT, SortValue.NONE);\n      this.adapter.setSortStatusLabelByHeaderCellIndex(index, SortValue.NONE);\n    }\n\n    // Set appropriate sort attributes / classes on target header cell.\n    this.adapter.setClassNameByHeaderCellIndex(\n        columnIndex, cssClasses.HEADER_CELL_SORTED);\n\n    const currentSortValue = this.adapter.getAttributeByHeaderCellIndex(\n        columnIndex, strings.ARIA_SORT);\n    let sortValue = SortValue.NONE;\n\n    // Set to descending if sorted on ascending order.\n    if (currentSortValue === SortValue.ASCENDING) {\n      this.adapter.setClassNameByHeaderCellIndex(\n          columnIndex, cssClasses.HEADER_CELL_SORTED_DESCENDING);\n      this.adapter.setAttributeByHeaderCellIndex(\n          columnIndex, strings.ARIA_SORT, SortValue.DESCENDING);\n      sortValue = SortValue.DESCENDING;\n      // Set to ascending if sorted on descending order.\n    } else if (currentSortValue === SortValue.DESCENDING) {\n      this.adapter.removeClassNameByHeaderCellIndex(\n          columnIndex, cssClasses.HEADER_CELL_SORTED_DESCENDING);\n      this.adapter.setAttributeByHeaderCellIndex(\n          columnIndex, strings.ARIA_SORT, SortValue.ASCENDING);\n      sortValue = SortValue.ASCENDING;\n    } else {\n      // Set to ascending by default when not sorted.\n      this.adapter.setAttributeByHeaderCellIndex(\n          columnIndex, strings.ARIA_SORT, SortValue.ASCENDING);\n      sortValue = SortValue.ASCENDING;\n    }\n\n    this.adapter.setSortStatusLabelByHeaderCellIndex(columnIndex, sortValue);\n\n    this.adapter.notifySortAction({\n      columnId,\n      columnIndex,\n      headerCell,\n      sortValue,\n    });\n  }\n\n  /**\n   * Handles data table row click event.\n   */\n  handleRowClick({rowId, row}: RowClickEventData) {\n    this.adapter.notifyRowClick({\n      rowId,\n      row,\n    });\n  }\n\n  /**\n   * Shows progress indicator blocking only the table body content when in\n   * loading state.\n   */\n  showProgress() {\n    const tableHeaderHeight = this.adapter.getTableHeaderHeight();\n    // Calculate the height of table content (Not scroll content) excluding\n    // header row height.\n    const height = this.adapter.getTableContainerHeight() - tableHeaderHeight;\n    const top = tableHeaderHeight;\n\n    this.adapter.setProgressIndicatorStyles({\n      height: `${height}px`,\n      top: `${top}px`,\n    });\n    this.adapter.addClass(cssClasses.IN_PROGRESS);\n  }\n\n  /**\n   * Hides progress indicator when data table is finished loading.\n   */\n  hideProgress() {\n    this.adapter.removeClass(cssClasses.IN_PROGRESS);\n  }\n\n  /**\n   * Updates header row checkbox state based on number of rows selected.\n   */\n  private setHeaderRowCheckboxState() {\n    if (this.adapter.getSelectedRowCount() === 0) {\n      this.adapter.setHeaderRowCheckboxChecked(false);\n      this.adapter.setHeaderRowCheckboxIndeterminate(false);\n    } else if (\n        this.adapter.getSelectedRowCount() === this.adapter.getRowCount()) {\n      this.adapter.setHeaderRowCheckboxChecked(true);\n      this.adapter.setHeaderRowCheckboxIndeterminate(false);\n    } else {\n      this.adapter.setHeaderRowCheckboxIndeterminate(true);\n      this.adapter.setHeaderRowCheckboxChecked(false);\n    }\n  }\n\n  /**\n   * Sets the attributes of row element based on selection state.\n   */\n  private selectRowAtIndex(rowIndex: number, selected: boolean) {\n    if (selected) {\n      this.adapter.addClassAtRowIndex(rowIndex, cssClasses.ROW_SELECTED);\n      this.adapter.setAttributeAtRowIndex(\n          rowIndex, strings.ARIA_SELECTED, 'true');\n    } else {\n      this.adapter.removeClassAtRowIndex(rowIndex, cssClasses.ROW_SELECTED);\n      this.adapter.setAttributeAtRowIndex(\n          rowIndex, strings.ARIA_SELECTED, 'false');\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport * from './adapter';\nexport * from './component';\nexport * from './foundation';\nexport * from './constants';\nexport * from './types';\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {SortValue} from './constants';\n\nexport interface MDCDataTableRowSelectionChangedEventDetail {\n  rowIndex: number;\n  rowId: string|null;\n  selected: boolean;\n}\n\n/**\n * Event data required for sort action callback - `handleSortAction()`.\n * Component must send this data to foundation when sort action triggered on\n * sortable header cell.\n */\nexport interface SortActionEventData {\n  columnId: string|null;\n  columnIndex: number;\n  headerCell: HTMLElement;\n}\n\n/**\n * Event detail triggered by foundation on sort action. This event detail is\n * used to trigger DOM event by component.\n */\nexport interface SortActionEventDetail {\n  columnId: string|null;\n  columnIndex: number;\n  headerCell: HTMLElement;\n  sortValue: SortValue;\n}\n\n/**\n * Event data used for data table row click action.\n */\nexport interface RowClickEventData {\n  rowId: string|null;\n  row: HTMLElement;\n}\n\nexport interface RowClickEventDetail extends RowClickEventData {}\n;\n\n/**\n * Styles used to dynamically set dimensions of progress indicator based on\n * table header & body.\n */\nexport interface ProgressIndicatorStyles {\n  height: string;\n  top: string;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Determine whether the current browser supports passive event listeners, and\n * if so, use them.\n */\nexport function applyPassive(globalObj: Window = window):\n    boolean | EventListenerOptions {\n  return supportsPassiveOption(globalObj) ?\n      {passive: true} as AddEventListenerOptions :\n      false;\n}\n\nfunction supportsPassiveOption(globalObj: Window = window): boolean {\n  // See\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n  let passiveSupported = false;\n\n  try {\n    const options = {\n      // This function will be called when the browser\n      // attempts to access the passive property.\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n\n    const handler = () => {};\n    globalObj.document.addEventListener('test', handler, options);\n    globalObj.document.removeEventListener(\n        'test', handler, options as EventListenerOptions);\n  } catch (err) {\n    passiveSupported = false;\n  }\n\n  return passiveSupported;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\n\nexport function closest(element: Element, selector: string): Element | null {\n  if (element.closest) {\n    return element.closest(selector);\n  }\n\n  let el: Element | null = element;\n  while (el) {\n    if (matches(el, selector)) {\n      return el;\n    }\n    el = el.parentElement;\n  }\n  return null;\n}\n\nexport function matches(element: Element, selector: string): boolean {\n  const nativeMatches = element.matches\n      || element.webkitMatchesSelector\n      || (element as any).msMatchesSelector;\n  return nativeMatches.call(element, selector);\n}\n\n/**\n * Used to compute the estimated scroll width of elements. When an element is\n * hidden due to display: none; being applied to a parent element, the width is\n * returned as 0. However, the element will have a true width once no longer\n * inside a display: none context. This method computes an estimated width when\n * the element is hidden or returns the true width when the element is visble.\n * @param {Element} element the element whose width to estimate\n */\nexport function estimateScrollWidth(element: Element): number {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element as HTMLElement;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n\n  const clone = htmlEl.cloneNode(true) as HTMLElement;\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  document.documentElement.removeChild(clone);\n  return scrollWidth;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {MDCProgressIndicator} from '@material/progress-indicator/component';\nimport {MDCLinearProgressAdapter} from './adapter';\nimport {MDCLinearProgressFoundation} from './foundation';\nimport {WithMDCResizeObserver} from './types';\n\nexport class MDCLinearProgress extends\n    MDCComponent<MDCLinearProgressFoundation> implements MDCProgressIndicator {\n  static override attachTo(root: Element) {\n    return new MDCLinearProgress(root);\n  }\n\n  set determinate(value: boolean) {\n    this.foundation.setDeterminate(value);\n  }\n\n  set progress(value: number) {\n    this.foundation.setProgress(value);\n  }\n\n  set buffer(value: number) {\n    this.foundation.setBuffer(value);\n  }\n\n  open() {\n    this.foundation.open();\n  }\n\n  close() {\n    this.foundation.close();\n  }\n\n  override initialSyncWithDOM() {\n    this.root.addEventListener('transitionend', () => {\n      this.foundation.handleTransitionEnd();\n    });\n  }\n\n  override getDefaultFoundation() {\n    // DO NOT INLINE this variable. For backward compatibility, foundations take\n    // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n    // methods, we need a separate, strongly typed adapter variable.\n    const adapter: MDCLinearProgressAdapter = {\n      addClass: (className: string) => {\n        this.root.classList.add(className);\n      },\n      forceLayout: () => {\n        this.root.getBoundingClientRect();\n      },\n      setBufferBarStyle: (styleProperty: string, value: string) => {\n        const bufferBar = this.root.querySelector<HTMLElement>(\n            MDCLinearProgressFoundation.strings.BUFFER_BAR_SELECTOR);\n        if (bufferBar) {\n          bufferBar.style.setProperty(styleProperty, value);\n        }\n      },\n      setPrimaryBarStyle: (styleProperty: string, value: string) => {\n        const primaryBar = this.root.querySelector<HTMLElement>(\n            MDCLinearProgressFoundation.strings.PRIMARY_BAR_SELECTOR);\n        if (primaryBar) {\n          primaryBar.style.setProperty(styleProperty, value);\n        }\n      },\n      hasClass: (className: string) => this.root.classList.contains(className),\n      removeAttribute: (attributeName: string) => {\n        this.root.removeAttribute(attributeName);\n      },\n      removeClass: (className: string) => {\n        this.root.classList.remove(className);\n      },\n      setAttribute: (attributeName: string, value: string) => {\n        this.root.setAttribute(attributeName, value);\n      },\n      setStyle: (name: string, value: string) => {\n        (this.root as HTMLElement).style.setProperty(name, value);\n      },\n      attachResizeObserver: (callback) => {\n        const RO = (window as unknown as WithMDCResizeObserver).ResizeObserver;\n        if (RO) {\n          const ro = new RO(callback);\n          ro.observe(this.root);\n          return ro;\n        }\n\n        return null;\n      },\n      getWidth: () => (this.root as HTMLElement).offsetWidth,\n    };\n    return new MDCLinearProgressFoundation(adapter);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const cssClasses = {\n  CLOSED_CLASS: 'mdc-linear-progress--closed',\n  CLOSED_ANIMATION_OFF_CLASS: 'mdc-linear-progress--closed-animation-off',\n  INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',\n  REVERSED_CLASS: 'mdc-linear-progress--reversed',\n  ANIMATION_READY_CLASS: 'mdc-linear-progress--animation-ready',\n};\n\nexport const strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ARIA_VALUEMAX: 'aria-valuemax',\n  ARIA_VALUEMIN: 'aria-valuemin',\n  ARIA_VALUENOW: 'aria-valuenow',\n  BUFFER_BAR_SELECTOR: '.mdc-linear-progress__buffer-bar',\n  FLEX_BASIS: 'flex-basis',\n  PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',\n};\n\n// these are percentages pulled from keyframes.scss\nexport const animationDimensionPercentages = {\n  PRIMARY_HALF: .8367142,\n  PRIMARY_FULL: 2.00611057,\n  SECONDARY_QUARTER: .37651913,\n  SECONDARY_HALF: .84386165,\n  SECONDARY_FULL: 1.60277782,\n};\n","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {getCorrectPropertyName} from '@material/animation/util';\nimport {MDCFoundation} from '@material/base/foundation';\nimport {MDCProgressIndicatorFoundation} from '@material/progress-indicator/foundation';\n\nimport {MDCLinearProgressAdapter} from './adapter';\nimport {animationDimensionPercentages as percents, cssClasses, strings} from './constants';\nimport {MDCResizeObserver} from './types';\n\nexport class MDCLinearProgressFoundation extends\n    MDCFoundation<MDCLinearProgressAdapter> implements\n        MDCProgressIndicatorFoundation {\n  static override get cssClasses() {\n    return cssClasses;\n  }\n\n  static override get strings() {\n    return strings;\n  }\n\n  static override get defaultAdapter(): MDCLinearProgressAdapter {\n    return {\n      addClass: () => undefined,\n      attachResizeObserver: () => null,\n      forceLayout: () => undefined,\n      getWidth: () => 0,\n      hasClass: () => false,\n      setBufferBarStyle: () => null,\n      setPrimaryBarStyle: () => null,\n      setStyle: () => undefined,\n      removeAttribute: () => undefined,\n      removeClass: () => undefined,\n      setAttribute: () => undefined,\n    };\n  }\n\n  private determinate!: boolean;\n  private progress!: number;\n  private buffer!: number;\n  private observer: MDCResizeObserver|null = null;\n\n  constructor(adapter?: Partial<MDCLinearProgressAdapter>) {\n    super({...MDCLinearProgressFoundation.defaultAdapter, ...adapter});\n  }\n\n  override init() {\n    this.determinate = !this.adapter.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);\n    this.progress = 0;\n    this.buffer = 1;\n\n    this.observer = this.adapter.attachResizeObserver((entries) => {\n      if (this.determinate) {\n        return;\n      }\n\n      for (const entry of entries) {\n        if (entry.contentRect) {\n          this.calculateAndSetDimensions(entry.contentRect.width);\n        }\n      }\n    });\n\n    if (!this.determinate && this.observer) {\n      this.calculateAndSetDimensions(this.adapter.getWidth());\n    }\n  }\n\n  setDeterminate(isDeterminate: boolean) {\n    this.determinate = isDeterminate;\n\n    if (this.determinate) {\n      this.adapter.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.adapter.setAttribute(\n          strings.ARIA_VALUENOW, this.progress.toString());\n      this.adapter.setAttribute(strings.ARIA_VALUEMAX, '1');\n      this.adapter.setAttribute(strings.ARIA_VALUEMIN, '0');\n      this.setPrimaryBarProgress(this.progress);\n      this.setBufferBarProgress(this.buffer);\n\n      return;\n    }\n\n    if (this.observer) {\n      this.calculateAndSetDimensions(this.adapter.getWidth());\n    }\n\n    this.adapter.addClass(cssClasses.INDETERMINATE_CLASS);\n    this.adapter.removeAttribute(strings.ARIA_VALUENOW);\n    this.adapter.removeAttribute(strings.ARIA_VALUEMAX);\n    this.adapter.removeAttribute(strings.ARIA_VALUEMIN);\n    this.setPrimaryBarProgress(1);\n    this.setBufferBarProgress(1);\n  }\n\n  isDeterminate() {\n    return this.determinate;\n  }\n\n  setProgress(value: number) {\n    this.progress = value;\n    if (this.determinate) {\n      this.setPrimaryBarProgress(value);\n      this.adapter.setAttribute(strings.ARIA_VALUENOW, value.toString());\n    }\n  }\n\n  getProgress() {\n    return this.progress;\n  }\n\n  setBuffer(value: number) {\n    this.buffer = value;\n    if (this.determinate) {\n      this.setBufferBarProgress(value);\n    }\n  }\n\n  getBuffer() {\n    return this.buffer;\n  }\n\n  open() {\n    this.adapter.removeClass(cssClasses.CLOSED_CLASS);\n    this.adapter.removeClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);\n    this.adapter.removeAttribute(strings.ARIA_HIDDEN);\n  }\n\n  close() {\n    this.adapter.addClass(cssClasses.CLOSED_CLASS);\n    this.adapter.setAttribute(strings.ARIA_HIDDEN, 'true');\n  }\n\n  isClosed() {\n    return this.adapter.hasClass(cssClasses.CLOSED_CLASS);\n  }\n\n  /**\n   * Handles the transitionend event emitted after `close()` is called and the\n   * opacity fades out. This is so that animations are removed only after the\n   * progress indicator is completely hidden.\n   */\n  handleTransitionEnd() {\n    if (this.adapter.hasClass(cssClasses.CLOSED_CLASS)) {\n      this.adapter.addClass(cssClasses.CLOSED_ANIMATION_OFF_CLASS);\n    }\n  }\n\n  override destroy() {\n    super.destroy();\n\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  restartAnimation() {\n    this.adapter.removeClass(cssClasses.ANIMATION_READY_CLASS);\n    this.adapter.forceLayout();\n    this.adapter.addClass(cssClasses.ANIMATION_READY_CLASS);\n  }\n\n  private setPrimaryBarProgress(progressValue: number) {\n    const value = `scaleX(${progressValue})`;\n\n    // Accessing `window` without a `typeof` check will throw on Node\n    // environments.\n    const transformProp = typeof window !== 'undefined' ?\n        getCorrectPropertyName(window, 'transform') :\n        'transform';\n    this.adapter.setPrimaryBarStyle(transformProp, value);\n  }\n\n  private setBufferBarProgress(progressValue: number) {\n    const value = `${progressValue * 100}%`;\n    this.adapter.setBufferBarStyle(strings.FLEX_BASIS, value);\n  }\n\n  private calculateAndSetDimensions(width: number) {\n    const primaryHalf = width * percents.PRIMARY_HALF;\n    const primaryFull = width * percents.PRIMARY_FULL;\n    const secondaryQuarter = width * percents.SECONDARY_QUARTER;\n    const secondaryHalf = width * percents.SECONDARY_HALF;\n    const secondaryFull = width * percents.SECONDARY_FULL;\n\n    this.adapter.setStyle(\n        '--mdc-linear-progress-primary-half', `${primaryHalf}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-primary-half-neg', `${- primaryHalf}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-primary-full', `${primaryFull}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-primary-full-neg', `${- primaryFull}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-secondary-quarter', `${secondaryQuarter}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-secondary-quarter-neg',\n        `${- secondaryQuarter}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-secondary-half', `${secondaryHalf}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-secondary-half-neg', `${- secondaryHalf}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-secondary-full', `${secondaryFull}px`);\n    this.adapter.setStyle(\n        '--mdc-linear-progress-secondary-full-neg', `${- secondaryFull}px`);\n\n    // need to restart animation for custom props to apply to keyframes\n    this.restartAnimation();\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCLinearProgressFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCComponent} from '@material/base/component';\nimport {applyPassive} from '@material/dom/events';\nimport {matches} from '@material/dom/ponyfill';\nimport {MDCRippleAdapter} from './adapter';\nimport {MDCRippleFoundation} from './foundation';\nimport {MDCRippleAttachOpts, MDCRippleCapableSurface} from './types';\nimport * as util from './util';\n\nexport type MDCRippleFactory = (el: Element, foundation?: MDCRippleFoundation) => MDCRipple;\n\nexport class MDCRipple extends MDCComponent<MDCRippleFoundation> implements MDCRippleCapableSurface {\n  static override attachTo(root: Element, opts: MDCRippleAttachOpts = {\n    isUnbounded: undefined\n  }): MDCRipple {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (opts.isUnbounded !== undefined) {\n      ripple.unbounded = opts.isUnbounded;\n    }\n    return ripple;\n  }\n\n  static createAdapter(instance: MDCRippleCapableSurface): MDCRippleAdapter {\n    return {\n      addClass: (className) => instance.root.classList.add(className),\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      computeBoundingRect: () => instance.root.getBoundingClientRect(),\n      containsEventTarget: (target) => instance.root.contains(target as Node),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n          document.documentElement.removeEventListener(\n              evtType, handler, applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n          (instance.root as HTMLElement)\n              .removeEventListener(evtType, handler, applyPassive()),\n      deregisterResizeHandler: (handler) =>\n          window.removeEventListener('resize', handler),\n      getWindowPageOffset: () =>\n          ({x: window.pageXOffset, y: window.pageYOffset}),\n      isSurfaceActive: () => matches(instance.root, ':active'),\n      isSurfaceDisabled: () => Boolean(instance.disabled),\n      isUnbounded: () => Boolean(instance.unbounded),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n          document.documentElement.addEventListener(\n              evtType, handler, applyPassive()),\n      registerInteractionHandler: (evtType, handler) =>\n          (instance.root as HTMLElement)\n              .addEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) =>\n          window.addEventListener('resize', handler),\n      removeClass: (className) => instance.root.classList.remove(className),\n      updateCssVariable: (varName, value) =>\n          (instance.root as HTMLElement).style.setProperty(varName, value),\n    };\n  }\n\n  disabled = false;\n\n  private isUnbounded?: boolean;\n\n  get unbounded(): boolean {\n    return Boolean(this.isUnbounded);\n  }\n\n  set unbounded(unbounded: boolean) {\n    this.isUnbounded = Boolean(unbounded);\n    this.setUnbounded();\n  }\n\n  activate() {\n    this.foundation.activate();\n  }\n\n  deactivate() {\n    this.foundation.deactivate();\n  }\n\n  layout() {\n    this.foundation.layout();\n  }\n\n  override getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  override initialSyncWithDOM() {\n    const root = this.root as HTMLElement;\n    this.isUnbounded = 'mdcRippleIsUnbounded' in root.dataset;\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   */\n  private setUnbounded() {\n    this.foundation.setUnbounded(Boolean(this.isUnbounded));\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nexport const cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n};\n\nexport const strings = {\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n};\n\nexport const numbers = {\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  INITIAL_ORIGIN_SCALE: 0.6,\n  PADDING: 10,\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport {MDCFoundation} from '@material/base/foundation';\nimport {MDCRippleAdapter} from './adapter';\nimport {cssClasses, numbers, strings} from './constants';\nimport {MDCRipplePoint} from './types';\nimport {getNormalizedEventCoords} from './util';\n\ninterface ActivationStateType {\n  isActivated?: boolean;\n  hasDeactivationUXRun?: boolean;\n  wasActivatedByPointer?: boolean;\n  wasElementMadeActive?: boolean;\n  activationEvent?: Event;\n  isProgrammatic?: boolean;\n}\n\ninterface FgTranslationCoordinates {\n  startPoint: MDCRipplePoint;\n  endPoint: MDCRipplePoint;\n}\n\ninterface Coordinates {\n  left: number;\n  top: number;\n}\n\ninterface EventHandlerNonNull {\n  (event: Event): any;\n}\n\ntype ActivationEventType = 'touchstart' | 'pointerdown' | 'mousedown' | 'keydown';\ntype DeactivationEventType = 'touchend' | 'pointerup' | 'mouseup' | 'contextmenu';\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES: ActivationEventType[] = [\n  'touchstart', 'pointerdown', 'mousedown', 'keydown',\n];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES: DeactivationEventType[] = [\n  'touchend', 'pointerup', 'mouseup', 'contextmenu',\n];\n\n// simultaneous nested activations\nlet activatedTargets: Array<EventTarget | null> = [];\n\nexport class MDCRippleFoundation extends MDCFoundation<MDCRippleAdapter> {\n  static override get cssClasses() {\n    return cssClasses;\n  }\n\n  static override get strings() {\n    return strings;\n  }\n\n  static override get numbers() {\n    return numbers;\n  }\n\n  static override get defaultAdapter(): MDCRippleAdapter {\n    return {\n      addClass: () => undefined,\n      browserSupportsCssVars: () => true,\n      computeBoundingRect: () =>\n          ({top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0} as any),\n      containsEventTarget: () => true,\n      deregisterDocumentInteractionHandler: () => undefined,\n      deregisterInteractionHandler: () => undefined,\n      deregisterResizeHandler: () => undefined,\n      getWindowPageOffset: () => ({x: 0, y: 0}),\n      isSurfaceActive: () => true,\n      isSurfaceDisabled: () => true,\n      isUnbounded: () => true,\n      registerDocumentInteractionHandler: () => undefined,\n      registerInteractionHandler: () => undefined,\n      registerResizeHandler: () => undefined,\n      removeClass: () => undefined,\n      updateCssVariable: () => undefined,\n    };\n  }\n\n  private activationAnimationHasEnded = false;\n  private activationState: ActivationStateType;\n  private activationTimer = 0;\n  private fgDeactivationRemovalTimer = 0;\n  private fgScale = '0';\n  private frame = {width: 0, height: 0};\n  private initialSize = 0;\n  private layoutFrame = 0;\n  private maxRadius = 0;\n  private unboundedCoords: Coordinates = {left: 0, top: 0};\n\n  private readonly activationTimerCallback: () => void;\n  private readonly activateHandler: EventHandlerNonNull;\n  private readonly deactivateHandler: EventHandlerNonNull;\n  private readonly focusHandler: EventHandlerNonNull;\n  private readonly blurHandler: EventHandlerNonNull;\n  private readonly resizeHandler: EventHandlerNonNull;\n\n  private previousActivationEvent?: Event;\n\n  constructor(adapter?: Partial<MDCRippleAdapter>) {\n    super({...MDCRippleFoundation.defaultAdapter, ...adapter});\n\n    this.activationState = this.defaultActivationState();\n\n    this.activationTimerCallback = () => {\n      this.activationAnimationHasEnded = true;\n      this.runDeactivationUXLogicIfReady();\n    };\n    this.activateHandler = (e) => {\n      this.activateImpl(e);\n    };\n    this.deactivateHandler = () => {\n      this.deactivateImpl();\n    };\n    this.focusHandler = () => {\n      this.handleFocus();\n    };\n    this.blurHandler = () => {\n      this.handleBlur();\n    };\n    this.resizeHandler = () => {\n      this.layout();\n    };\n  }\n\n  override init() {\n    const supportsPressRipple = this.supportsPressRipple();\n\n    this.registerRootHandlers(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter.addClass(ROOT);\n        if (this.adapter.isUnbounded()) {\n          this.adapter.addClass(UNBOUNDED);\n          // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n          this.layoutInternal();\n        }\n      });\n    }\n  }\n\n  override destroy() {\n    if (this.supportsPressRipple()) {\n      if (this.activationTimer) {\n        clearTimeout(this.activationTimer);\n        this.activationTimer = 0;\n        this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer) {\n        clearTimeout(this.fgDeactivationRemovalTimer);\n        this.fgDeactivationRemovalTimer = 0;\n        this.adapter.removeClass(\n            MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n      requestAnimationFrame(() => {\n        this.adapter.removeClass(ROOT);\n        this.adapter.removeClass(UNBOUNDED);\n        this.removeCssVars();\n      });\n    }\n\n    this.deregisterRootHandlers();\n    this.deregisterDeactivationHandlers();\n  }\n\n  /**\n   * @param evt Optional event containing position information.\n   */\n  activate(evt?: Event): void {\n    this.activateImpl(evt);\n  }\n\n  deactivate(): void {\n    this.deactivateImpl();\n  }\n\n  layout(): void {\n    if (this.layoutFrame) {\n      cancelAnimationFrame(this.layoutFrame);\n    }\n    this.layoutFrame = requestAnimationFrame(() => {\n      this.layoutInternal();\n      this.layoutFrame = 0;\n    });\n  }\n\n  setUnbounded(unbounded: boolean): void {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter.addClass(UNBOUNDED);\n    } else {\n      this.adapter.removeClass(UNBOUNDED);\n    }\n  }\n\n  handleFocus(): void {\n    requestAnimationFrame(\n        () => this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  handleBlur(): void {\n    requestAnimationFrame(\n        () => this.adapter.removeClass(\n            MDCRippleFoundation.cssClasses.BG_FOCUSED));\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   */\n  private supportsPressRipple(): boolean {\n    return this.adapter.browserSupportsCssVars();\n  }\n\n  private defaultActivationState(): ActivationStateType {\n    return {\n      activationEvent: undefined,\n      hasDeactivationUXRun: false,\n      isActivated: false,\n      isProgrammatic: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n    };\n  }\n\n  /**\n   * supportsPressRipple Passed from init to save a redundant function call\n   */\n  private registerRootHandlers(supportsPressRipple: boolean) {\n    if (supportsPressRipple) {\n      for (const evtType of ACTIVATION_EVENT_TYPES) {\n        this.adapter.registerInteractionHandler(evtType, this.activateHandler);\n      }\n      if (this.adapter.isUnbounded()) {\n        this.adapter.registerResizeHandler(this.resizeHandler);\n      }\n    }\n\n    this.adapter.registerInteractionHandler('focus', this.focusHandler);\n    this.adapter.registerInteractionHandler('blur', this.blurHandler);\n  }\n\n  private registerDeactivationHandlers(evt: Event) {\n    if (evt.type === 'keydown') {\n      this.adapter.registerInteractionHandler('keyup', this.deactivateHandler);\n    } else {\n      for (const evtType of POINTER_DEACTIVATION_EVENT_TYPES) {\n        this.adapter.registerDocumentInteractionHandler(\n            evtType, this.deactivateHandler);\n      }\n    }\n  }\n\n  private deregisterRootHandlers() {\n    for (const evtType of ACTIVATION_EVENT_TYPES) {\n      this.adapter.deregisterInteractionHandler(evtType, this.activateHandler);\n    }\n    this.adapter.deregisterInteractionHandler('focus', this.focusHandler);\n    this.adapter.deregisterInteractionHandler('blur', this.blurHandler);\n\n    if (this.adapter.isUnbounded()) {\n      this.adapter.deregisterResizeHandler(this.resizeHandler);\n    }\n  }\n\n  private deregisterDeactivationHandlers() {\n    this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler);\n    for (const evtType of POINTER_DEACTIVATION_EVENT_TYPES) {\n      this.adapter.deregisterDocumentInteractionHandler(\n          evtType, this.deactivateHandler);\n    }\n  }\n\n  private removeCssVars() {\n    const rippleStrings = MDCRippleFoundation.strings;\n    const keys = Object.keys(rippleStrings) as Array<keyof typeof rippleStrings>;\n    keys.forEach((key) => {\n      if (key.indexOf('VAR_') === 0) {\n        this.adapter.updateCssVariable(rippleStrings[key], null);\n      }\n    });\n  }\n\n  private activateImpl(evt?: Event) {\n    if (this.adapter.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent;\n    const isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = evt === undefined;\n    activationState.activationEvent = evt;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (\n        evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown'\n    );\n\n    const hasActivatedChild = evt !== undefined &&\n        activatedTargets.length > 0 &&\n        activatedTargets.some(\n            (target) => this.adapter.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState();\n      return;\n    }\n\n    if (evt !== undefined) {\n      activatedTargets.push(evt.target);\n      this.registerDeactivationHandlers(evt);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive(evt);\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation();\n    }\n\n    requestAnimationFrame(() => {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive\n          && evt !== undefined\n          && ((evt as KeyboardEvent).key === ' ' || (evt as KeyboardEvent).keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = this.checkElementMadeActive(evt);\n        if (activationState.wasElementMadeActive) {\n          this.animateActivation();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        this.activationState = this.defaultActivationState();\n      }\n    });\n  }\n\n  private checkElementMadeActive(evt?: Event) {\n    return (evt !== undefined && evt.type === 'keydown') ?\n        this.adapter.isSurfaceActive() :\n        true;\n  }\n\n  private animateActivation() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    this.layoutInternal();\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer);\n    clearTimeout(this.fgDeactivationRemovalTimer);\n    this.rmBoundedActivationClasses();\n    this.adapter.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter.computeBoundingRect();\n    this.adapter.addClass(FG_ACTIVATION);\n    this.activationTimer = setTimeout(() => {\n      this.activationTimerCallback();\n    }, DEACTIVATION_TIMEOUT_MS);\n  }\n\n  private getFgTranslationCoordinates(): FgTranslationCoordinates {\n    const {activationEvent, wasActivatedByPointer} = this.activationState;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n          activationEvent,\n          this.adapter.getWindowPageOffset(),\n          this.adapter.computeBoundingRect(),\n      );\n    } else {\n      startPoint = {\n        x: this.frame.width / 2,\n        y: this.frame.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize / 2),\n      y: startPoint.y - (this.initialSize / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame.width / 2) - (this.initialSize / 2),\n      y: (this.frame.height / 2) - (this.initialSize / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  private runDeactivationUXLogicIfReady() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded) {\n      this.rmBoundedActivationClasses();\n      this.adapter.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer = setTimeout(() => {\n        this.adapter.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  private rmBoundedActivationClasses() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded = false;\n    this.adapter.computeBoundingRect();\n  }\n\n  private resetActivationState() {\n    this.previousActivationEvent = this.activationState.activationEvent;\n    this.activationState = this.defaultActivationState();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(\n        () => this.previousActivationEvent = undefined,\n        MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  private deactivateImpl(): void {\n    const activationState = this.activationState;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state: ActivationStateType = {...activationState};\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(() => {\n        this.animateDeactivation(state);\n      });\n      this.resetActivationState();\n    } else {\n      this.deregisterDeactivationHandlers();\n      requestAnimationFrame(() => {\n        this.activationState.hasDeactivationUXRun = true;\n        this.animateDeactivation(state);\n        this.resetActivationState();\n      });\n    }\n  }\n\n  private animateDeactivation({wasActivatedByPointer, wasElementMadeActive}:\n                                  ActivationStateType) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady();\n    }\n  }\n\n  private layoutInternal() {\n    this.frame = this.adapter.computeBoundingRect();\n    const maxDim = Math.max(this.frame.height, this.frame.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(\n          Math.pow(this.frame.width, 2) + Math.pow(this.frame.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius = this.adapter.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    const initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n    // Unbounded ripple size should always be even number to equally center align.\n    if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n      this.initialSize = initialSize - 1;\n    } else {\n      this.initialSize = initialSize;\n    }\n    this.fgScale = `${this.maxRadius / this.initialSize}`;\n\n    this.updateLayoutCssVars();\n  }\n\n  private updateLayoutCssVars() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter.updateCssVariable(VAR_FG_SIZE, `${this.initialSize}px`);\n    this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale);\n\n    if (this.adapter.isUnbounded()) {\n      this.unboundedCoords = {\n        left: Math.round((this.frame.width / 2) - (this.initialSize / 2)),\n        top: Math.round((this.frame.height / 2) - (this.initialSize / 2)),\n      };\n\n      this.adapter.updateCssVariable(\n          VAR_LEFT, `${this.unboundedCoords.left}px`);\n      this.adapter.updateCssVariable(VAR_TOP, `${this.unboundedCoords.top}px`);\n    }\n  }\n}\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport {MDCRipplePoint} from './types';\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to\n * detect CSS custom variable support.\n */\nlet supportsCssVariables_: boolean | undefined;\n\nexport function supportsCssVariables(windowObj: typeof globalThis, forceRefresh = false): boolean {\n  const {CSS} = windowObj;\n  let supportsCssVars = supportsCssVariables_;\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables_;\n  }\n\n  const supportsFunctionPresent = CSS && typeof CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return false;\n  }\n\n  const explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n      CSS.supports('(--css-vars: yes)') &&\n      CSS.supports('color', '#00000000')\n  );\n\n  supportsCssVars =\n      explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus;\n\n  if (!forceRefresh) {\n    supportsCssVariables_ = supportsCssVars;\n  }\n  return supportsCssVars;\n}\n\nexport function getNormalizedEventCoords(evt: Event | undefined, pageOffset: MDCRipplePoint, clientRect: DOMRect):\n    MDCRipplePoint {\n  if (!evt) {\n    return {x: 0, y: 0};\n  }\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (evt.type === 'touchstart') {\n    const touchEvent = evt as TouchEvent;\n    normalizedX = touchEvent.changedTouches[0].pageX - documentX;\n    normalizedY = touchEvent.changedTouches[0].pageY - documentY;\n  } else {\n    const mouseEvent = evt as MouseEvent;\n    normalizedX = mouseEvent.pageX - documentX;\n    normalizedY = mouseEvent.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n"],"sourceRoot":""}