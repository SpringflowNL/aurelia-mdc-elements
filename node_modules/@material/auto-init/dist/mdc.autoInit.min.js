/*!
 Material Components for the Web
 Copyright (c) 2018 Google Inc.
 License: MIT
*/
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.autoInit=e():(t.mdc=t.mdc||{},t.mdc.autoInit=e())}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=86)}({86:function(t,e,n){"use strict";function o(t,e){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=void 0;"function"==typeof CustomEvent?o=new CustomEvent(t,{detail:e,bubbles:n}):(o=document.createEvent("CustomEvent"),o.initCustomEvent(t,n,!1,e)),document.dispatchEvent(o)}function r(){for(var t,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,r=[],c=e.querySelectorAll("[data-mdc-auto-init]"),a=0;t=c[a];a++){var d=t.dataset.mdcAutoInit;if(!d)throw new Error("(mdc-auto-init) Constructor name must be given.");var f=i[d];if("function"!=typeof f)throw new Error("(mdc-auto-init) Could not find constructor in registry for "+d);if(t[d])n("(mdc-auto-init) Component already initialized for "+t+". Skipping...");else{var l=f.attachTo(t);Object.defineProperty(t,d,{value:l,writable:!1,enumerable:!1,configurable:!0}),r.push(l)}}return o("MDCAutoInit:End",{}),r}Object.defineProperty(e,"__esModule",{value:!0}),e.default=r;/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var i=Object.create(null),u=console.warn.bind(console);r.register=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u;if("function"!=typeof e)throw new Error("(mdc-auto-init) Invalid Ctor value "+e+". Expected function");i[t]&&n("(mdc-auto-init) Overriding registration for "+t+" with "+e+". Was: "+i[t]),i[t]=e},r.deregister=function(t){delete i[t]},r.deregisterAll=function(){Object.keys(i).forEach(this.deregister,this)}}})});
//# sourceMappingURL=mdc.autoInit.min.js.map